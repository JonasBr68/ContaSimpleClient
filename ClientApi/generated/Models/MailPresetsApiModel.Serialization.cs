// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    public partial class MailPresetsApiModel : IUtf8JsonSerializable, IXmlSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Body))
            {
                writer.WritePropertyName("body");
                writer.WriteStringValue(Body);
            }
            if (Optional.IsDefined(DependencyType))
            {
                writer.WritePropertyName("dependencyType");
                writer.WriteStringValue(DependencyType.Value.ToString());
            }
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id");
                writer.WriteNumberValue(Id.Value);
            }
            if (Optional.IsDefined(IsDefault))
            {
                writer.WritePropertyName("isDefault");
                writer.WriteBooleanValue(IsDefault.Value);
            }
            if (Optional.IsDefined(Recipients))
            {
                writer.WritePropertyName("recipients");
                writer.WriteStringValue(Recipients);
            }
            if (Optional.IsDefined(Subject))
            {
                writer.WritePropertyName("subject");
                writer.WriteStringValue(Subject);
            }
            writer.WritePropertyName("title");
            writer.WriteStringValue(Title);
            writer.WriteEndObject();
        }

        internal static MailPresetsApiModel DeserializeMailPresetsApiModel(JsonElement element)
        {
            Optional<string> body = default;
            Optional<MailPresetsApiModelDependencyType> dependencyType = default;
            Optional<long> id = default;
            Optional<bool> isDefault = default;
            Optional<string> recipients = default;
            Optional<string> subject = default;
            string title = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("body"))
                {
                    body = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dependencyType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    dependencyType = new MailPresetsApiModelDependencyType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    id = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("isDefault"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isDefault = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("recipients"))
                {
                    recipients = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("subject"))
                {
                    subject = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("title"))
                {
                    title = property.Value.GetString();
                    continue;
                }
            }
            return new MailPresetsApiModel(body.Value, Optional.ToNullable(dependencyType), Optional.ToNullable(id), Optional.ToNullable(isDefault), recipients.Value, subject.Value, title);
        }

        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "MailPresetsApiModel");
            if (Optional.IsDefined(Body))
            {
                writer.WriteStartElement("body");
                writer.WriteValue(Body);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(DependencyType))
            {
                writer.WriteStartElement("dependencyType");
                writer.WriteValue(DependencyType.Value.ToString());
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(Id))
            {
                writer.WriteStartElement("id");
                writer.WriteValue(Id.Value);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(IsDefault))
            {
                writer.WriteStartElement("isDefault");
                writer.WriteValue(IsDefault.Value);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(Recipients))
            {
                writer.WriteStartElement("recipients");
                writer.WriteValue(Recipients);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(Subject))
            {
                writer.WriteStartElement("subject");
                writer.WriteValue(Subject);
                writer.WriteEndElement();
            }
            writer.WriteStartElement("title");
            writer.WriteValue(Title);
            writer.WriteEndElement();
            writer.WriteEndElement();
        }

        internal static MailPresetsApiModel DeserializeMailPresetsApiModel(XElement element)
        {
            string body = default;
            MailPresetsApiModelDependencyType? dependencyType = default;
            long? id = default;
            bool? isDefault = default;
            string recipients = default;
            string subject = default;
            string title = default;
            if (element.Element("body") is XElement bodyElement)
            {
                body = (string)bodyElement;
            }
            if (element.Element("dependencyType") is XElement dependencyTypeElement)
            {
                dependencyType = new MailPresetsApiModelDependencyType(dependencyTypeElement.Value);
            }
            if (element.Element("id") is XElement idElement)
            {
                id = (long?)idElement;
            }
            if (element.Element("isDefault") is XElement isDefaultElement)
            {
                isDefault = (bool?)isDefaultElement;
            }
            if (element.Element("recipients") is XElement recipientsElement)
            {
                recipients = (string)recipientsElement;
            }
            if (element.Element("subject") is XElement subjectElement)
            {
                subject = (string)subjectElement;
            }
            if (element.Element("title") is XElement titleElement)
            {
                title = (string)titleElement;
            }
            return new MailPresetsApiModel(body, dependencyType, id, isDefault, recipients, subject, title);
        }
    }
}
