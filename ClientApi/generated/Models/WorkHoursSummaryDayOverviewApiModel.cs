// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    /// <summary> Class that contains the summary of the entries and total worked time for a user in a specific day. </summary>
    public partial class WorkHoursSummaryDayOverviewApiModel
    {
        /// <summary> Initializes a new instance of WorkHoursSummaryDayOverviewApiModel. </summary>
        internal WorkHoursSummaryDayOverviewApiModel()
        {
            Entries = new ChangeTrackingList<WorkingHoursApiModel>();
        }

        /// <summary> Initializes a new instance of WorkHoursSummaryDayOverviewApiModel. </summary>
        /// <param name="employeeName"> The employee name. </param>
        /// <param name="entries"> A list of entries for the requested date. </param>
        /// <param name="firstStartTime"> The first start time (first entry). </param>
        /// <param name="firstStartTimeIsPreviousThanRequestedDate"> Returns if the first start time is previous than the requested date (the register starts before the requested date). </param>
        /// <param name="lastEndTime"> The last end time (last entry). </param>
        /// <param name="lastEndTimeIsLaterThanRequestedDate"> Returns if the last end time is later than the requested date (the register ends after the requested date). </param>
        /// <param name="requestedDate"> The requested date. </param>
        /// <param name="stopsNumber"> The number of stops (pauses for rest) of the day. </param>
        /// <param name="totalWorkedTimeInMinutes"> Returns the worked time in minutes. </param>
        /// <param name="unclosedEntries"> The unclosed entries. </param>
        /// <param name="userEmail"> The user email. </param>
        /// <param name="userId"> The user id. </param>
        /// <param name="workedHours"> Total worked hours. </param>
        /// <param name="workedMinutes"> Total worked minutes. </param>
        internal WorkHoursSummaryDayOverviewApiModel(string employeeName, IReadOnlyList<WorkingHoursApiModel> entries, DateTimeOffset? firstStartTime, bool? firstStartTimeIsPreviousThanRequestedDate, DateTimeOffset? lastEndTime, bool? lastEndTimeIsLaterThanRequestedDate, DateTimeOffset? requestedDate, int? stopsNumber, double? totalWorkedTimeInMinutes, int? unclosedEntries, string userEmail, long? userId, double? workedHours, double? workedMinutes)
        {
            EmployeeName = employeeName;
            Entries = entries;
            FirstStartTime = firstStartTime;
            FirstStartTimeIsPreviousThanRequestedDate = firstStartTimeIsPreviousThanRequestedDate;
            LastEndTime = lastEndTime;
            LastEndTimeIsLaterThanRequestedDate = lastEndTimeIsLaterThanRequestedDate;
            RequestedDate = requestedDate;
            StopsNumber = stopsNumber;
            TotalWorkedTimeInMinutes = totalWorkedTimeInMinutes;
            UnclosedEntries = unclosedEntries;
            UserEmail = userEmail;
            UserId = userId;
            WorkedHours = workedHours;
            WorkedMinutes = workedMinutes;
        }

        /// <summary> The employee name. </summary>
        public string EmployeeName { get; }
        /// <summary> A list of entries for the requested date. </summary>
        public IReadOnlyList<WorkingHoursApiModel> Entries { get; }
        /// <summary> The first start time (first entry). </summary>
        public DateTimeOffset? FirstStartTime { get; }
        /// <summary> Returns if the first start time is previous than the requested date (the register starts before the requested date). </summary>
        public bool? FirstStartTimeIsPreviousThanRequestedDate { get; }
        /// <summary> The last end time (last entry). </summary>
        public DateTimeOffset? LastEndTime { get; }
        /// <summary> Returns if the last end time is later than the requested date (the register ends after the requested date). </summary>
        public bool? LastEndTimeIsLaterThanRequestedDate { get; }
        /// <summary> The requested date. </summary>
        public DateTimeOffset? RequestedDate { get; }
        /// <summary> The number of stops (pauses for rest) of the day. </summary>
        public int? StopsNumber { get; }
        /// <summary> Returns the worked time in minutes. </summary>
        public double? TotalWorkedTimeInMinutes { get; }
        /// <summary> The unclosed entries. </summary>
        public int? UnclosedEntries { get; }
        /// <summary> The user email. </summary>
        public string UserEmail { get; }
        /// <summary> The user id. </summary>
        public long? UserId { get; }
        /// <summary> Total worked hours. </summary>
        public double? WorkedHours { get; }
        /// <summary> Total worked minutes. </summary>
        public double? WorkedMinutes { get; }
    }
}
