// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    /// <summary> Contains the information for a delivery note. </summary>
    public partial class DeliveryNoteApiModel
    {
        /// <summary> Initializes a new instance of DeliveryNoteApiModel. </summary>
        internal DeliveryNoteApiModel()
        {
            Lines = new ChangeTrackingList<DeliveryNoteLineApiModel>();
        }

        /// <summary> Initializes a new instance of DeliveryNoteApiModel. </summary>
        /// <param name="deliveryNoteDate"> The delivery note date. </param>
        /// <param name="entityString"> The name that represents the issuer or target entity of the delivery note. </param>
        /// <param name="footer"> The delivery note footer. </param>
        /// <param name="id"> The identifier of the delivery note. </param>
        /// <param name="issueDate"> Contains delivery note issue date (could be null). </param>
        /// <param name="issuer"> The entity issuer. The one who generated the delivery note. </param>
        /// <param name="lastUpdateDate"> The last time the delivery note was updated. </param>
        /// <param name="lines"> The line objects for the delivery note. </param>
        /// <param name="notes"> Delivery note notes. </param>
        /// <param name="number"> The delivery note number. </param>
        /// <param name="numberingFormatId"> If not NULL contains the identifier of the selected numbering format. </param>
        /// <param name="originalIssuerEntityID"> Original ID of the issuer of the delivery note. </param>
        /// <param name="originalTargetEntityID"> Original ID of the target of the delivery note. </param>
        /// <param name="relatedEstimateId"> The identifier of the estimate related to the delivery note (if exists). </param>
        /// <param name="retentionAmount"> The delivery note retention amount. </param>
        /// <param name="retentionPercentage"> The delivery note retention percentage. </param>
        /// <param name="status"> The current status of the delivery note. </param>
        /// <param name="target"> The entity target. The receiver of the delivery note. </param>
        /// <param name="totalAmount">
        /// Gets the total final amount for the delivery note (the value returned includes the
        /// 
        /// addition of the taxable amount plus the VAT amount for every line) less the
        /// 
        /// retention amount. TotalAmount = BI +IVA - Retencion + R.E.
        /// </param>
        /// <param name="totalReAmount"> The total RE amount of the delivery note. </param>
        /// <param name="totalTaxableAmount">
        /// Gets the total taxable amount for the delivery note (the value returned includes the
        /// 
        /// addition of the taxable amounts for the several lines). (Spain: Base imponible).
        /// </param>
        /// <param name="totalVatAmount">
        /// Gets the total VAT amount for the delivery note (the value returned includes the
        /// 
        /// addition of the VAT amounts for the several lines).
        /// </param>
        internal DeliveryNoteApiModel(DateTimeOffset? deliveryNoteDate, string entityString, string footer, long? id, DateTimeOffset? issueDate, DocumentEntityApiModel issuer, DateTimeOffset? lastUpdateDate, IReadOnlyList<DeliveryNoteLineApiModel> lines, string notes, string number, long? numberingFormatId, long? originalIssuerEntityID, long? originalTargetEntityID, long? relatedEstimateId, double? retentionAmount, double? retentionPercentage, DeliveryNoteApiModelStatus? status, DocumentEntityApiModel target, double? totalAmount, double? totalReAmount, double? totalTaxableAmount, double? totalVatAmount)
        {
            DeliveryNoteDate = deliveryNoteDate;
            EntityString = entityString;
            Footer = footer;
            Id = id;
            IssueDate = issueDate;
            Issuer = issuer;
            LastUpdateDate = lastUpdateDate;
            Lines = lines;
            Notes = notes;
            Number = number;
            NumberingFormatId = numberingFormatId;
            OriginalIssuerEntityID = originalIssuerEntityID;
            OriginalTargetEntityID = originalTargetEntityID;
            RelatedEstimateId = relatedEstimateId;
            RetentionAmount = retentionAmount;
            RetentionPercentage = retentionPercentage;
            Status = status;
            Target = target;
            TotalAmount = totalAmount;
            TotalReAmount = totalReAmount;
            TotalTaxableAmount = totalTaxableAmount;
            TotalVatAmount = totalVatAmount;
        }

        /// <summary> The delivery note date. </summary>
        public DateTimeOffset? DeliveryNoteDate { get; }
        /// <summary> The name that represents the issuer or target entity of the delivery note. </summary>
        public string EntityString { get; }
        /// <summary> The delivery note footer. </summary>
        public string Footer { get; }
        /// <summary> The identifier of the delivery note. </summary>
        public long? Id { get; }
        /// <summary> Contains delivery note issue date (could be null). </summary>
        public DateTimeOffset? IssueDate { get; }
        /// <summary> The entity issuer. The one who generated the delivery note. </summary>
        public DocumentEntityApiModel Issuer { get; }
        /// <summary> The last time the delivery note was updated. </summary>
        public DateTimeOffset? LastUpdateDate { get; }
        /// <summary> The line objects for the delivery note. </summary>
        public IReadOnlyList<DeliveryNoteLineApiModel> Lines { get; }
        /// <summary> Delivery note notes. </summary>
        public string Notes { get; }
        /// <summary> The delivery note number. </summary>
        public string Number { get; }
        /// <summary> If not NULL contains the identifier of the selected numbering format. </summary>
        public long? NumberingFormatId { get; }
        /// <summary> Original ID of the issuer of the delivery note. </summary>
        public long? OriginalIssuerEntityID { get; }
        /// <summary> Original ID of the target of the delivery note. </summary>
        public long? OriginalTargetEntityID { get; }
        /// <summary> The identifier of the estimate related to the delivery note (if exists). </summary>
        public long? RelatedEstimateId { get; }
        /// <summary> The delivery note retention amount. </summary>
        public double? RetentionAmount { get; }
        /// <summary> The delivery note retention percentage. </summary>
        public double? RetentionPercentage { get; }
        /// <summary> The current status of the delivery note. </summary>
        public DeliveryNoteApiModelStatus? Status { get; }
        /// <summary> The entity target. The receiver of the delivery note. </summary>
        public DocumentEntityApiModel Target { get; }
        /// <summary>
        /// Gets the total final amount for the delivery note (the value returned includes the
        /// 
        /// addition of the taxable amount plus the VAT amount for every line) less the
        /// 
        /// retention amount. TotalAmount = BI +IVA - Retencion + R.E.
        /// </summary>
        public double? TotalAmount { get; }
        /// <summary> The total RE amount of the delivery note. </summary>
        public double? TotalReAmount { get; }
        /// <summary>
        /// Gets the total taxable amount for the delivery note (the value returned includes the
        /// 
        /// addition of the taxable amounts for the several lines). (Spain: Base imponible).
        /// </summary>
        public double? TotalTaxableAmount { get; }
        /// <summary>
        /// Gets the total VAT amount for the delivery note (the value returned includes the
        /// 
        /// addition of the VAT amounts for the several lines).
        /// </summary>
        public double? TotalVatAmount { get; }
    }
}
