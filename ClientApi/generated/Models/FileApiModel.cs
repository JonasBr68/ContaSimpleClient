// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace ContasimpleAPI.Models
{
    /// <summary> Defines the information for a file or folder. </summary>
    public partial class FileApiModel
    {
        /// <summary> Initializes a new instance of FileApiModel. </summary>
        internal FileApiModel()
        {
        }

        /// <summary> Initializes a new instance of FileApiModel. </summary>
        /// <param name="aeatApprovedFileId"> Contains the identifier of the related certification document. </param>
        /// <param name="canBeModified"> Checks if the current file can be modified or deleted. </param>
        /// <param name="cannotBeModifiedBeforeDate"> Indicates that the current document cannot be updated or removed before this date. NULL indicates that the file does not have any modify or delete restriction. </param>
        /// <param name="code"> The code for the vitrual folders. </param>
        /// <param name="date"> The file update time. </param>
        /// <param name="dependencyId"> The identifier of teh dependency element. </param>
        /// <param name="dependencyNumber"> The number of the dependency element. </param>
        /// <param name="dependencySubType"> THe dependency subtype. </param>
        /// <param name="dependencyType"> The type of dependency. </param>
        /// <param name="description"> The file or folder description. </param>
        /// <param name="displayFullFilename"> The full display name. </param>
        /// <param name="extension"> The extension of the file. </param>
        /// <param name="filename"> The name of the file or folder. </param>
        /// <param name="id"> The identifier of the file ofr folder. </param>
        /// <param name="isAeatApproved"> Indicates if the file contains a certification document. </param>
        /// <param name="isAeatApprovedOriginal"> Indicates if the file contains the original picture of a certified document. </param>
        /// <param name="parentId"> The parent folder (if exists). </param>
        /// <param name="sha256Signature"> Contains the SHA256 signature of the file. </param>
        /// <param name="size"> The size of the file. </param>
        /// <param name="type"> The type of element. </param>
        internal FileApiModel(long? aeatApprovedFileId, bool? canBeModified, DateTimeOffset? cannotBeModifiedBeforeDate, string code, DateTimeOffset? date, long? dependencyId, string dependencyNumber, string dependencySubType, FileApiModelDependencyType? dependencyType, string description, string displayFullFilename, string extension, string filename, long? id, bool? isAeatApproved, bool? isAeatApprovedOriginal, long? parentId, string sha256Signature, long? size, FileApiModelType? type)
        {
            AeatApprovedFileId = aeatApprovedFileId;
            CanBeModified = canBeModified;
            CannotBeModifiedBeforeDate = cannotBeModifiedBeforeDate;
            Code = code;
            Date = date;
            DependencyId = dependencyId;
            DependencyNumber = dependencyNumber;
            DependencySubType = dependencySubType;
            DependencyType = dependencyType;
            Description = description;
            DisplayFullFilename = displayFullFilename;
            Extension = extension;
            Filename = filename;
            Id = id;
            IsAeatApproved = isAeatApproved;
            IsAeatApprovedOriginal = isAeatApprovedOriginal;
            ParentId = parentId;
            Sha256Signature = sha256Signature;
            Size = size;
            Type = type;
        }

        /// <summary> Contains the identifier of the related certification document. </summary>
        public long? AeatApprovedFileId { get; }
        /// <summary> Checks if the current file can be modified or deleted. </summary>
        public bool? CanBeModified { get; }
        /// <summary> Indicates that the current document cannot be updated or removed before this date. NULL indicates that the file does not have any modify or delete restriction. </summary>
        public DateTimeOffset? CannotBeModifiedBeforeDate { get; }
        /// <summary> The code for the vitrual folders. </summary>
        public string Code { get; }
        /// <summary> The file update time. </summary>
        public DateTimeOffset? Date { get; }
        /// <summary> The identifier of teh dependency element. </summary>
        public long? DependencyId { get; }
        /// <summary> The number of the dependency element. </summary>
        public string DependencyNumber { get; }
        /// <summary> THe dependency subtype. </summary>
        public string DependencySubType { get; }
        /// <summary> The type of dependency. </summary>
        public FileApiModelDependencyType? DependencyType { get; }
        /// <summary> The file or folder description. </summary>
        public string Description { get; }
        /// <summary> The full display name. </summary>
        public string DisplayFullFilename { get; }
        /// <summary> The extension of the file. </summary>
        public string Extension { get; }
        /// <summary> The name of the file or folder. </summary>
        public string Filename { get; }
        /// <summary> The identifier of the file ofr folder. </summary>
        public long? Id { get; }
        /// <summary> Indicates if the file contains a certification document. </summary>
        public bool? IsAeatApproved { get; }
        /// <summary> Indicates if the file contains the original picture of a certified document. </summary>
        public bool? IsAeatApprovedOriginal { get; }
        /// <summary> The parent folder (if exists). </summary>
        public long? ParentId { get; }
        /// <summary> Contains the SHA256 signature of the file. </summary>
        public string Sha256Signature { get; }
        /// <summary> The size of the file. </summary>
        public long? Size { get; }
        /// <summary> The type of element. </summary>
        public FileApiModelType? Type { get; }
    }
}
