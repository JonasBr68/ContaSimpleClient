// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Xml.Linq;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    public partial class ApiUserAuthenticationKeyApiModel
    {
        internal static ApiUserAuthenticationKeyApiModel DeserializeApiUserAuthenticationKeyApiModel(JsonElement element)
        {
            Optional<string> authenticationKey = default;
            Optional<string> client = default;
            Optional<DateTimeOffset> createTime = default;
            Optional<bool> isActive = default;
            Optional<DateTimeOffset> lastAccessTime = default;
            Optional<DateTimeOffset> updateTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("authenticationKey"))
                {
                    authenticationKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("client"))
                {
                    client = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("createTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    createTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("isActive"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isActive = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("lastAccessTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lastAccessTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("updateTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    updateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new ApiUserAuthenticationKeyApiModel(authenticationKey.Value, client.Value, Optional.ToNullable(createTime), Optional.ToNullable(isActive), Optional.ToNullable(lastAccessTime), Optional.ToNullable(updateTime));
        }

        internal static ApiUserAuthenticationKeyApiModel DeserializeApiUserAuthenticationKeyApiModel(XElement element)
        {
            string authenticationKey = default;
            string client = default;
            DateTimeOffset? createTime = default;
            bool? isActive = default;
            DateTimeOffset? lastAccessTime = default;
            DateTimeOffset? updateTime = default;
            if (element.Element("authenticationKey") is XElement authenticationKeyElement)
            {
                authenticationKey = (string)authenticationKeyElement;
            }
            if (element.Element("client") is XElement clientElement)
            {
                client = (string)clientElement;
            }
            if (element.Element("createTime") is XElement createTimeElement)
            {
                createTime = createTimeElement.GetDateTimeOffsetValue("O");
            }
            if (element.Element("isActive") is XElement isActiveElement)
            {
                isActive = (bool?)isActiveElement;
            }
            if (element.Element("lastAccessTime") is XElement lastAccessTimeElement)
            {
                lastAccessTime = lastAccessTimeElement.GetDateTimeOffsetValue("O");
            }
            if (element.Element("updateTime") is XElement updateTimeElement)
            {
                updateTime = updateTimeElement.GetDateTimeOffsetValue("O");
            }
            return new ApiUserAuthenticationKeyApiModel(authenticationKey, client, createTime, isActive, lastAccessTime, updateTime);
        }
    }
}
