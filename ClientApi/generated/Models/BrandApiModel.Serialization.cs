// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using System.Xml.Linq;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    public partial class BrandApiModel
    {
        internal static BrandApiModel DeserializeBrandApiModel(JsonElement element)
        {
            Optional<string> defaultCulture = default;
            Optional<string> hostname = default;
            Optional<long> id = default;
            Optional<string> matchPattern = default;
            Optional<string> name = default;
            Optional<long> priority = default;
            Optional<string> redirectAfterLogoutPage = default;
            Optional<string> redirectAfterSessionExpiredPage = default;
            Optional<string> startingPage = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("defaultCulture"))
                {
                    defaultCulture = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("hostname"))
                {
                    hostname = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    id = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("matchPattern"))
                {
                    matchPattern = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("priority"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    priority = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("redirectAfterLogoutPage"))
                {
                    redirectAfterLogoutPage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("redirectAfterSessionExpiredPage"))
                {
                    redirectAfterSessionExpiredPage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("startingPage"))
                {
                    startingPage = property.Value.GetString();
                    continue;
                }
            }
            return new BrandApiModel(defaultCulture.Value, hostname.Value, Optional.ToNullable(id), matchPattern.Value, name.Value, Optional.ToNullable(priority), redirectAfterLogoutPage.Value, redirectAfterSessionExpiredPage.Value, startingPage.Value);
        }

        internal static BrandApiModel DeserializeBrandApiModel(XElement element)
        {
            string defaultCulture = default;
            string hostname = default;
            long? id = default;
            string matchPattern = default;
            string name = default;
            long? priority = default;
            string redirectAfterLogoutPage = default;
            string redirectAfterSessionExpiredPage = default;
            string startingPage = default;
            if (element.Element("defaultCulture") is XElement defaultCultureElement)
            {
                defaultCulture = (string)defaultCultureElement;
            }
            if (element.Element("hostname") is XElement hostnameElement)
            {
                hostname = (string)hostnameElement;
            }
            if (element.Element("id") is XElement idElement)
            {
                id = (long?)idElement;
            }
            if (element.Element("matchPattern") is XElement matchPatternElement)
            {
                matchPattern = (string)matchPatternElement;
            }
            if (element.Element("name") is XElement nameElement)
            {
                name = (string)nameElement;
            }
            if (element.Element("priority") is XElement priorityElement)
            {
                priority = (long?)priorityElement;
            }
            if (element.Element("redirectAfterLogoutPage") is XElement redirectAfterLogoutPageElement)
            {
                redirectAfterLogoutPage = (string)redirectAfterLogoutPageElement;
            }
            if (element.Element("redirectAfterSessionExpiredPage") is XElement redirectAfterSessionExpiredPageElement)
            {
                redirectAfterSessionExpiredPage = (string)redirectAfterSessionExpiredPageElement;
            }
            if (element.Element("startingPage") is XElement startingPageElement)
            {
                startingPage = (string)startingPageElement;
            }
            return new BrandApiModel(defaultCulture, hostname, id, matchPattern, name, priority, redirectAfterLogoutPage, redirectAfterSessionExpiredPage, startingPage);
        }
    }
}
