// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace ContasimpleAPI.Models
{
    /// <summary> The retention type. </summary>
    public readonly partial struct RetentionTypeApiModelType : IEquatable<RetentionTypeApiModelType>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="RetentionTypeApiModelType"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public RetentionTypeApiModelType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string RegionFiscalValue = "RegionFiscal";
        private const string UsuarioValue = "Usuario";

        /// <summary> RegionFiscal. </summary>
        public static RetentionTypeApiModelType RegionFiscal { get; } = new RetentionTypeApiModelType(RegionFiscalValue);
        /// <summary> Usuario. </summary>
        public static RetentionTypeApiModelType Usuario { get; } = new RetentionTypeApiModelType(UsuarioValue);
        /// <summary> Determines if two <see cref="RetentionTypeApiModelType"/> values are the same. </summary>
        public static bool operator ==(RetentionTypeApiModelType left, RetentionTypeApiModelType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="RetentionTypeApiModelType"/> values are not the same. </summary>
        public static bool operator !=(RetentionTypeApiModelType left, RetentionTypeApiModelType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="RetentionTypeApiModelType"/>. </summary>
        public static implicit operator RetentionTypeApiModelType(string value) => new RetentionTypeApiModelType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is RetentionTypeApiModelType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(RetentionTypeApiModelType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
