// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    public partial class AccountingMonthlyInvoicesSummaryApiModel
    {
        internal static AccountingMonthlyInvoicesSummaryApiModel DeserializeAccountingMonthlyInvoicesSummaryApiModel(JsonElement element)
        {
            Optional<int> month = default;
            Optional<int> numberOfInvoices = default;
            Optional<double> totalAmount = default;
            Optional<double> totalBaseAmount = default;
            Optional<double> totalBaseAmountComputable = default;
            Optional<double> totalComputableAmount = default;
            Optional<double> totalRetentionAmount = default;
            Optional<double> totalVatAmount = default;
            Optional<double> totalVatAmountComputable = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("month"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    month = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("numberOfInvoices"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    numberOfInvoices = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("totalAmount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalAmount = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("totalBaseAmount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalBaseAmount = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("totalBaseAmountComputable"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalBaseAmountComputable = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("totalComputableAmount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalComputableAmount = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("totalRetentionAmount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalRetentionAmount = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("totalVatAmount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalVatAmount = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("totalVatAmountComputable"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalVatAmountComputable = property.Value.GetDouble();
                    continue;
                }
            }
            return new AccountingMonthlyInvoicesSummaryApiModel(Optional.ToNullable(month), Optional.ToNullable(numberOfInvoices), Optional.ToNullable(totalAmount), Optional.ToNullable(totalBaseAmount), Optional.ToNullable(totalBaseAmountComputable), Optional.ToNullable(totalComputableAmount), Optional.ToNullable(totalRetentionAmount), Optional.ToNullable(totalVatAmount), Optional.ToNullable(totalVatAmountComputable));
        }
    }
}
