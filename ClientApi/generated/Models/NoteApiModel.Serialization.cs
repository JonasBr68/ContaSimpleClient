// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    public partial class NoteApiModel : IUtf8JsonSerializable, IXmlSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(CreationDate))
            {
                writer.WritePropertyName("creationDate");
                writer.WriteStringValue(CreationDate.Value, "O");
            }
            writer.WritePropertyName("description");
            writer.WriteStringValue(Description);
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id");
                writer.WriteNumberValue(Id.Value);
            }
            if (Optional.IsDefined(LastUpdate))
            {
                writer.WritePropertyName("lastUpdate");
                writer.WriteStringValue(LastUpdate.Value, "O");
            }
            writer.WritePropertyName("title");
            writer.WriteStringValue(Title);
            if (Optional.IsDefined(UserId))
            {
                writer.WritePropertyName("userId");
                writer.WriteNumberValue(UserId.Value);
            }
            writer.WriteEndObject();
        }

        internal static NoteApiModel DeserializeNoteApiModel(JsonElement element)
        {
            Optional<DateTimeOffset> creationDate = default;
            string description = default;
            Optional<long> id = default;
            Optional<DateTimeOffset> lastUpdate = default;
            string title = default;
            Optional<long> userId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("creationDate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    creationDate = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    id = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("lastUpdate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lastUpdate = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("title"))
                {
                    title = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("userId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    userId = property.Value.GetInt64();
                    continue;
                }
            }
            return new NoteApiModel(Optional.ToNullable(creationDate), description, Optional.ToNullable(id), Optional.ToNullable(lastUpdate), title, Optional.ToNullable(userId));
        }

        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "NoteApiModel");
            if (Optional.IsDefined(CreationDate))
            {
                writer.WriteStartElement("creationDate");
                writer.WriteValue(CreationDate.Value, "O");
                writer.WriteEndElement();
            }
            writer.WriteStartElement("description");
            writer.WriteValue(Description);
            writer.WriteEndElement();
            if (Optional.IsDefined(Id))
            {
                writer.WriteStartElement("id");
                writer.WriteValue(Id.Value);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(LastUpdate))
            {
                writer.WriteStartElement("lastUpdate");
                writer.WriteValue(LastUpdate.Value, "O");
                writer.WriteEndElement();
            }
            writer.WriteStartElement("title");
            writer.WriteValue(Title);
            writer.WriteEndElement();
            if (Optional.IsDefined(UserId))
            {
                writer.WriteStartElement("userId");
                writer.WriteValue(UserId.Value);
                writer.WriteEndElement();
            }
            writer.WriteEndElement();
        }

        internal static NoteApiModel DeserializeNoteApiModel(XElement element)
        {
            DateTimeOffset? creationDate = default;
            string description = default;
            long? id = default;
            DateTimeOffset? lastUpdate = default;
            string title = default;
            long? userId = default;
            if (element.Element("creationDate") is XElement creationDateElement)
            {
                creationDate = creationDateElement.GetDateTimeOffsetValue("O");
            }
            if (element.Element("description") is XElement descriptionElement)
            {
                description = (string)descriptionElement;
            }
            if (element.Element("id") is XElement idElement)
            {
                id = (long?)idElement;
            }
            if (element.Element("lastUpdate") is XElement lastUpdateElement)
            {
                lastUpdate = lastUpdateElement.GetDateTimeOffsetValue("O");
            }
            if (element.Element("title") is XElement titleElement)
            {
                title = (string)titleElement;
            }
            if (element.Element("userId") is XElement userIdElement)
            {
                userId = (long?)userIdElement;
            }
            return new NoteApiModel(creationDate, description, id, lastUpdate, title, userId);
        }
    }
}
