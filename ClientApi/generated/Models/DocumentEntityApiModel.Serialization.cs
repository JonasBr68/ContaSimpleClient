// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using System.Xml.Linq;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    public partial class DocumentEntityApiModel
    {
        internal static DocumentEntityApiModel DeserializeDocumentEntityApiModel(JsonElement element)
        {
            Optional<string> address = default;
            Optional<string> city = default;
            Optional<string> country = default;
            Optional<long> countryId = default;
            Optional<string> customField1 = default;
            Optional<string> customField2 = default;
            Optional<string> email = default;
            Optional<string> fax = default;
            Optional<long> id = default;
            string nif = default;
            Optional<string> notes = default;
            string organization = default;
            Optional<string> phone = default;
            Optional<string> postalCode = default;
            Optional<string> province = default;
            Optional<string> url = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("address"))
                {
                    address = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("city"))
                {
                    city = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("country"))
                {
                    country = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("countryId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    countryId = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("customField1"))
                {
                    customField1 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("customField2"))
                {
                    customField2 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("email"))
                {
                    email = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("fax"))
                {
                    fax = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    id = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("nif"))
                {
                    nif = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("notes"))
                {
                    notes = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("organization"))
                {
                    organization = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("phone"))
                {
                    phone = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("postalCode"))
                {
                    postalCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("province"))
                {
                    province = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("url"))
                {
                    url = property.Value.GetString();
                    continue;
                }
            }
            return new DocumentEntityApiModel(address.Value, city.Value, country.Value, Optional.ToNullable(countryId), customField1.Value, customField2.Value, email.Value, fax.Value, Optional.ToNullable(id), nif, notes.Value, organization, phone.Value, postalCode.Value, province.Value, url.Value);
        }

        internal static DocumentEntityApiModel DeserializeDocumentEntityApiModel(XElement element)
        {
            string address = default;
            string city = default;
            string country = default;
            long? countryId = default;
            string customField1 = default;
            string customField2 = default;
            string email = default;
            string fax = default;
            long? id = default;
            string nif = default;
            string notes = default;
            string organization = default;
            string phone = default;
            string postalCode = default;
            string province = default;
            string url = default;
            if (element.Element("address") is XElement addressElement)
            {
                address = (string)addressElement;
            }
            if (element.Element("city") is XElement cityElement)
            {
                city = (string)cityElement;
            }
            if (element.Element("country") is XElement countryElement)
            {
                country = (string)countryElement;
            }
            if (element.Element("countryId") is XElement countryIdElement)
            {
                countryId = (long?)countryIdElement;
            }
            if (element.Element("customField1") is XElement customField1Element)
            {
                customField1 = (string)customField1Element;
            }
            if (element.Element("customField2") is XElement customField2Element)
            {
                customField2 = (string)customField2Element;
            }
            if (element.Element("email") is XElement emailElement)
            {
                email = (string)emailElement;
            }
            if (element.Element("fax") is XElement faxElement)
            {
                fax = (string)faxElement;
            }
            if (element.Element("id") is XElement idElement)
            {
                id = (long?)idElement;
            }
            if (element.Element("nif") is XElement nifElement)
            {
                nif = (string)nifElement;
            }
            if (element.Element("notes") is XElement notesElement)
            {
                notes = (string)notesElement;
            }
            if (element.Element("organization") is XElement organizationElement)
            {
                organization = (string)organizationElement;
            }
            if (element.Element("phone") is XElement phoneElement)
            {
                phone = (string)phoneElement;
            }
            if (element.Element("postalCode") is XElement postalCodeElement)
            {
                postalCode = (string)postalCodeElement;
            }
            if (element.Element("province") is XElement provinceElement)
            {
                province = (string)provinceElement;
            }
            if (element.Element("url") is XElement urlElement)
            {
                url = (string)urlElement;
            }
            return new DocumentEntityApiModel(address, city, country, countryId, customField1, customField2, email, fax, id, nif, notes, organization, phone, postalCode, province, url);
        }
    }
}
