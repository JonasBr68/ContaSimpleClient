// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using System.Xml.Linq;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    public partial class CountryApiModel
    {
        internal static CountryApiModel DeserializeCountryApiModel(JsonElement element)
        {
            Optional<string> defaultTimeZone = default;
            Optional<bool> displayOnAccountConfiguration = default;
            Optional<IReadOnlyList<FiscalRegionApiModel>> fiscalRegions = default;
            Optional<long> id = default;
            Optional<string> isoCodeAlpha2 = default;
            Optional<string> isoCodeAlpha3 = default;
            Optional<string> name = default;
            Optional<string> nifValidationRegex = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("defaultTimeZone"))
                {
                    defaultTimeZone = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("displayOnAccountConfiguration"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    displayOnAccountConfiguration = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("fiscalRegions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<FiscalRegionApiModel> array = new List<FiscalRegionApiModel>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(FiscalRegionApiModel.DeserializeFiscalRegionApiModel(item));
                    }
                    fiscalRegions = array;
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    id = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("isoCodeAlpha2"))
                {
                    isoCodeAlpha2 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isoCodeAlpha3"))
                {
                    isoCodeAlpha3 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nifValidationRegex"))
                {
                    nifValidationRegex = property.Value.GetString();
                    continue;
                }
            }
            return new CountryApiModel(defaultTimeZone.Value, Optional.ToNullable(displayOnAccountConfiguration), Optional.ToList(fiscalRegions), Optional.ToNullable(id), isoCodeAlpha2.Value, isoCodeAlpha3.Value, name.Value, nifValidationRegex.Value);
        }

        internal static CountryApiModel DeserializeCountryApiModel(XElement element)
        {
            string defaultTimeZone = default;
            bool? displayOnAccountConfiguration = default;
            long? id = default;
            string isoCodeAlpha2 = default;
            string isoCodeAlpha3 = default;
            string name = default;
            string nifValidationRegex = default;
            IReadOnlyList<FiscalRegionApiModel> fiscalRegions = default;
            if (element.Element("defaultTimeZone") is XElement defaultTimeZoneElement)
            {
                defaultTimeZone = (string)defaultTimeZoneElement;
            }
            if (element.Element("displayOnAccountConfiguration") is XElement displayOnAccountConfigurationElement)
            {
                displayOnAccountConfiguration = (bool?)displayOnAccountConfigurationElement;
            }
            if (element.Element("id") is XElement idElement)
            {
                id = (long?)idElement;
            }
            if (element.Element("isoCodeAlpha2") is XElement isoCodeAlpha2Element)
            {
                isoCodeAlpha2 = (string)isoCodeAlpha2Element;
            }
            if (element.Element("isoCodeAlpha3") is XElement isoCodeAlpha3Element)
            {
                isoCodeAlpha3 = (string)isoCodeAlpha3Element;
            }
            if (element.Element("name") is XElement nameElement)
            {
                name = (string)nameElement;
            }
            if (element.Element("nifValidationRegex") is XElement nifValidationRegexElement)
            {
                nifValidationRegex = (string)nifValidationRegexElement;
            }
            var array = new List<FiscalRegionApiModel>();
            foreach (var e in element.Elements("FiscalRegionApiModel"))
            {
                array.Add(FiscalRegionApiModel.DeserializeFiscalRegionApiModel(e));
            }
            fiscalRegions = array;
            return new CountryApiModel(defaultTimeZone, displayOnAccountConfiguration, fiscalRegions, id, isoCodeAlpha2, isoCodeAlpha3, name, nifValidationRegex);
        }
    }
}
