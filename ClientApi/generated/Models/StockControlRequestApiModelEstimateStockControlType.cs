// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace ContasimpleAPI.Models
{
    /// <summary> The estimates stock control configuration. </summary>
    public readonly partial struct StockControlRequestApiModelEstimateStockControlType : IEquatable<StockControlRequestApiModelEstimateStockControlType>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="StockControlRequestApiModelEstimateStockControlType"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public StockControlRequestApiModelEstimateStockControlType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NeverValue = "Never";
        private const string DeliveryNoteValue = "DeliveryNote";
        private const string InvoiceValue = "Invoice";

        /// <summary> Never. </summary>
        public static StockControlRequestApiModelEstimateStockControlType Never { get; } = new StockControlRequestApiModelEstimateStockControlType(NeverValue);
        /// <summary> DeliveryNote. </summary>
        public static StockControlRequestApiModelEstimateStockControlType DeliveryNote { get; } = new StockControlRequestApiModelEstimateStockControlType(DeliveryNoteValue);
        /// <summary> Invoice. </summary>
        public static StockControlRequestApiModelEstimateStockControlType Invoice { get; } = new StockControlRequestApiModelEstimateStockControlType(InvoiceValue);
        /// <summary> Determines if two <see cref="StockControlRequestApiModelEstimateStockControlType"/> values are the same. </summary>
        public static bool operator ==(StockControlRequestApiModelEstimateStockControlType left, StockControlRequestApiModelEstimateStockControlType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="StockControlRequestApiModelEstimateStockControlType"/> values are not the same. </summary>
        public static bool operator !=(StockControlRequestApiModelEstimateStockControlType left, StockControlRequestApiModelEstimateStockControlType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="StockControlRequestApiModelEstimateStockControlType"/>. </summary>
        public static implicit operator StockControlRequestApiModelEstimateStockControlType(string value) => new StockControlRequestApiModelEstimateStockControlType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is StockControlRequestApiModelEstimateStockControlType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(StockControlRequestApiModelEstimateStockControlType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
