// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    public partial class SupportMessageTemplateApiModel : IUtf8JsonSerializable, IXmlSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Category))
            {
                writer.WritePropertyName("category");
                writer.WriteStringValue(Category);
            }
            if (Optional.IsDefined(CreationDate))
            {
                writer.WritePropertyName("creationDate");
                writer.WriteStringValue(CreationDate.Value, "O");
            }
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id");
                writer.WriteNumberValue(Id.Value);
            }
            if (Optional.IsDefined(LastUpdate))
            {
                writer.WritePropertyName("lastUpdate");
                writer.WriteStringValue(LastUpdate.Value, "O");
            }
            writer.WritePropertyName("message");
            writer.WriteStringValue(Message);
            writer.WritePropertyName("title");
            writer.WriteStringValue(Title);
            writer.WriteEndObject();
        }

        internal static SupportMessageTemplateApiModel DeserializeSupportMessageTemplateApiModel(JsonElement element)
        {
            Optional<string> category = default;
            Optional<DateTimeOffset> creationDate = default;
            Optional<long> id = default;
            Optional<DateTimeOffset> lastUpdate = default;
            string message = default;
            string title = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("category"))
                {
                    category = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("creationDate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    creationDate = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    id = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("lastUpdate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lastUpdate = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("message"))
                {
                    message = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("title"))
                {
                    title = property.Value.GetString();
                    continue;
                }
            }
            return new SupportMessageTemplateApiModel(category.Value, Optional.ToNullable(creationDate), Optional.ToNullable(id), Optional.ToNullable(lastUpdate), message, title);
        }

        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "SupportMessageTemplateApiModel");
            if (Optional.IsDefined(Category))
            {
                writer.WriteStartElement("category");
                writer.WriteValue(Category);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(CreationDate))
            {
                writer.WriteStartElement("creationDate");
                writer.WriteValue(CreationDate.Value, "O");
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(Id))
            {
                writer.WriteStartElement("id");
                writer.WriteValue(Id.Value);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(LastUpdate))
            {
                writer.WriteStartElement("lastUpdate");
                writer.WriteValue(LastUpdate.Value, "O");
                writer.WriteEndElement();
            }
            writer.WriteStartElement("message");
            writer.WriteValue(Message);
            writer.WriteEndElement();
            writer.WriteStartElement("title");
            writer.WriteValue(Title);
            writer.WriteEndElement();
            writer.WriteEndElement();
        }

        internal static SupportMessageTemplateApiModel DeserializeSupportMessageTemplateApiModel(XElement element)
        {
            string category = default;
            DateTimeOffset? creationDate = default;
            long? id = default;
            DateTimeOffset? lastUpdate = default;
            string message = default;
            string title = default;
            if (element.Element("category") is XElement categoryElement)
            {
                category = (string)categoryElement;
            }
            if (element.Element("creationDate") is XElement creationDateElement)
            {
                creationDate = creationDateElement.GetDateTimeOffsetValue("O");
            }
            if (element.Element("id") is XElement idElement)
            {
                id = (long?)idElement;
            }
            if (element.Element("lastUpdate") is XElement lastUpdateElement)
            {
                lastUpdate = lastUpdateElement.GetDateTimeOffsetValue("O");
            }
            if (element.Element("message") is XElement messageElement)
            {
                message = (string)messageElement;
            }
            if (element.Element("title") is XElement titleElement)
            {
                title = (string)titleElement;
            }
            return new SupportMessageTemplateApiModel(category, creationDate, id, lastUpdate, message, title);
        }
    }
}
