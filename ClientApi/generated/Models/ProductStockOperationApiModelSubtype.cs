// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace ContasimpleAPI.Models
{
    /// <summary> The stock operation subtype (adds more information about the type property). </summary>
    public readonly partial struct ProductStockOperationApiModelSubtype : IEquatable<ProductStockOperationApiModelSubtype>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="ProductStockOperationApiModelSubtype"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ProductStockOperationApiModelSubtype(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoneValue = "None";
        private const string ProductStockControlSettingValue = "ProductStockControlSetting";
        private const string DeliveryNoteStockControlSettingValue = "DeliveryNoteStockControlSetting";
        private const string DeliveryNoteInvoicingStockControlSettingValue = "DeliveryNoteInvoicingStockControlSetting";
        private const string RecoverDeliveryNoteStockControlSettingValue = "RecoverDeliveryNoteStockControlSetting";
        private const string InvoiceStockControlSettingValue = "InvoiceStockControlSetting";
        private const string RecoverInvoiceStockControlSettingValue = "RecoverInvoiceStockControlSetting";
        private const string ProductStockControlSettingFromImportValue = "ProductStockControlSettingFromImport";
        private const string ResetStockValue = "ResetStock";
        private const string AbsoluteStockValue = "AbsoluteStock";
        private const string RelativeStockValue = "RelativeStock";
        private const string EstimateStockControlSettingValue = "EstimateStockControlSetting";
        private const string EstimateInvoicingStockControlSettingValue = "EstimateInvoicingStockControlSetting";
        private const string EstimateToDeliveryNoteStockControlSettingValue = "EstimateToDeliveryNoteStockControlSetting";

        /// <summary> None. </summary>
        public static ProductStockOperationApiModelSubtype None { get; } = new ProductStockOperationApiModelSubtype(NoneValue);
        /// <summary> ProductStockControlSetting. </summary>
        public static ProductStockOperationApiModelSubtype ProductStockControlSetting { get; } = new ProductStockOperationApiModelSubtype(ProductStockControlSettingValue);
        /// <summary> DeliveryNoteStockControlSetting. </summary>
        public static ProductStockOperationApiModelSubtype DeliveryNoteStockControlSetting { get; } = new ProductStockOperationApiModelSubtype(DeliveryNoteStockControlSettingValue);
        /// <summary> DeliveryNoteInvoicingStockControlSetting. </summary>
        public static ProductStockOperationApiModelSubtype DeliveryNoteInvoicingStockControlSetting { get; } = new ProductStockOperationApiModelSubtype(DeliveryNoteInvoicingStockControlSettingValue);
        /// <summary> RecoverDeliveryNoteStockControlSetting. </summary>
        public static ProductStockOperationApiModelSubtype RecoverDeliveryNoteStockControlSetting { get; } = new ProductStockOperationApiModelSubtype(RecoverDeliveryNoteStockControlSettingValue);
        /// <summary> InvoiceStockControlSetting. </summary>
        public static ProductStockOperationApiModelSubtype InvoiceStockControlSetting { get; } = new ProductStockOperationApiModelSubtype(InvoiceStockControlSettingValue);
        /// <summary> RecoverInvoiceStockControlSetting. </summary>
        public static ProductStockOperationApiModelSubtype RecoverInvoiceStockControlSetting { get; } = new ProductStockOperationApiModelSubtype(RecoverInvoiceStockControlSettingValue);
        /// <summary> ProductStockControlSettingFromImport. </summary>
        public static ProductStockOperationApiModelSubtype ProductStockControlSettingFromImport { get; } = new ProductStockOperationApiModelSubtype(ProductStockControlSettingFromImportValue);
        /// <summary> ResetStock. </summary>
        public static ProductStockOperationApiModelSubtype ResetStock { get; } = new ProductStockOperationApiModelSubtype(ResetStockValue);
        /// <summary> AbsoluteStock. </summary>
        public static ProductStockOperationApiModelSubtype AbsoluteStock { get; } = new ProductStockOperationApiModelSubtype(AbsoluteStockValue);
        /// <summary> RelativeStock. </summary>
        public static ProductStockOperationApiModelSubtype RelativeStock { get; } = new ProductStockOperationApiModelSubtype(RelativeStockValue);
        /// <summary> EstimateStockControlSetting. </summary>
        public static ProductStockOperationApiModelSubtype EstimateStockControlSetting { get; } = new ProductStockOperationApiModelSubtype(EstimateStockControlSettingValue);
        /// <summary> EstimateInvoicingStockControlSetting. </summary>
        public static ProductStockOperationApiModelSubtype EstimateInvoicingStockControlSetting { get; } = new ProductStockOperationApiModelSubtype(EstimateInvoicingStockControlSettingValue);
        /// <summary> EstimateToDeliveryNoteStockControlSetting. </summary>
        public static ProductStockOperationApiModelSubtype EstimateToDeliveryNoteStockControlSetting { get; } = new ProductStockOperationApiModelSubtype(EstimateToDeliveryNoteStockControlSettingValue);
        /// <summary> Determines if two <see cref="ProductStockOperationApiModelSubtype"/> values are the same. </summary>
        public static bool operator ==(ProductStockOperationApiModelSubtype left, ProductStockOperationApiModelSubtype right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ProductStockOperationApiModelSubtype"/> values are not the same. </summary>
        public static bool operator !=(ProductStockOperationApiModelSubtype left, ProductStockOperationApiModelSubtype right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ProductStockOperationApiModelSubtype"/>. </summary>
        public static implicit operator ProductStockOperationApiModelSubtype(string value) => new ProductStockOperationApiModelSubtype(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ProductStockOperationApiModelSubtype other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ProductStockOperationApiModelSubtype other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
