// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using System.Xml.Linq;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    public partial class WorkingHoursSumTotalApiModel
    {
        internal static WorkingHoursSumTotalApiModel DeserializeWorkingHoursSumTotalApiModel(JsonElement element)
        {
            Optional<string> employeeName = default;
            Optional<long> totalDays = default;
            Optional<double> totalHours = default;
            Optional<long> totalUnclosedEntries = default;
            Optional<string> totalWorkedHoursAndMinutesShortFormatted = default;
            Optional<long> userId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("employeeName"))
                {
                    employeeName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("totalDays"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalDays = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("totalHours"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalHours = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("totalUnclosedEntries"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalUnclosedEntries = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("totalWorkedHoursAndMinutesShortFormatted"))
                {
                    totalWorkedHoursAndMinutesShortFormatted = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("userId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    userId = property.Value.GetInt64();
                    continue;
                }
            }
            return new WorkingHoursSumTotalApiModel(employeeName.Value, Optional.ToNullable(totalDays), Optional.ToNullable(totalHours), Optional.ToNullable(totalUnclosedEntries), totalWorkedHoursAndMinutesShortFormatted.Value, Optional.ToNullable(userId));
        }

        internal static WorkingHoursSumTotalApiModel DeserializeWorkingHoursSumTotalApiModel(XElement element)
        {
            string employeeName = default;
            long? totalDays = default;
            double? totalHours = default;
            long? totalUnclosedEntries = default;
            string totalWorkedHoursAndMinutesShortFormatted = default;
            long? userId = default;
            if (element.Element("employeeName") is XElement employeeNameElement)
            {
                employeeName = (string)employeeNameElement;
            }
            if (element.Element("totalDays") is XElement totalDaysElement)
            {
                totalDays = (long?)totalDaysElement;
            }
            if (element.Element("totalHours") is XElement totalHoursElement)
            {
                totalHours = (double?)totalHoursElement;
            }
            if (element.Element("totalUnclosedEntries") is XElement totalUnclosedEntriesElement)
            {
                totalUnclosedEntries = (long?)totalUnclosedEntriesElement;
            }
            if (element.Element("totalWorkedHoursAndMinutesShortFormatted") is XElement totalWorkedHoursAndMinutesShortFormattedElement)
            {
                totalWorkedHoursAndMinutesShortFormatted = (string)totalWorkedHoursAndMinutesShortFormattedElement;
            }
            if (element.Element("userId") is XElement userIdElement)
            {
                userId = (long?)userIdElement;
            }
            return new WorkingHoursSumTotalApiModel(employeeName, totalDays, totalHours, totalUnclosedEntries, totalWorkedHoursAndMinutesShortFormatted, userId);
        }
    }
}
