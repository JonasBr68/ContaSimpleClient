// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    /// <summary> Transforms the data from UserWorkingHours individual entries to daily computed minutes worked for users. </summary>
    public partial class WorkingHoursSumDailyApiModel
    {
        /// <summary> Initializes a new instance of WorkingHoursSumDailyApiModel. </summary>
        internal WorkingHoursSumDailyApiModel()
        {
            Entries = new ChangeTrackingList<WorkingHoursReportEntryApiModel>();
        }

        /// <summary> Initializes a new instance of WorkingHoursSumDailyApiModel. </summary>
        /// <param name="employeeName"> The employee name (name + surname or contactEmail). </param>
        /// <param name="entries"> The list of the worked entries for the user. </param>
        /// <param name="hasEntries"> Returns if the user has working hours entries between the selected dates. </param>
        /// <param name="totalDays"> The total days. </param>
        /// <param name="totalHours"> The total hours worked. </param>
        /// <param name="totalHoursAndDaysFormatted"> The total hours and days summary string formatted. </param>
        /// <param name="totalHoursMinutesAndDaysFormatted"> The total hours, minutes and days string formatted. </param>
        /// <param name="totalUnclosedEntries"> The total unclosed entries. </param>
        /// <param name="totalWorkedHoursAndMinutesShortFormatted"> The total worked hours and minutes short formatted. </param>
        /// <param name="userId"> The ID of the user. </param>
        internal WorkingHoursSumDailyApiModel(string employeeName, IReadOnlyList<WorkingHoursReportEntryApiModel> entries, bool? hasEntries, int? totalDays, double? totalHours, string totalHoursAndDaysFormatted, string totalHoursMinutesAndDaysFormatted, int? totalUnclosedEntries, string totalWorkedHoursAndMinutesShortFormatted, long? userId)
        {
            EmployeeName = employeeName;
            Entries = entries;
            HasEntries = hasEntries;
            TotalDays = totalDays;
            TotalHours = totalHours;
            TotalHoursAndDaysFormatted = totalHoursAndDaysFormatted;
            TotalHoursMinutesAndDaysFormatted = totalHoursMinutesAndDaysFormatted;
            TotalUnclosedEntries = totalUnclosedEntries;
            TotalWorkedHoursAndMinutesShortFormatted = totalWorkedHoursAndMinutesShortFormatted;
            UserId = userId;
        }

        /// <summary> The employee name (name + surname or contactEmail). </summary>
        public string EmployeeName { get; }
        /// <summary> The list of the worked entries for the user. </summary>
        public IReadOnlyList<WorkingHoursReportEntryApiModel> Entries { get; }
        /// <summary> Returns if the user has working hours entries between the selected dates. </summary>
        public bool? HasEntries { get; }
        /// <summary> The total days. </summary>
        public int? TotalDays { get; }
        /// <summary> The total hours worked. </summary>
        public double? TotalHours { get; }
        /// <summary> The total hours and days summary string formatted. </summary>
        public string TotalHoursAndDaysFormatted { get; }
        /// <summary> The total hours, minutes and days string formatted. </summary>
        public string TotalHoursMinutesAndDaysFormatted { get; }
        /// <summary> The total unclosed entries. </summary>
        public int? TotalUnclosedEntries { get; }
        /// <summary> The total worked hours and minutes short formatted. </summary>
        public string TotalWorkedHoursAndMinutesShortFormatted { get; }
        /// <summary> The ID of the user. </summary>
        public long? UserId { get; }
    }
}
