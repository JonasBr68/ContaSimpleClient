// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    public partial class NotificationsAccountPreferencesApiModel : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(Company))
            {
                writer.WritePropertyName("company");
                writer.WriteStartArray();
                foreach (var item in Company)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(User))
            {
                writer.WritePropertyName("user");
                writer.WriteStartArray();
                foreach (var item in User)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static NotificationsAccountPreferencesApiModel DeserializeNotificationsAccountPreferencesApiModel(JsonElement element)
        {
            Optional<IList<NotificationsPreferencesApiModel>> company = default;
            Optional<IList<NotificationsPreferencesApiModel>> user = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("company"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<NotificationsPreferencesApiModel> array = new List<NotificationsPreferencesApiModel>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(NotificationsPreferencesApiModel.DeserializeNotificationsPreferencesApiModel(item));
                    }
                    company = array;
                    continue;
                }
                if (property.NameEquals("user"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<NotificationsPreferencesApiModel> array = new List<NotificationsPreferencesApiModel>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(NotificationsPreferencesApiModel.DeserializeNotificationsPreferencesApiModel(item));
                    }
                    user = array;
                    continue;
                }
            }
            return new NotificationsAccountPreferencesApiModel(Optional.ToList(company), Optional.ToList(user));
        }
    }
}
