// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace ContasimpleAPI.Models
{
    /// <summary> The stock operation type (the reason of the operation). </summary>
    public readonly partial struct ProductStockOperationRequestApiModelType : IEquatable<ProductStockOperationRequestApiModelType>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="ProductStockOperationRequestApiModelType"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ProductStockOperationRequestApiModelType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string InvoiceValue = "Invoice";
        private const string DeliveryNoteValue = "DeliveryNote";
        private const string InitialStockValue = "InitialStock";
        private const string ImportValue = "Import";
        private const string LostValue = "Lost";
        private const string FoundValue = "Found";
        private const string BuyValue = "Buy";
        private const string SellValue = "Sell";
        private const string OtherValue = "Other";
        private const string StockControlSettingValue = "StockControlSetting";
        private const string ProductRemovedValue = "ProductRemoved";
        private const string ProviderReturnValue = "ProviderReturn";

        /// <summary> Invoice. </summary>
        public static ProductStockOperationRequestApiModelType Invoice { get; } = new ProductStockOperationRequestApiModelType(InvoiceValue);
        /// <summary> DeliveryNote. </summary>
        public static ProductStockOperationRequestApiModelType DeliveryNote { get; } = new ProductStockOperationRequestApiModelType(DeliveryNoteValue);
        /// <summary> InitialStock. </summary>
        public static ProductStockOperationRequestApiModelType InitialStock { get; } = new ProductStockOperationRequestApiModelType(InitialStockValue);
        /// <summary> Import. </summary>
        public static ProductStockOperationRequestApiModelType Import { get; } = new ProductStockOperationRequestApiModelType(ImportValue);
        /// <summary> Lost. </summary>
        public static ProductStockOperationRequestApiModelType Lost { get; } = new ProductStockOperationRequestApiModelType(LostValue);
        /// <summary> Found. </summary>
        public static ProductStockOperationRequestApiModelType Found { get; } = new ProductStockOperationRequestApiModelType(FoundValue);
        /// <summary> Buy. </summary>
        public static ProductStockOperationRequestApiModelType Buy { get; } = new ProductStockOperationRequestApiModelType(BuyValue);
        /// <summary> Sell. </summary>
        public static ProductStockOperationRequestApiModelType Sell { get; } = new ProductStockOperationRequestApiModelType(SellValue);
        /// <summary> Other. </summary>
        public static ProductStockOperationRequestApiModelType Other { get; } = new ProductStockOperationRequestApiModelType(OtherValue);
        /// <summary> StockControlSetting. </summary>
        public static ProductStockOperationRequestApiModelType StockControlSetting { get; } = new ProductStockOperationRequestApiModelType(StockControlSettingValue);
        /// <summary> ProductRemoved. </summary>
        public static ProductStockOperationRequestApiModelType ProductRemoved { get; } = new ProductStockOperationRequestApiModelType(ProductRemovedValue);
        /// <summary> ProviderReturn. </summary>
        public static ProductStockOperationRequestApiModelType ProviderReturn { get; } = new ProductStockOperationRequestApiModelType(ProviderReturnValue);
        /// <summary> Determines if two <see cref="ProductStockOperationRequestApiModelType"/> values are the same. </summary>
        public static bool operator ==(ProductStockOperationRequestApiModelType left, ProductStockOperationRequestApiModelType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ProductStockOperationRequestApiModelType"/> values are not the same. </summary>
        public static bool operator !=(ProductStockOperationRequestApiModelType left, ProductStockOperationRequestApiModelType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ProductStockOperationRequestApiModelType"/>. </summary>
        public static implicit operator ProductStockOperationRequestApiModelType(string value) => new ProductStockOperationRequestApiModelType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ProductStockOperationRequestApiModelType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ProductStockOperationRequestApiModelType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
