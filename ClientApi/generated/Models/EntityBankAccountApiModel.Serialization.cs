// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    public partial class EntityBankAccountApiModel : IUtf8JsonSerializable, IXmlSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Bic))
            {
                writer.WritePropertyName("bic");
                writer.WriteStringValue(Bic);
            }
            if (Optional.IsDefined(CompanyId))
            {
                writer.WritePropertyName("companyId");
                writer.WriteNumberValue(CompanyId.Value);
            }
            writer.WritePropertyName("entityId");
            writer.WriteNumberValue(EntityId);
            writer.WritePropertyName("iban");
            writer.WriteStringValue(Iban);
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id");
                writer.WriteNumberValue(Id.Value);
            }
            if (Optional.IsDefined(IsDefault))
            {
                writer.WritePropertyName("isDefault");
                writer.WriteBooleanValue(IsDefault.Value);
            }
            if (Optional.IsDefined(Notes))
            {
                writer.WritePropertyName("notes");
                writer.WriteStringValue(Notes);
            }
            writer.WriteEndObject();
        }

        internal static EntityBankAccountApiModel DeserializeEntityBankAccountApiModel(JsonElement element)
        {
            Optional<string> bic = default;
            Optional<long> companyId = default;
            long entityId = default;
            string iban = default;
            Optional<long> id = default;
            Optional<bool> isDefault = default;
            Optional<string> notes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("bic"))
                {
                    bic = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("companyId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    companyId = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("entityId"))
                {
                    entityId = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("iban"))
                {
                    iban = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    id = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("isDefault"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isDefault = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("notes"))
                {
                    notes = property.Value.GetString();
                    continue;
                }
            }
            return new EntityBankAccountApiModel(bic.Value, Optional.ToNullable(companyId), entityId, iban, Optional.ToNullable(id), Optional.ToNullable(isDefault), notes.Value);
        }

        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "EntityBankAccountApiModel");
            if (Optional.IsDefined(Bic))
            {
                writer.WriteStartElement("bic");
                writer.WriteValue(Bic);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(CompanyId))
            {
                writer.WriteStartElement("companyId");
                writer.WriteValue(CompanyId.Value);
                writer.WriteEndElement();
            }
            writer.WriteStartElement("entityId");
            writer.WriteValue(EntityId);
            writer.WriteEndElement();
            writer.WriteStartElement("iban");
            writer.WriteValue(Iban);
            writer.WriteEndElement();
            if (Optional.IsDefined(Id))
            {
                writer.WriteStartElement("id");
                writer.WriteValue(Id.Value);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(IsDefault))
            {
                writer.WriteStartElement("isDefault");
                writer.WriteValue(IsDefault.Value);
                writer.WriteEndElement();
            }
            if (Optional.IsDefined(Notes))
            {
                writer.WriteStartElement("notes");
                writer.WriteValue(Notes);
                writer.WriteEndElement();
            }
            writer.WriteEndElement();
        }

        internal static EntityBankAccountApiModel DeserializeEntityBankAccountApiModel(XElement element)
        {
            string bic = default;
            long? companyId = default;
            long entityId = default;
            string iban = default;
            long? id = default;
            bool? isDefault = default;
            string notes = default;
            if (element.Element("bic") is XElement bicElement)
            {
                bic = (string)bicElement;
            }
            if (element.Element("companyId") is XElement companyIdElement)
            {
                companyId = (long?)companyIdElement;
            }
            if (element.Element("entityId") is XElement entityIdElement)
            {
                entityId = (long)entityIdElement;
            }
            if (element.Element("iban") is XElement ibanElement)
            {
                iban = (string)ibanElement;
            }
            if (element.Element("id") is XElement idElement)
            {
                id = (long?)idElement;
            }
            if (element.Element("isDefault") is XElement isDefaultElement)
            {
                isDefault = (bool?)isDefaultElement;
            }
            if (element.Element("notes") is XElement notesElement)
            {
                notes = (string)notesElement;
            }
            return new EntityBankAccountApiModel(bic, companyId, entityId, iban, id, isDefault, notes);
        }
    }
}
