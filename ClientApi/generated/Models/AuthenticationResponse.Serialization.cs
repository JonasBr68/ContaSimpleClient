// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    public partial class AuthenticationResponse
    {
        internal static AuthenticationResponse DeserializeAuthenticationResponse(JsonElement element)
        {
            Optional<string> accessToken = default;
            Optional<string> expires = default;
            Optional<long> expiresIn = default;
            Optional<string> issued = default;
            Optional<string> refreshToken = default;
            Optional<string> tokenType = default;
            Optional<string> username = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("access_token"))
                {
                    accessToken = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("expires"))
                {
                    expires = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("expires_in"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    expiresIn = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("issued"))
                {
                    issued = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("refresh_token"))
                {
                    refreshToken = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("token_type"))
                {
                    tokenType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("username"))
                {
                    username = property.Value.GetString();
                    continue;
                }
            }
            return new AuthenticationResponse(accessToken.Value, expires.Value, Optional.ToNullable(expiresIn), issued.Value, refreshToken.Value, tokenType.Value, username.Value);
        }
    }
}
