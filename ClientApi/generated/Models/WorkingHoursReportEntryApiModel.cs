// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    /// <summary> Class that contains a working hours entry with the information for these worked day. </summary>
    public partial class WorkingHoursReportEntryApiModel
    {
        /// <summary> Initializes a new instance of WorkingHoursReportEntryApiModel. </summary>
        internal WorkingHoursReportEntryApiModel()
        {
            DateRangeList = new ChangeTrackingList<WorkHoursReportDateRangeApiModel>();
        }

        /// <summary> Initializes a new instance of WorkingHoursReportEntryApiModel. </summary>
        /// <param name="comments"> The comments. </param>
        /// <param name="commentsCommaSeparated"> The comments in html format. </param>
        /// <param name="commentsHtmlFormatted"> The comments formatted for html. </param>
        /// <param name="dateRangeList"> A list of date ranges (start times and end times for the day). </param>
        /// <param name="dateRangesCount"> The number of date ranges. </param>
        /// <param name="dateRangesFormatted"> The date ranges list formatted. </param>
        /// <param name="dayOfWeek"> The day of the week (Sunday starts at 0). </param>
        /// <param name="dayOfWeekName"> The day of the week name. </param>
        /// <param name="hasUnclosedEntries"> Returns if exists unclosed entries. </param>
        /// <param name="startTime"> The start time in local time zone. </param>
        /// <param name="totalUnclosedEntries"> The total unclosed entries. </param>
        /// <param name="totalWorkedHours"> The total worked hours. </param>
        /// <param name="totalWorkedHoursAndMinutesShortFormatted"> The total worked hours and minutes in short format (Xh Xm). </param>
        /// <param name="utcStartTime"> The start time in UTC. </param>
        internal WorkingHoursReportEntryApiModel(string comments, string commentsCommaSeparated, string commentsHtmlFormatted, IReadOnlyList<WorkHoursReportDateRangeApiModel> dateRangeList, int? dateRangesCount, string dateRangesFormatted, int? dayOfWeek, string dayOfWeekName, bool? hasUnclosedEntries, DateTimeOffset? startTime, int? totalUnclosedEntries, double? totalWorkedHours, string totalWorkedHoursAndMinutesShortFormatted, DateTimeOffset? utcStartTime)
        {
            Comments = comments;
            CommentsCommaSeparated = commentsCommaSeparated;
            CommentsHtmlFormatted = commentsHtmlFormatted;
            DateRangeList = dateRangeList;
            DateRangesCount = dateRangesCount;
            DateRangesFormatted = dateRangesFormatted;
            DayOfWeek = dayOfWeek;
            DayOfWeekName = dayOfWeekName;
            HasUnclosedEntries = hasUnclosedEntries;
            StartTime = startTime;
            TotalUnclosedEntries = totalUnclosedEntries;
            TotalWorkedHours = totalWorkedHours;
            TotalWorkedHoursAndMinutesShortFormatted = totalWorkedHoursAndMinutesShortFormatted;
            UtcStartTime = utcStartTime;
        }

        /// <summary> The comments. </summary>
        public string Comments { get; }
        /// <summary> The comments in html format. </summary>
        public string CommentsCommaSeparated { get; }
        /// <summary> The comments formatted for html. </summary>
        public string CommentsHtmlFormatted { get; }
        /// <summary> A list of date ranges (start times and end times for the day). </summary>
        public IReadOnlyList<WorkHoursReportDateRangeApiModel> DateRangeList { get; }
        /// <summary> The number of date ranges. </summary>
        public int? DateRangesCount { get; }
        /// <summary> The date ranges list formatted. </summary>
        public string DateRangesFormatted { get; }
        /// <summary> The day of the week (Sunday starts at 0). </summary>
        public int? DayOfWeek { get; }
        /// <summary> The day of the week name. </summary>
        public string DayOfWeekName { get; }
        /// <summary> Returns if exists unclosed entries. </summary>
        public bool? HasUnclosedEntries { get; }
        /// <summary> The start time in local time zone. </summary>
        public DateTimeOffset? StartTime { get; }
        /// <summary> The total unclosed entries. </summary>
        public int? TotalUnclosedEntries { get; }
        /// <summary> The total worked hours. </summary>
        public double? TotalWorkedHours { get; }
        /// <summary> The total worked hours and minutes in short format (Xh Xm). </summary>
        public string TotalWorkedHoursAndMinutesShortFormatted { get; }
        /// <summary> The start time in UTC. </summary>
        public DateTimeOffset? UtcStartTime { get; }
    }
}
