// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace ContasimpleAPI.Models
{
    /// <summary> The estimates stock control configuration. </summary>
    public readonly partial struct StockControlConfigurationApiModelEstimateStockControlType : IEquatable<StockControlConfigurationApiModelEstimateStockControlType>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="StockControlConfigurationApiModelEstimateStockControlType"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public StockControlConfigurationApiModelEstimateStockControlType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NeverValue = "Never";
        private const string DeliveryNoteValue = "DeliveryNote";
        private const string InvoiceValue = "Invoice";

        /// <summary> Never. </summary>
        public static StockControlConfigurationApiModelEstimateStockControlType Never { get; } = new StockControlConfigurationApiModelEstimateStockControlType(NeverValue);
        /// <summary> DeliveryNote. </summary>
        public static StockControlConfigurationApiModelEstimateStockControlType DeliveryNote { get; } = new StockControlConfigurationApiModelEstimateStockControlType(DeliveryNoteValue);
        /// <summary> Invoice. </summary>
        public static StockControlConfigurationApiModelEstimateStockControlType Invoice { get; } = new StockControlConfigurationApiModelEstimateStockControlType(InvoiceValue);
        /// <summary> Determines if two <see cref="StockControlConfigurationApiModelEstimateStockControlType"/> values are the same. </summary>
        public static bool operator ==(StockControlConfigurationApiModelEstimateStockControlType left, StockControlConfigurationApiModelEstimateStockControlType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="StockControlConfigurationApiModelEstimateStockControlType"/> values are not the same. </summary>
        public static bool operator !=(StockControlConfigurationApiModelEstimateStockControlType left, StockControlConfigurationApiModelEstimateStockControlType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="StockControlConfigurationApiModelEstimateStockControlType"/>. </summary>
        public static implicit operator StockControlConfigurationApiModelEstimateStockControlType(string value) => new StockControlConfigurationApiModelEstimateStockControlType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is StockControlConfigurationApiModelEstimateStockControlType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(StockControlConfigurationApiModelEstimateStockControlType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
