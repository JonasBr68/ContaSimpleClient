// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace ContasimpleAPI.Models
{
    /// <summary> Defines the information for updating a received invoice. </summary>
    public partial class UpdateReceivedInvoiceApiModel
    {
        /// <summary> Initializes a new instance of UpdateReceivedInvoiceApiModel. </summary>
        /// <param name="date"> The invoice date. </param>
        /// <param name="imputation"> The part of the invoice to impute for taxes. </param>
        /// <param name="invoiceClass"> The issued / received invoice class. </param>
        /// <param name="issuerEntity"> The information for the invoice issuer. </param>
        /// <param name="lines"> The number of lines that compose the invoice. </param>
        /// <param name="number"> The invoice number to create. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="issuerEntity"/>, <paramref name="lines"/>, or <paramref name="number"/> is null. </exception>
        public UpdateReceivedInvoiceApiModel(DateTimeOffset date, int imputation, int invoiceClass, UpdateDocumentEntityApiModel issuerEntity, IEnumerable<InvoiceLineRequestApiModel> lines, string number)
        {
            if (issuerEntity == null)
            {
                throw new ArgumentNullException(nameof(issuerEntity));
            }
            if (lines == null)
            {
                throw new ArgumentNullException(nameof(lines));
            }
            if (number == null)
            {
                throw new ArgumentNullException(nameof(number));
            }

            Date = date;
            Imputation = imputation;
            InvoiceClass = invoiceClass;
            IssuerEntity = issuerEntity;
            Lines = lines.ToList();
            Number = number;
        }

        /// <summary> The invoice date. </summary>
        public DateTimeOffset Date { get; }
        /// <summary> The invoice expiration time (can be null). </summary>
        public DateTimeOffset? ExpirationDate { get; set; }
        /// <summary> Invoice notes. </summary>
        public string Footer { get; set; }
        /// <summary> The part of the invoice to impute for taxes. </summary>
        public int Imputation { get; }
        /// <summary> The issued / received invoice class. </summary>
        public int InvoiceClass { get; }
        /// <summary> Indicates if the invoice is cash criteria. </summary>
        public bool? IsCashCriteria { get; set; }
        /// <summary> The information for the invoice issuer. </summary>
        public UpdateDocumentEntityApiModel IssuerEntity { get; }
        /// <summary> The number of lines that compose the invoice. </summary>
        public IList<InvoiceLineRequestApiModel> Lines { get; }
        /// <summary> Invoice notes. </summary>
        public string Notes { get; set; }
        /// <summary> The invoice number to create. </summary>
        public string Number { get; }
        /// <summary> The operation date of the invoice. </summary>
        public DateTimeOffset? OperationDate { get; set; }
        /// <summary>
        /// The operation type for the invoice.
        /// 
        /// Depends on the type of invoice and the company configuration.
        /// </summary>
        public string OperationType { get; set; }
        /// <summary> The percentage of the retention value. </summary>
        public double? RetentionPercentage { get; set; }
        /// <summary> The part of the VAT to impute for taxes. </summary>
        public int? VatImputation { get; set; }
    }
}
