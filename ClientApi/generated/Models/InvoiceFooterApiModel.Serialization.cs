// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using System.Xml;
using System.Xml.Linq;
using Azure.Core;

namespace ContasimpleAPI.Models
{
    public partial class InvoiceFooterApiModel : IUtf8JsonSerializable, IXmlSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("description");
            writer.WriteStringValue(Description);
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id");
                writer.WriteNumberValue(Id.Value);
            }
            writer.WritePropertyName("title");
            writer.WriteStringValue(Title);
            writer.WriteEndObject();
        }

        internal static InvoiceFooterApiModel DeserializeInvoiceFooterApiModel(JsonElement element)
        {
            string description = default;
            Optional<long> id = default;
            string title = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    id = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("title"))
                {
                    title = property.Value.GetString();
                    continue;
                }
            }
            return new InvoiceFooterApiModel(description, Optional.ToNullable(id), title);
        }

        void IXmlSerializable.Write(XmlWriter writer, string nameHint)
        {
            writer.WriteStartElement(nameHint ?? "InvoiceFooterApiModel");
            writer.WriteStartElement("description");
            writer.WriteValue(Description);
            writer.WriteEndElement();
            if (Optional.IsDefined(Id))
            {
                writer.WriteStartElement("id");
                writer.WriteValue(Id.Value);
                writer.WriteEndElement();
            }
            writer.WriteStartElement("title");
            writer.WriteValue(Title);
            writer.WriteEndElement();
            writer.WriteEndElement();
        }

        internal static InvoiceFooterApiModel DeserializeInvoiceFooterApiModel(XElement element)
        {
            string description = default;
            long? id = default;
            string title = default;
            if (element.Element("description") is XElement descriptionElement)
            {
                description = (string)descriptionElement;
            }
            if (element.Element("id") is XElement idElement)
            {
                id = (long?)idElement;
            }
            if (element.Element("title") is XElement titleElement)
            {
                title = (string)titleElement;
            }
            return new InvoiceFooterApiModel(description, id, title);
        }
    }
}
