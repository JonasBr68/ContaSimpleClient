// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace ContasimpleAPI.Models
{
    /// <summary> The current status of the estimate. </summary>
    public readonly partial struct EstimateStatusApiModelStatus : IEquatable<EstimateStatusApiModelStatus>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="EstimateStatusApiModelStatus"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public EstimateStatusApiModelStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CreadoValue = "Creado";
        private const string EnviadoValue = "Enviado";
        private const string AceptadoValue = "Aceptado";
        private const string RechazadoValue = "Rechazado";
        private const string ParcialValue = "Parcial";
        private const string FacturadoValue = "Facturado";
        private const string ParcialAlbaranadoValue = "ParcialAlbaranado";
        private const string AlbaranadoValue = "Albaranado";
        private const string CerradoValue = "Cerrado";

        /// <summary> Creado. </summary>
        public static EstimateStatusApiModelStatus Creado { get; } = new EstimateStatusApiModelStatus(CreadoValue);
        /// <summary> Enviado. </summary>
        public static EstimateStatusApiModelStatus Enviado { get; } = new EstimateStatusApiModelStatus(EnviadoValue);
        /// <summary> Aceptado. </summary>
        public static EstimateStatusApiModelStatus Aceptado { get; } = new EstimateStatusApiModelStatus(AceptadoValue);
        /// <summary> Rechazado. </summary>
        public static EstimateStatusApiModelStatus Rechazado { get; } = new EstimateStatusApiModelStatus(RechazadoValue);
        /// <summary> Parcial. </summary>
        public static EstimateStatusApiModelStatus Parcial { get; } = new EstimateStatusApiModelStatus(ParcialValue);
        /// <summary> Facturado. </summary>
        public static EstimateStatusApiModelStatus Facturado { get; } = new EstimateStatusApiModelStatus(FacturadoValue);
        /// <summary> ParcialAlbaranado. </summary>
        public static EstimateStatusApiModelStatus ParcialAlbaranado { get; } = new EstimateStatusApiModelStatus(ParcialAlbaranadoValue);
        /// <summary> Albaranado. </summary>
        public static EstimateStatusApiModelStatus Albaranado { get; } = new EstimateStatusApiModelStatus(AlbaranadoValue);
        /// <summary> Cerrado. </summary>
        public static EstimateStatusApiModelStatus Cerrado { get; } = new EstimateStatusApiModelStatus(CerradoValue);
        /// <summary> Determines if two <see cref="EstimateStatusApiModelStatus"/> values are the same. </summary>
        public static bool operator ==(EstimateStatusApiModelStatus left, EstimateStatusApiModelStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="EstimateStatusApiModelStatus"/> values are not the same. </summary>
        public static bool operator !=(EstimateStatusApiModelStatus left, EstimateStatusApiModelStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="EstimateStatusApiModelStatus"/>. </summary>
        public static implicit operator EstimateStatusApiModelStatus(string value) => new EstimateStatusApiModelStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is EstimateStatusApiModelStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(EstimateStatusApiModelStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
