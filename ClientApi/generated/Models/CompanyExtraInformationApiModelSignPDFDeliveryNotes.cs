// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace ContasimpleAPI.Models
{
    /// <summary> The sign option for the PDF Delivery notes. </summary>
    public readonly partial struct CompanyExtraInformationApiModelSignPDFDeliveryNotes : IEquatable<CompanyExtraInformationApiModelSignPDFDeliveryNotes>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="CompanyExtraInformationApiModelSignPDFDeliveryNotes"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CompanyExtraInformationApiModelSignPDFDeliveryNotes(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoSignValue = "NoSign";
        private const string SignWithDomainCertValue = "SignWithDomainCert";
        private const string SignWithCompanyCertValue = "SignWithCompanyCert";

        /// <summary> NoSign. </summary>
        public static CompanyExtraInformationApiModelSignPDFDeliveryNotes NoSign { get; } = new CompanyExtraInformationApiModelSignPDFDeliveryNotes(NoSignValue);
        /// <summary> SignWithDomainCert. </summary>
        public static CompanyExtraInformationApiModelSignPDFDeliveryNotes SignWithDomainCert { get; } = new CompanyExtraInformationApiModelSignPDFDeliveryNotes(SignWithDomainCertValue);
        /// <summary> SignWithCompanyCert. </summary>
        public static CompanyExtraInformationApiModelSignPDFDeliveryNotes SignWithCompanyCert { get; } = new CompanyExtraInformationApiModelSignPDFDeliveryNotes(SignWithCompanyCertValue);
        /// <summary> Determines if two <see cref="CompanyExtraInformationApiModelSignPDFDeliveryNotes"/> values are the same. </summary>
        public static bool operator ==(CompanyExtraInformationApiModelSignPDFDeliveryNotes left, CompanyExtraInformationApiModelSignPDFDeliveryNotes right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CompanyExtraInformationApiModelSignPDFDeliveryNotes"/> values are not the same. </summary>
        public static bool operator !=(CompanyExtraInformationApiModelSignPDFDeliveryNotes left, CompanyExtraInformationApiModelSignPDFDeliveryNotes right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CompanyExtraInformationApiModelSignPDFDeliveryNotes"/>. </summary>
        public static implicit operator CompanyExtraInformationApiModelSignPDFDeliveryNotes(string value) => new CompanyExtraInformationApiModelSignPDFDeliveryNotes(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CompanyExtraInformationApiModelSignPDFDeliveryNotes other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CompanyExtraInformationApiModelSignPDFDeliveryNotes other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
