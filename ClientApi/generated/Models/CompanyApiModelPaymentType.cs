// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace ContasimpleAPI.Models
{
    /// <summary> The user current payment type. </summary>
    public readonly partial struct CompanyApiModelPaymentType : IEquatable<CompanyApiModelPaymentType>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="CompanyApiModelPaymentType"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CompanyApiModelPaymentType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoneValue = "None";
        private const string PasarelaValue = "Pasarela";
        private const string DomiciliacionValue = "Domiciliacion";
        private const string ExternalValue = "External";
        private const string TarjetaCreditoValue = "TarjetaCredito";
        private const string PaypalValue = "Paypal";

        /// <summary> None. </summary>
        public static CompanyApiModelPaymentType None { get; } = new CompanyApiModelPaymentType(NoneValue);
        /// <summary> Pasarela. </summary>
        public static CompanyApiModelPaymentType Pasarela { get; } = new CompanyApiModelPaymentType(PasarelaValue);
        /// <summary> Domiciliacion. </summary>
        public static CompanyApiModelPaymentType Domiciliacion { get; } = new CompanyApiModelPaymentType(DomiciliacionValue);
        /// <summary> External. </summary>
        public static CompanyApiModelPaymentType External { get; } = new CompanyApiModelPaymentType(ExternalValue);
        /// <summary> TarjetaCredito. </summary>
        public static CompanyApiModelPaymentType TarjetaCredito { get; } = new CompanyApiModelPaymentType(TarjetaCreditoValue);
        /// <summary> Paypal. </summary>
        public static CompanyApiModelPaymentType Paypal { get; } = new CompanyApiModelPaymentType(PaypalValue);
        /// <summary> Determines if two <see cref="CompanyApiModelPaymentType"/> values are the same. </summary>
        public static bool operator ==(CompanyApiModelPaymentType left, CompanyApiModelPaymentType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CompanyApiModelPaymentType"/> values are not the same. </summary>
        public static bool operator !=(CompanyApiModelPaymentType left, CompanyApiModelPaymentType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CompanyApiModelPaymentType"/>. </summary>
        public static implicit operator CompanyApiModelPaymentType(string value) => new CompanyApiModelPaymentType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CompanyApiModelPaymentType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CompanyApiModelPaymentType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
