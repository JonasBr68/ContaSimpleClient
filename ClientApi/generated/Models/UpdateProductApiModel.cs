// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace ContasimpleAPI.Models
{
    /// <summary> Defines the information for create a product. </summary>
    public partial class UpdateProductApiModel
    {
        /// <summary> Initializes a new instance of UpdateProductApiModel. </summary>
        /// <param name="name"> The product name. </param>
        /// <param name="price"> The product price. </param>
        /// <param name="vat"> The product VAT. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public UpdateProductApiModel(string name, double price, double vat)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }

            Name = name;
            Price = price;
            Vat = vat;
        }

        /// <summary> Acquisition product cost. </summary>
        public double? AcquisitionCost { get; set; }
        /// <summary> Product is visible or not. </summary>
        public bool? Active { get; set; }
        /// <summary> Indicates if the product sell is allowed when is out of stock. </summary>
        public bool? AllowProductSellWhenNoStock { get; set; }
        /// <summary> The category family id. </summary>
        public long? CategoryId { get; set; }
        /// <summary> The company that owns the product. </summary>
        public long? CompanyId { get; set; }
        /// <summary> Custom field for the product. </summary>
        public string CustomField1 { get; set; }
        /// <summary> Custom field for the product. </summary>
        public string CustomField2 { get; set; }
        /// <summary> Custom field for the product. </summary>
        public string CustomField3 { get; set; }
        /// <summary> Custom field for the product. </summary>
        public string CustomField4 { get; set; }
        /// <summary> The product description. </summary>
        public string Description { get; set; }
        /// <summary> The product discount percentage. </summary>
        public double? DiscountPercentage { get; set; }
        /// <summary> External product reference. </summary>
        public string ExternalReference { get; set; }
        /// <summary> Product categories path. </summary>
        public string FullCategoriesPath { get; set; }
        /// <summary> The identifier of the product. </summary>
        public long? Id { get; set; }
        /// <summary> Internal product code. </summary>
        public string InternalCode { get; set; }
        /// <summary> Indicates if the out of stock application notifications are enabled for the product. </summary>
        public bool? IsStockCompanyNotificationEnabled { get; set; }
        /// <summary> Indicates if the stock control is enabled for the product. </summary>
        public bool? IsStockControlEnabled { get; set; }
        /// <summary> Indicates if the out of stock email notification is enabled. </summary>
        public bool? IsStockEmailNotificationEnabled { get; set; }
        /// <summary> Indicates if the out of stock notification is enabled in the application dashboard. </summary>
        public bool? IsStockNotificationDisplayOnDashboardEnabled { get; set; }
        /// <summary> Indicates if the out of stock notifications are enabled for the product. </summary>
        public bool? IsStockNotificationEnabled { get; set; }
        /// <summary> The minimum number of unit to trigger the product out of stock alarm. </summary>
        public double? MinUnitsTriggerAlarm { get; set; }
        /// <summary> The product name. </summary>
        public string Name { get; }
        /// <summary> Notes of the product. </summary>
        public string Notes { get; set; }
        /// <summary> The product price. </summary>
        public double Price { get; }
        /// <summary> The unit type id of the product. </summary>
        public long? UnitTypeId { get; set; }
        /// <summary> The product VAT. </summary>
        public double Vat { get; }
    }
}
