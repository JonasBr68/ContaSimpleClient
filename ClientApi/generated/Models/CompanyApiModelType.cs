// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace ContasimpleAPI.Models
{
    /// <summary> The current plan of the company. </summary>
    public readonly partial struct CompanyApiModelType : IEquatable<CompanyApiModelType>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="CompanyApiModelType"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CompanyApiModelType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string BasicoValue = "Basico";
        private const string ProfesionalValue = "Profesional";
        private const string UltimateValue = "Ultimate";

        /// <summary> Basico. </summary>
        public static CompanyApiModelType Basico { get; } = new CompanyApiModelType(BasicoValue);
        /// <summary> Profesional. </summary>
        public static CompanyApiModelType Profesional { get; } = new CompanyApiModelType(ProfesionalValue);
        /// <summary> Ultimate. </summary>
        public static CompanyApiModelType Ultimate { get; } = new CompanyApiModelType(UltimateValue);
        /// <summary> Determines if two <see cref="CompanyApiModelType"/> values are the same. </summary>
        public static bool operator ==(CompanyApiModelType left, CompanyApiModelType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CompanyApiModelType"/> values are not the same. </summary>
        public static bool operator !=(CompanyApiModelType left, CompanyApiModelType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CompanyApiModelType"/>. </summary>
        public static implicit operator CompanyApiModelType(string value) => new CompanyApiModelType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CompanyApiModelType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CompanyApiModelType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
