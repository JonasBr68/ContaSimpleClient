// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace ContasimpleAPI.Models
{
    /// <summary> Class that contains the information for a user into a specific company. </summary>
    public partial class UserCompanyInfoApiModel
    {
        /// <summary> Initializes a new instance of UserCompanyInfoApiModel. </summary>
        internal UserCompanyInfoApiModel()
        {
        }

        /// <summary> Initializes a new instance of UserCompanyInfoApiModel. </summary>
        /// <param name="id"> The user company relation identifier. </param>
        /// <param name="isAccessToCompanyActivated"> Gets if the user access into the company is active or not. </param>
        /// <param name="isDomainParentManagerInCompanyDomain"> Returns if the user is domain parent manager in the company domain. </param>
        /// <param name="isUserActive"> Gets or sets if the user is active. </param>
        /// <param name="name"> The user name. </param>
        /// <param name="surname"> The user surname. </param>
        /// <param name="userCompanyRole"> The user role into the company. </param>
        /// <param name="userContactEmail"> The user contact email. </param>
        /// <param name="userId"> The user id. </param>
        /// <param name="userRole"> The user role into the company. </param>
        internal UserCompanyInfoApiModel(long? id, bool? isAccessToCompanyActivated, bool? isDomainParentManagerInCompanyDomain, bool? isUserActive, string name, string surname, UserCompanyInfoApiModelUserCompanyRole? userCompanyRole, string userContactEmail, long? userId, UserCompanyInfoApiModelUserRole? userRole)
        {
            Id = id;
            IsAccessToCompanyActivated = isAccessToCompanyActivated;
            IsDomainParentManagerInCompanyDomain = isDomainParentManagerInCompanyDomain;
            IsUserActive = isUserActive;
            Name = name;
            Surname = surname;
            UserCompanyRole = userCompanyRole;
            UserContactEmail = userContactEmail;
            UserId = userId;
            UserRole = userRole;
        }

        /// <summary> The user company relation identifier. </summary>
        public long? Id { get; }
        /// <summary> Gets if the user access into the company is active or not. </summary>
        public bool? IsAccessToCompanyActivated { get; }
        /// <summary> Returns if the user is domain parent manager in the company domain. </summary>
        public bool? IsDomainParentManagerInCompanyDomain { get; }
        /// <summary> Gets or sets if the user is active. </summary>
        public bool? IsUserActive { get; }
        /// <summary> The user name. </summary>
        public string Name { get; }
        /// <summary> The user surname. </summary>
        public string Surname { get; }
        /// <summary> The user role into the company. </summary>
        public UserCompanyInfoApiModelUserCompanyRole? UserCompanyRole { get; }
        /// <summary> The user contact email. </summary>
        public string UserContactEmail { get; }
        /// <summary> The user id. </summary>
        public long? UserId { get; }
        /// <summary> The user role into the company. </summary>
        public UserCompanyInfoApiModelUserRole? UserRole { get; }
    }
}
