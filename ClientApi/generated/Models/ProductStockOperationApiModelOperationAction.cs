// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace ContasimpleAPI.Models
{
    /// <summary> The operation action (create, edit or delete). </summary>
    public readonly partial struct ProductStockOperationApiModelOperationAction : IEquatable<ProductStockOperationApiModelOperationAction>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="ProductStockOperationApiModelOperationAction"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ProductStockOperationApiModelOperationAction(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CreateValue = "Create";
        private const string EditValue = "Edit";
        private const string DeleteValue = "Delete";
        private const string CreateFromDeliveryNoteValue = "CreateFromDeliveryNote";
        private const string EnableValue = "Enable";
        private const string DisableValue = "Disable";
        private const string CreateFromEstimateValue = "CreateFromEstimate";

        /// <summary> Create. </summary>
        public static ProductStockOperationApiModelOperationAction Create { get; } = new ProductStockOperationApiModelOperationAction(CreateValue);
        /// <summary> Edit. </summary>
        public static ProductStockOperationApiModelOperationAction Edit { get; } = new ProductStockOperationApiModelOperationAction(EditValue);
        /// <summary> Delete. </summary>
        public static ProductStockOperationApiModelOperationAction Delete { get; } = new ProductStockOperationApiModelOperationAction(DeleteValue);
        /// <summary> CreateFromDeliveryNote. </summary>
        public static ProductStockOperationApiModelOperationAction CreateFromDeliveryNote { get; } = new ProductStockOperationApiModelOperationAction(CreateFromDeliveryNoteValue);
        /// <summary> Enable. </summary>
        public static ProductStockOperationApiModelOperationAction Enable { get; } = new ProductStockOperationApiModelOperationAction(EnableValue);
        /// <summary> Disable. </summary>
        public static ProductStockOperationApiModelOperationAction Disable { get; } = new ProductStockOperationApiModelOperationAction(DisableValue);
        /// <summary> CreateFromEstimate. </summary>
        public static ProductStockOperationApiModelOperationAction CreateFromEstimate { get; } = new ProductStockOperationApiModelOperationAction(CreateFromEstimateValue);
        /// <summary> Determines if two <see cref="ProductStockOperationApiModelOperationAction"/> values are the same. </summary>
        public static bool operator ==(ProductStockOperationApiModelOperationAction left, ProductStockOperationApiModelOperationAction right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ProductStockOperationApiModelOperationAction"/> values are not the same. </summary>
        public static bool operator !=(ProductStockOperationApiModelOperationAction left, ProductStockOperationApiModelOperationAction right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ProductStockOperationApiModelOperationAction"/>. </summary>
        public static implicit operator ProductStockOperationApiModelOperationAction(string value) => new ProductStockOperationApiModelOperationAction(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ProductStockOperationApiModelOperationAction other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ProductStockOperationApiModelOperationAction other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
