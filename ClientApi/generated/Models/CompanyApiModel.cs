// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace ContasimpleAPI.Models
{
    /// <summary> Defines the information for a company. </summary>
    public partial class CompanyApiModel
    {
        /// <summary> Initializes a new instance of CompanyApiModel. </summary>
        internal CompanyApiModel()
        {
        }

        /// <summary> Initializes a new instance of CompanyApiModel. </summary>
        /// <param name="activated"> Indicates if the company is active. </param>
        /// <param name="brandId"> The ID of the brand where the company was registered. </param>
        /// <param name="comments"> Free field to insert comments about the company. </param>
        /// <param name="companyTypeId"> The identifier of the company type. </param>
        /// <param name="country"> The country of the company. </param>
        /// <param name="countryId"> The country identifier of the company. </param>
        /// <param name="creationTime"> Indicates the user creation time. </param>
        /// <param name="disabledByPendingPayment"> Gets or Sets whether the user is deactivated for having a pending payment. </param>
        /// <param name="disabledByPendingPaymentTime"> Gets or Sets the time when the user go deactivated for having a pending payment. </param>
        /// <param name="displayName"> Gets the name to appear on the screen for the company. </param>
        /// <param name="domainId"> The ID of the domain where the company resides. </param>
        /// <param name="email"> Indicates the email address to contact the company. </param>
        /// <param name="expirationDate"> The company current plan expiration date. </param>
        /// <param name="extraInformation"> Contains the extra information for the current company. </param>
        /// <param name="firstname"> Indicates the firstname of the user (as individual company). </param>
        /// <param name="fiscalRegion"> The fiscal region of the company. </param>
        /// <param name="fiscalRegionId"> The fiscal region identifier of the company. </param>
        /// <param name="id"> The unique identifier of the company. </param>
        /// <param name="irpfModeCode"> The IRPF estimation code for the company. </param>
        /// <param name="irpfModeId"> The IRPF estimation identifier for the company. </param>
        /// <param name="isDefault"> Indicates that the current company is the user default company. </param>
        /// <param name="lastAccessTime"> Indicates the last access time that the user accessed the platform. </param>
        /// <param name="lastUpdateTime"> Indicates the last time that user information was updated. </param>
        /// <param name="lastname"> Indicates the lastname of the user (as individual company). </param>
        /// <param name="name"> Indicates the name of the user (as individual company). </param>
        /// <param name="nif"> Indicates the NIF of the company. </param>
        /// <param name="organizationName"> Indicates the name of the company. </param>
        /// <param name="paymentType"> The user current payment type. </param>
        /// <param name="personName"> Builds the name of the organization as a single person. </param>
        /// <param name="requiresConfiguration"> Indicates that the company requires to be configured (equivalent to web initial setup). </param>
        /// <param name="showRecargoEquivalencia"> Indicates if the company needs to show the RE option. </param>
        /// <param name="timeZone"> The timezone of the company. </param>
        /// <param name="type"> The current plan of the company. </param>
        /// <param name="uiCulture"> The UI culture of the company. </param>
        /// <param name="vatTypeCode"> The code of the VAT mode. </param>
        /// <param name="vatTypeId"> The VAT type identifier. </param>
        internal CompanyApiModel(int? activated, long? brandId, string comments, long? companyTypeId, CountryApiModel country, long? countryId, DateTimeOffset? creationTime, bool? disabledByPendingPayment, DateTimeOffset? disabledByPendingPaymentTime, string displayName, long? domainId, string email, DateTimeOffset? expirationDate, CompanyExtraInformationApiModel extraInformation, string firstname, FiscalRegionApiModel fiscalRegion, long? fiscalRegionId, long? id, string irpfModeCode, long? irpfModeId, bool? isDefault, DateTimeOffset? lastAccessTime, DateTimeOffset? lastUpdateTime, string lastname, string name, string nif, string organizationName, CompanyApiModelPaymentType? paymentType, string personName, bool? requiresConfiguration, bool? showRecargoEquivalencia, string timeZone, CompanyApiModelType? type, string uiCulture, string vatTypeCode, long? vatTypeId)
        {
            Activated = activated;
            BrandId = brandId;
            Comments = comments;
            CompanyTypeId = companyTypeId;
            Country = country;
            CountryId = countryId;
            CreationTime = creationTime;
            DisabledByPendingPayment = disabledByPendingPayment;
            DisabledByPendingPaymentTime = disabledByPendingPaymentTime;
            DisplayName = displayName;
            DomainId = domainId;
            Email = email;
            ExpirationDate = expirationDate;
            ExtraInformation = extraInformation;
            Firstname = firstname;
            FiscalRegion = fiscalRegion;
            FiscalRegionId = fiscalRegionId;
            Id = id;
            IrpfModeCode = irpfModeCode;
            IrpfModeId = irpfModeId;
            IsDefault = isDefault;
            LastAccessTime = lastAccessTime;
            LastUpdateTime = lastUpdateTime;
            Lastname = lastname;
            Name = name;
            Nif = nif;
            OrganizationName = organizationName;
            PaymentType = paymentType;
            PersonName = personName;
            RequiresConfiguration = requiresConfiguration;
            ShowRecargoEquivalencia = showRecargoEquivalencia;
            TimeZone = timeZone;
            Type = type;
            UiCulture = uiCulture;
            VatTypeCode = vatTypeCode;
            VatTypeId = vatTypeId;
        }

        /// <summary> Indicates if the company is active. </summary>
        public int? Activated { get; }
        /// <summary> The ID of the brand where the company was registered. </summary>
        public long? BrandId { get; }
        /// <summary> Free field to insert comments about the company. </summary>
        public string Comments { get; }
        /// <summary> The identifier of the company type. </summary>
        public long? CompanyTypeId { get; }
        /// <summary> The country of the company. </summary>
        public CountryApiModel Country { get; }
        /// <summary> The country identifier of the company. </summary>
        public long? CountryId { get; }
        /// <summary> Indicates the user creation time. </summary>
        public DateTimeOffset? CreationTime { get; }
        /// <summary> Gets or Sets whether the user is deactivated for having a pending payment. </summary>
        public bool? DisabledByPendingPayment { get; }
        /// <summary> Gets or Sets the time when the user go deactivated for having a pending payment. </summary>
        public DateTimeOffset? DisabledByPendingPaymentTime { get; }
        /// <summary> Gets the name to appear on the screen for the company. </summary>
        public string DisplayName { get; }
        /// <summary> The ID of the domain where the company resides. </summary>
        public long? DomainId { get; }
        /// <summary> Indicates the email address to contact the company. </summary>
        public string Email { get; }
        /// <summary> The company current plan expiration date. </summary>
        public DateTimeOffset? ExpirationDate { get; }
        /// <summary> Contains the extra information for the current company. </summary>
        public CompanyExtraInformationApiModel ExtraInformation { get; }
        /// <summary> Indicates the firstname of the user (as individual company). </summary>
        public string Firstname { get; }
        /// <summary> The fiscal region of the company. </summary>
        public FiscalRegionApiModel FiscalRegion { get; }
        /// <summary> The fiscal region identifier of the company. </summary>
        public long? FiscalRegionId { get; }
        /// <summary> The unique identifier of the company. </summary>
        public long? Id { get; }
        /// <summary> The IRPF estimation code for the company. </summary>
        public string IrpfModeCode { get; }
        /// <summary> The IRPF estimation identifier for the company. </summary>
        public long? IrpfModeId { get; }
        /// <summary> Indicates that the current company is the user default company. </summary>
        public bool? IsDefault { get; }
        /// <summary> Indicates the last access time that the user accessed the platform. </summary>
        public DateTimeOffset? LastAccessTime { get; }
        /// <summary> Indicates the last time that user information was updated. </summary>
        public DateTimeOffset? LastUpdateTime { get; }
        /// <summary> Indicates the lastname of the user (as individual company). </summary>
        public string Lastname { get; }
        /// <summary> Indicates the name of the user (as individual company). </summary>
        public string Name { get; }
        /// <summary> Indicates the NIF of the company. </summary>
        public string Nif { get; }
        /// <summary> Indicates the name of the company. </summary>
        public string OrganizationName { get; }
        /// <summary> The user current payment type. </summary>
        public CompanyApiModelPaymentType? PaymentType { get; }
        /// <summary> Builds the name of the organization as a single person. </summary>
        public string PersonName { get; }
        /// <summary> Indicates that the company requires to be configured (equivalent to web initial setup). </summary>
        public bool? RequiresConfiguration { get; }
        /// <summary> Indicates if the company needs to show the RE option. </summary>
        public bool? ShowRecargoEquivalencia { get; }
        /// <summary> The timezone of the company. </summary>
        public string TimeZone { get; }
        /// <summary> The current plan of the company. </summary>
        public CompanyApiModelType? Type { get; }
        /// <summary> The UI culture of the company. </summary>
        public string UiCulture { get; }
        /// <summary> The code of the VAT mode. </summary>
        public string VatTypeCode { get; }
        /// <summary> The VAT type identifier. </summary>
        public long? VatTypeId { get; }
    }
}
