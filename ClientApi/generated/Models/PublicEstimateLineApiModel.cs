// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace ContasimpleAPI.Models
{
    /// <summary> Defines the information for an estimate line. </summary>
    public partial class PublicEstimateLineApiModel
    {
        /// <summary> Initializes a new instance of PublicEstimateLineApiModel. </summary>
        /// <param name="concept"> The line concept. </param>
        /// <param name="quantity"> The line items quantity. </param>
        /// <param name="totalTaxableAmount">
        /// The total taxable amount of the line.
        /// 
        /// There is a limit of two decimals.
        /// 
        /// This value is required to show the same rounded value applied by the client on the PDF.
        /// </param>
        /// <param name="unitTaxableAmount">
        /// Gets or Sets the unit price (the price for a single unit of product) for the estimate line.
        /// 
        /// The total taxable amount for the line will be UnitTaxableAmount * Quantity.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="concept"/> is null. </exception>
        public PublicEstimateLineApiModel(string concept, double quantity, double totalTaxableAmount, double unitTaxableAmount)
        {
            if (concept == null)
            {
                throw new ArgumentNullException(nameof(concept));
            }

            Concept = concept;
            Quantity = quantity;
            TotalTaxableAmount = totalTaxableAmount;
            UnitTaxableAmount = unitTaxableAmount;
        }

        /// <summary> The line concept. </summary>
        public string Concept { get; }
        /// <summary> The line items quantity. </summary>
        public double Quantity { get; }
        /// <summary> The RE amount. </summary>
        public double? ReAmount { get; }
        /// <summary> The RE percentage. </summary>
        public double? RePercentage { get; set; }
        /// <summary>
        /// The total taxable amount of the line.
        /// 
        /// There is a limit of two decimals.
        /// 
        /// This value is required to show the same rounded value applied by the client on the PDF.
        /// </summary>
        public double TotalTaxableAmount { get; }
        /// <summary>
        /// Gets or Sets the unit price (the price for a single unit of product) for the estimate line.
        /// 
        /// The total taxable amount for the line will be UnitTaxableAmount * Quantity.
        /// </summary>
        public double UnitTaxableAmount { get; }
        /// <summary> Gets or Sets the total VAT amount for the estimate line. </summary>
        public double? VatAmount { get; }
        /// <summary>
        /// Gets or Sets the VAT percentage of a single unit of product. If the TotalVATAmount property is set it takes precedence over
        /// 
        /// this property and the value returned is computed from the TotalVATAmount and UnitTaxableAmount properties.
        /// </summary>
        public double? VatPercentage { get; set; }
    }
}
