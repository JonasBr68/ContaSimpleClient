// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace ContasimpleAPI.Models
{
    /// <summary> Defines the information for a product. </summary>
    public partial class ProductApiModel
    {
        /// <summary> Initializes a new instance of ProductApiModel. </summary>
        internal ProductApiModel()
        {
        }

        /// <summary> Initializes a new instance of ProductApiModel. </summary>
        /// <param name="acquisitionCost"> Acquisition product cost. </param>
        /// <param name="active"> Product is visible or not. </param>
        /// <param name="allowProductSellWhenNoStock"> Indicates if the product sell is allowed when is out of stock. </param>
        /// <param name="categoryId"> The category family id. </param>
        /// <param name="companyId"> The company that owns the product. </param>
        /// <param name="currentStock"> The current stock of the product. </param>
        /// <param name="customField1"> Custom field for the product. </param>
        /// <param name="customField2"> Custom field for the product. </param>
        /// <param name="customField3"> Custom field for the product. </param>
        /// <param name="customField4"> Custom field for the product. </param>
        /// <param name="description"> The product description. </param>
        /// <param name="discountPercentage"> The product discount percentage. </param>
        /// <param name="discountedPrice"> The discounted price (with the discount percentage applied). </param>
        /// <param name="externalReference"> External product reference. </param>
        /// <param name="fullCategoriesPath"> Product categories path. </param>
        /// <param name="id"> The identifier of the product. </param>
        /// <param name="internalCode"> Internal product code. </param>
        /// <param name="isStockCompanyNotificationEnabled"> Indicates if the out of stock application notifications are enabled for the product. </param>
        /// <param name="isStockControlEnabled"> Indicates if the stock control is enabled for the product. </param>
        /// <param name="isStockEmailNotificationEnabled"> Indicates if the out of stock email notification is enabled. </param>
        /// <param name="isStockNotificationDisplayOnDashboardEnabled"> Indicates if the out of stock notification is enabled in the application dashboard. </param>
        /// <param name="isStockNotificationEnabled"> Indicates if the out of stock notifications are enabled for the product. </param>
        /// <param name="minUnitsTriggerAlarm"> The minimum number of unit to trigger the product out of stock alarm. </param>
        /// <param name="name"> The product name. </param>
        /// <param name="notes"> Notes of the product. </param>
        /// <param name="price"> The product price. </param>
        /// <param name="unitTypeId"> The unit type id of the product. </param>
        /// <param name="unitTypeLongName"> The unit type long name (if exists). </param>
        /// <param name="unitTypeShortName"> The unit type short name (if exists). </param>
        /// <param name="vat"> The product VAT. </param>
        internal ProductApiModel(double? acquisitionCost, bool? active, bool? allowProductSellWhenNoStock, long? categoryId, long? companyId, double? currentStock, string customField1, string customField2, string customField3, string customField4, string description, double? discountPercentage, double? discountedPrice, string externalReference, string fullCategoriesPath, long? id, string internalCode, bool? isStockCompanyNotificationEnabled, bool? isStockControlEnabled, bool? isStockEmailNotificationEnabled, bool? isStockNotificationDisplayOnDashboardEnabled, bool? isStockNotificationEnabled, double? minUnitsTriggerAlarm, string name, string notes, double? price, long? unitTypeId, string unitTypeLongName, string unitTypeShortName, double? vat)
        {
            AcquisitionCost = acquisitionCost;
            Active = active;
            AllowProductSellWhenNoStock = allowProductSellWhenNoStock;
            CategoryId = categoryId;
            CompanyId = companyId;
            CurrentStock = currentStock;
            CustomField1 = customField1;
            CustomField2 = customField2;
            CustomField3 = customField3;
            CustomField4 = customField4;
            Description = description;
            DiscountPercentage = discountPercentage;
            DiscountedPrice = discountedPrice;
            ExternalReference = externalReference;
            FullCategoriesPath = fullCategoriesPath;
            Id = id;
            InternalCode = internalCode;
            IsStockCompanyNotificationEnabled = isStockCompanyNotificationEnabled;
            IsStockControlEnabled = isStockControlEnabled;
            IsStockEmailNotificationEnabled = isStockEmailNotificationEnabled;
            IsStockNotificationDisplayOnDashboardEnabled = isStockNotificationDisplayOnDashboardEnabled;
            IsStockNotificationEnabled = isStockNotificationEnabled;
            MinUnitsTriggerAlarm = minUnitsTriggerAlarm;
            Name = name;
            Notes = notes;
            Price = price;
            UnitTypeId = unitTypeId;
            UnitTypeLongName = unitTypeLongName;
            UnitTypeShortName = unitTypeShortName;
            Vat = vat;
        }

        /// <summary> Acquisition product cost. </summary>
        public double? AcquisitionCost { get; }
        /// <summary> Product is visible or not. </summary>
        public bool? Active { get; }
        /// <summary> Indicates if the product sell is allowed when is out of stock. </summary>
        public bool? AllowProductSellWhenNoStock { get; }
        /// <summary> The category family id. </summary>
        public long? CategoryId { get; }
        /// <summary> The company that owns the product. </summary>
        public long? CompanyId { get; }
        /// <summary> The current stock of the product. </summary>
        public double? CurrentStock { get; }
        /// <summary> Custom field for the product. </summary>
        public string CustomField1 { get; }
        /// <summary> Custom field for the product. </summary>
        public string CustomField2 { get; }
        /// <summary> Custom field for the product. </summary>
        public string CustomField3 { get; }
        /// <summary> Custom field for the product. </summary>
        public string CustomField4 { get; }
        /// <summary> The product description. </summary>
        public string Description { get; }
        /// <summary> The product discount percentage. </summary>
        public double? DiscountPercentage { get; }
        /// <summary> The discounted price (with the discount percentage applied). </summary>
        public double? DiscountedPrice { get; }
        /// <summary> External product reference. </summary>
        public string ExternalReference { get; }
        /// <summary> Product categories path. </summary>
        public string FullCategoriesPath { get; }
        /// <summary> The identifier of the product. </summary>
        public long? Id { get; }
        /// <summary> Internal product code. </summary>
        public string InternalCode { get; }
        /// <summary> Indicates if the out of stock application notifications are enabled for the product. </summary>
        public bool? IsStockCompanyNotificationEnabled { get; }
        /// <summary> Indicates if the stock control is enabled for the product. </summary>
        public bool? IsStockControlEnabled { get; }
        /// <summary> Indicates if the out of stock email notification is enabled. </summary>
        public bool? IsStockEmailNotificationEnabled { get; }
        /// <summary> Indicates if the out of stock notification is enabled in the application dashboard. </summary>
        public bool? IsStockNotificationDisplayOnDashboardEnabled { get; }
        /// <summary> Indicates if the out of stock notifications are enabled for the product. </summary>
        public bool? IsStockNotificationEnabled { get; }
        /// <summary> The minimum number of unit to trigger the product out of stock alarm. </summary>
        public double? MinUnitsTriggerAlarm { get; }
        /// <summary> The product name. </summary>
        public string Name { get; }
        /// <summary> Notes of the product. </summary>
        public string Notes { get; }
        /// <summary> The product price. </summary>
        public double? Price { get; }
        /// <summary> The unit type id of the product. </summary>
        public long? UnitTypeId { get; }
        /// <summary> The unit type long name (if exists). </summary>
        public string UnitTypeLongName { get; }
        /// <summary> The unit type short name (if exists). </summary>
        public string UnitTypeShortName { get; }
        /// <summary> The product VAT. </summary>
        public double? Vat { get; }
    }
}
