// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace ContasimpleAPI.Models
{
    /// <summary> The notification kind. </summary>
    public readonly partial struct NotificationApiModelKind : IEquatable<NotificationApiModelKind>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="NotificationApiModelKind"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public NotificationApiModelKind(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CommonValue = "Common";
        private const string TaskFinishedValue = "TaskFinished";
        private const string ErrorValue = "Error";
        private const string UploadValue = "Upload";

        /// <summary> Common. </summary>
        public static NotificationApiModelKind Common { get; } = new NotificationApiModelKind(CommonValue);
        /// <summary> TaskFinished. </summary>
        public static NotificationApiModelKind TaskFinished { get; } = new NotificationApiModelKind(TaskFinishedValue);
        /// <summary> Error. </summary>
        public static NotificationApiModelKind Error { get; } = new NotificationApiModelKind(ErrorValue);
        /// <summary> Upload. </summary>
        public static NotificationApiModelKind Upload { get; } = new NotificationApiModelKind(UploadValue);
        /// <summary> Determines if two <see cref="NotificationApiModelKind"/> values are the same. </summary>
        public static bool operator ==(NotificationApiModelKind left, NotificationApiModelKind right) => left.Equals(right);
        /// <summary> Determines if two <see cref="NotificationApiModelKind"/> values are not the same. </summary>
        public static bool operator !=(NotificationApiModelKind left, NotificationApiModelKind right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="NotificationApiModelKind"/>. </summary>
        public static implicit operator NotificationApiModelKind(string value) => new NotificationApiModelKind(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is NotificationApiModelKind other && Equals(other);
        /// <inheritdoc />
        public bool Equals(NotificationApiModelKind other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
