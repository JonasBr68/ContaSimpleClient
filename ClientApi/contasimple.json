{
  "definitions": {
    "AcceptInvitationRequestApiModel": {
      "description": "Class that contains the information for accepting an invitation to a company",
      "properties": {
        "invitationToken": {
          "description": "The invitation token",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountingAmortizationSummaryApiModel": {
      "description": "Contains the information for the amortizations",
      "properties": {
        "numberOfInvoices": {
          "description": "The total number of invoices",
          "format": "int32",
          "type": "integer"
        },
        "totalAmount": {
          "description": "The total amount",
          "format": "double",
          "type": "number"
        },
        "totalComputableAmount": {
          "description": "The total computable amount",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "AccountingMonthlyExpensesSummaryApiModel": {
      "description": "COntains the summary information for expenses",
      "properties": {
        "month": {
          "description": "The month number (-1 for the invoices assigned to other period)",
          "format": "int32",
          "type": "integer"
        },
        "numberOfExpenses": {
          "description": "The number of expenses",
          "format": "int32",
          "type": "integer"
        },
        "totalAmount": {
          "description": "The total amount",
          "format": "double",
          "type": "number"
        },
        "totalComputableAmount": {
          "description": "The computable total amount",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "AccountingMonthlyInvoicesSummaryApiModel": {
      "description": "Defines the information for invoices summary",
      "properties": {
        "month": {
          "description": "The month number (-1 for the invoices assigned to other period)",
          "format": "int32",
          "type": "integer"
        },
        "numberOfInvoices": {
          "description": "The number of invoices",
          "format": "int32",
          "type": "integer"
        },
        "totalAmount": {
          "description": "Total amount",
          "format": "double",
          "type": "number"
        },
        "totalBaseAmount": {
          "description": "Total base amount",
          "format": "double",
          "type": "number"
        },
        "totalBaseAmountComputable": {
          "description": "Total computable base amount",
          "format": "double",
          "type": "number"
        },
        "totalComputableAmount": {
          "description": "Total computable amount",
          "format": "double",
          "type": "number"
        },
        "totalRetentionAmount": {
          "description": "Total retention amount",
          "format": "double",
          "type": "number"
        },
        "totalVatAmount": {
          "description": "Total VAT amount",
          "format": "double",
          "type": "number"
        },
        "totalVatAmountComputable": {
          "description": "Total computable VAT amount",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "AccountingPeriodMaintenanceApiModel": {
      "description": "Defines the information for an AccountingPeriodMaintenance",
      "properties": {
        "closeDate": {
          "description": "The close date",
          "format": "date-time",
          "type": "string"
        },
        "period": {
          "description": "The accounting period",
          "type": "string"
        },
        "status": {
          "description": "The accounting period status",
          "enum": [
            "Closed"
          ],
          "type": "string"
        },
        "statusDescription": {
          "description": "The status description",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountingSummaryApiModel": {
      "description": "Contains the information for the accounting summary",
      "properties": {
        "amortizationSummary": {
          "$ref": "#/definitions/AccountingAmortizationSummaryApiModel",
          "description": "Contains the information for the amortizations"
        },
        "amortizedInvoicesSummary": {
          "description": "Contains the information for amortized invoices",
          "items": {
            "$ref": "#/definitions/AccountingMonthlyInvoicesSummaryApiModel"
          },
          "type": "array"
        },
        "expensesSummary": {
          "description": "Contains the information for expenses",
          "items": {
            "$ref": "#/definitions/AccountingMonthlyExpensesSummaryApiModel"
          },
          "type": "array"
        },
        "issuedInvoicesSummary": {
          "description": "Contains the information for issued invoices",
          "items": {
            "$ref": "#/definitions/AccountingMonthlyInvoicesSummaryApiModel"
          },
          "type": "array"
        },
        "receivedInvoicesSummary": {
          "description": "Contains the information for received invoices",
          "items": {
            "$ref": "#/definitions/AccountingMonthlyInvoicesSummaryApiModel"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ActionPermissionsApiModel": {
      "description": "Defines the information for an action",
      "properties": {
        "hasAccess": {
          "description": "Access permission to the given module / action",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the current action",
          "enum": [
            "Default",
            "Create",
            "Edit",
            "Delete",
            "List",
            "View",
            "Send"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApiAccessApiModel": {
      "description": "Defines the information about a platform that have access to the user information",
      "properties": {
        "apiClient": {
          "$ref": "#/definitions/ApiClientApiModel",
          "description": "API client information"
        },
        "canDisable": {
          "description": "Indicates if the client can disable user access to the current API client",
          "type": "boolean"
        },
        "firstAccessTime": {
          "description": "The first time the client accessed the user account",
          "format": "date-time",
          "type": "string"
        },
        "isActive": {
          "description": "Indicates if the client access is valid or have been revoked",
          "type": "boolean"
        },
        "lastAccessTime": {
          "description": "The last time the client accessed the user account",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApiClientApiModel": {
      "description": "Gets the information for an API client",
      "properties": {
        "id": {
          "description": "API client identifier",
          "type": "string"
        },
        "name": {
          "description": "API client name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApiClientWithSecretApiModel": {
      "description": "Gets the information for an API client",
      "properties": {
        "id": {
          "description": "API client identifier",
          "type": "string"
        },
        "name": {
          "description": "API client name",
          "type": "string"
        },
        "secret": {
          "description": "API client secret",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApiListResult[AccountingPeriodMaintenanceApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/AccountingPeriodMaintenanceApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[ApiAccessApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/ApiAccessApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[ApiClientApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/ApiClientApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[ApiUserAuthenticationKeyApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/ApiUserAuthenticationKeyApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[AppVersionApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/AppVersionApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[Boolean]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "type": "boolean"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[BrandApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/BrandApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[CategoryApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/CategoryApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[ClassItem]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/ClassItem"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[CompanyApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/CompanyApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[CompanyLightweightApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/CompanyLightweightApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[CompanyTypeApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/CompanyTypeApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[CountryApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/CountryApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[DeliveryNoteApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/DeliveryNoteApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[DeliveryNoteNumberingFormatApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/DeliveryNoteNumberingFormatApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[DeliveryNoteProductInfoApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/DeliveryNoteProductInfoApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[DocumentPaymentApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/DocumentPaymentApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[DomainApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/DomainApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[EntityApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/EntityApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[EntityBankAccountApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/EntityBankAccountApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[EstimateApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/EstimateApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[EstimateNumberingFormatApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/EstimateNumberingFormatApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[ExpenseApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/ExpenseApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[ExternalRegistrationApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/ExternalRegistrationApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[FileApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/FileApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[InvoiceApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/InvoiceApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[InvoiceFooterApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/InvoiceFooterApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[InvoiceLineApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/InvoiceLineApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[InvoiceNumberingFormatApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/InvoiceNumberingFormatApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[IrpfModeApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/IrpfModeApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[MailPresetsApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/MailPresetsApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[NoteApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/NoteApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[NotificationApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/NotificationApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[OperationTypeApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/OperationTypeApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[PaymentMethodApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/PaymentMethodApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[PaymentMethodTypeApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/PaymentMethodTypeApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[ProductApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/ProductApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[ProductStockOperationApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/ProductStockOperationApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[PushToken]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/PushToken"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[RetentionTypeApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/RetentionTypeApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[String]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[SupportMessageTemplateApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/SupportMessageTemplateApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[TaskStatusApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/TaskStatusApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[TimeZoneInformationApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/TimeZoneInformationApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[UnitTypeApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/UnitTypeApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[UserCompanyInfoApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/UserCompanyInfoApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[UserInvitationApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/UserInvitationApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[VatModeApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/VatModeApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[WorkHoursSummaryDayOverviewApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/WorkHoursSummaryDayOverviewApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[WorkingHoursApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/WorkingHoursApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[WorkingHoursSumDailyApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/WorkingHoursSumDailyApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiListResult[WorkingHoursSumTotalApiModel]": {
      "description": "Implements the generic API list response",
      "properties": {
        "count": {
          "description": "Returns the number of elements in the result data",
          "format": "int64",
          "type": "integer"
        },
        "data": {
          "description": "The API result",
          "items": {
            "$ref": "#/definitions/WorkingHoursSumTotalApiModel"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "Returns the total number of items. To be used for pagination.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiResult[AccountingPeriodMaintenanceApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/AccountingPeriodMaintenanceApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[AccountingSummaryApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/AccountingSummaryApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[ApiUserAuthenticationKeyApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/ApiUserAuthenticationKeyApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[AppVersionApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/AppVersionApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[AsyncTasksStatusModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/AsyncTasksStatusModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[AutologinTokenModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/AutologinTokenModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[Boolean]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "description": "The API result",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ApiResult[CategoryApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/CategoryApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[CompanyApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/CompanyApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[CompanyDomainConfigurationApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/CompanyDomainConfigurationApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[CompanyFullInfoApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/CompanyFullInfoApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[CompanyLatestChangesApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/CompanyLatestChangesApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[CompanyLightweightApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/CompanyLightweightApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[CompanyTypeApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/CompanyTypeApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[ConfigurationApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/ConfigurationApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[CountryApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/CountryApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[DateTime]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "description": "The API result",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApiResult[DeliveryNoteApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/DeliveryNoteApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[DeliveryNoteNumberingFormatApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/DeliveryNoteNumberingFormatApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[Dictionary[CacheModes,Boolean]]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "description": "The API result",
          "properties": {
            "all": {
              "type": "boolean"
            },
            "memory": {
              "type": "boolean"
            },
            "redis": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ApiResult[DocumentPaymentApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/DocumentPaymentApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[ElectronicSignatureConfigurationApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/ElectronicSignatureConfigurationApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[EntityApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/EntityApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[EntityBankAccountApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/EntityBankAccountApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[EstimateApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/EstimateApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[EstimateNumberingFormatApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/EstimateNumberingFormatApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[ExpenseApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/ExpenseApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[ExportA3TaskApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/ExportA3TaskApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[FileApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/FileApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[ImportFileTaskApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/ImportFileTaskApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[ImportedPreviewDataApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/ImportedPreviewDataApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[Int64]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "description": "The API result",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ApiResult[InvoiceApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/InvoiceApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[InvoiceFooterApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/InvoiceFooterApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[InvoiceNumberingFormatApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/InvoiceNumberingFormatApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[IrpfModeApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/IrpfModeApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[LimitsApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/LimitsApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[MailConfigurationApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/MailConfigurationApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[MailPresetsApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/MailPresetsApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[MeApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/MeApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[NoteApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/NoteApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[NotificationApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/NotificationApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[NotificationsAccountPreferencesApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/NotificationsAccountPreferencesApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[NotificationsAndMessagesApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/NotificationsAndMessagesApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[NotificationsAndMessagesCountApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/NotificationsAndMessagesCountApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[Object]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "description": "The API result",
          "type": "object"
        }
      },
      "type": "object"
    },
    "ApiResult[PaymentMethodApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/PaymentMethodApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[PaymentPromocode]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/PaymentPromocode",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[PermissionsApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/PermissionsApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[PredictiveSearchResult]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/PredictiveSearchResult",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[ProductApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/ProductApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[ProductStockOperationApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/ProductStockOperationApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[SignFileTaskApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/SignFileTaskApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[StockControlConfigurationApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/StockControlConfigurationApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[StockForDocumentsAndProductsEnabledApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/StockForDocumentsAndProductsEnabledApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[String]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "description": "The API result",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApiResult[SupportMessageTemplateApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/SupportMessageTemplateApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[TaskStatusApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/TaskStatusApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[UpdateUserCompanyRoleApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/UpdateUserCompanyRoleApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[UploadPublicLogoResponseApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/UploadPublicLogoResponseApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[UserApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/UserApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[UserInvitationResultsApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/UserInvitationResultsApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[VatModeApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/VatModeApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[VersionApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/VersionApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[WorkingHoursApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/WorkingHoursApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[WorkingHoursRegistryConfigurationApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/WorkingHoursRegistryConfigurationApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiResult[WorkingHoursSummaryCurrentDayApiModel]": {
      "description": "Implements the generic API response",
      "properties": {
        "data": {
          "$ref": "#/definitions/WorkingHoursSummaryCurrentDayApiModel",
          "description": "The API result"
        }
      },
      "type": "object"
    },
    "ApiUserAuthenticationKeyApiModel": {
      "description": "Defines the information of an authentication key",
      "properties": {
        "authenticationKey": {
          "description": "The key to use for authenticatication",
          "type": "string"
        },
        "client": {
          "description": "The name of the client linked to the current token",
          "type": "string"
        },
        "createTime": {
          "description": "The time when the authentication key was enabled",
          "format": "date-time",
          "type": "string"
        },
        "isActive": {
          "description": "Indicates if the authentication key is valid or have been revoked",
          "type": "boolean"
        },
        "lastAccessTime": {
          "description": "The last time the authentication key was used",
          "format": "date-time",
          "type": "string"
        },
        "updateTime": {
          "description": "The time when the authentication key was updated",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AppVersionApiModel": {
      "description": "Defines the information of an app version",
      "properties": {
        "appIdentifier": {
          "description": "The identifier (bundle Id or package name) of the app",
          "type": "string"
        },
        "createTime": {
          "description": "The time when the version was created",
          "format": "date-time",
          "type": "string"
        },
        "forceUpdate": {
          "description": "Indicates if it is a forced update",
          "type": "boolean"
        },
        "id": {
          "description": "The identifeir of the version",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "The app name (just a display name)",
          "type": "string"
        },
        "platform": {
          "description": "The app platform",
          "enum": [
            "Android",
            "iOS",
            "WindowsDesktop",
            "WindowsStore"
          ],
          "type": "string"
        },
        "storeUrl": {
          "description": "The URL where to get the version from",
          "type": "string"
        },
        "versionCode": {
          "description": "The app version code",
          "format": "int32",
          "type": "integer"
        },
        "versionName": {
          "description": "The app version name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AsyncTasksStatusModel": {
      "description": "Provides information about async tasks status",
      "properties": {
        "waitingCount": {
          "description": "The list of waiting tasks",
          "format": "int64",
          "type": "integer"
        },
        "waitingTasks": {
          "description": "The list of currently waiting tasks",
          "items": {
            "$ref": "#/definitions/AsyncTasksTaskStatusModel"
          },
          "type": "array"
        },
        "workingTasks": {
          "description": "The list of currently working tasks",
          "items": {
            "$ref": "#/definitions/AsyncTasksTaskStatusModel"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AsyncTasksTaskStatusModel": {
      "description": "Provides information about a waiting task",
      "properties": {
        "companyEmail": {
          "description": "The requesting company email address",
          "type": "string"
        },
        "companyId": {
          "description": "The requesting company identifier",
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "description": "The task identifier",
          "format": "int64",
          "type": "integer"
        },
        "info": {
          "description": "The task extra information",
          "type": "string"
        },
        "lastAttempt": {
          "description": "The execution starting time",
          "format": "date-time",
          "type": "string"
        },
        "queueTime": {
          "description": "The requesting time",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The requested status",
          "enum": [
            "Waiting",
            "Working",
            "Done",
            "Failed",
            "DoneButNotCompleted"
          ],
          "type": "string"
        },
        "task": {
          "description": "The requested task",
          "enum": [
            "UploadInvoiceToDropbox",
            "ExportInvoicesPdfAsZipFile",
            "UploadInvoiceToGoogleDrive",
            "UploadBudgetToDropbox",
            "UploadBudgetToGoogleDrive",
            "UploadDeliveryNoteToDropbox",
            "UploadDeliveryNoteToGoogleDrive",
            "GenerateA3AccountingTransfer",
            "ExportBookIVA",
            "ExportBookIRPF",
            "ExportBookIVAIRPF",
            "ExportAccountingAdvanced",
            "GenerateBankRemittance",
            "GenerateBankRemittanceRefund",
            "SignVirtualDiskFile",
            "ImportDataFromFile"
          ],
          "type": "string"
        },
        "userEmail": {
          "description": "The requesting user email address",
          "type": "string"
        },
        "userId": {
          "description": "The requesting user identifier",
          "format": "int64",
          "type": "integer"
        },
        "waitingTime": {
          "description": "The task waiting time",
          "readOnly": true,
          "type": "string"
        },
        "workingTime": {
          "description": "The task working time",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthenticationResponse": {
      "description": "The schema for the authentication response on the service.",
      "properties": {
        "access_token": {
          "description": "The access token to use on the successive API requests",
          "type": "string"
        },
        "expires": {
          "description": "The date when the access token expires.",
          "type": "string"
        },
        "expires_in": {
          "description": "The number of seconds that the given access token will be valid.",
          "format": "int64",
          "type": "integer"
        },
        "issued": {
          "description": "The date when the access token was issued.",
          "type": "string"
        },
        "refresh_token": {
          "description": "The token to use to obtain a fresh access token. It will be populated only when the 'offline_access' scope is requested.",
          "type": "string"
        },
        "token_type": {
          "description": "The type of token provided. Right now only 'bearer' is supported.",
          "type": "string"
        },
        "username": {
          "description": "The username of the authenticated or registered user.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AutologinTokenModel": {
      "description": "Defines the information for an autologin token",
      "properties": {
        "creationTime": {
          "description": "The token creation time",
          "format": "date-time",
          "type": "string"
        },
        "token": {
          "description": "The generated token",
          "type": "string"
        },
        "validUntil": {
          "description": "The token expiration time",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BrandApiModel": {
      "description": "Defines the information for a brand",
      "properties": {
        "defaultCulture": {
          "description": "Brand default culture",
          "type": "string"
        },
        "hostname": {
          "description": "The brand hostname",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the product",
          "format": "int64",
          "type": "integer"
        },
        "matchPattern": {
          "description": "The brand match pattern",
          "type": "string"
        },
        "name": {
          "description": "Gets the domain description.",
          "type": "string"
        },
        "priority": {
          "description": "Brand priority",
          "format": "int64",
          "type": "integer"
        },
        "redirectAfterLogoutPage": {
          "description": "The URL to redirect the users when logging out",
          "type": "string"
        },
        "redirectAfterSessionExpiredPage": {
          "description": "The URL to redirect the users when session expires",
          "type": "string"
        },
        "startingPage": {
          "description": "Brand start page",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CategoryApiModel": {
      "description": "Defines the information of a product category",
      "properties": {
        "companyId": {
          "description": "The company that owns the category",
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "description": "The identifier of the category",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "The category name",
          "type": "string"
        },
        "parentID": {
          "description": "The category parent ID",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "ClassItem": {
      "properties": {
        "accountGroup": {
          "format": "int32",
          "type": "integer"
        },
        "accountNumber": {
          "type": "string"
        },
        "classItemType": {
          "enum": [
            "Goods",
            "Services"
          ],
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "descriptionPrefix": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "subItems": {
          "items": {
            "$ref": "#/definitions/ClassItem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CompanyApiModel": {
      "description": "Defines the information for a company",
      "properties": {
        "activated": {
          "description": "Indicates if the company is active",
          "format": "int32",
          "type": "integer"
        },
        "brandId": {
          "description": "The ID of the brand where the company was registered",
          "format": "int64",
          "type": "integer"
        },
        "comments": {
          "description": "Free field to insert comments about the company",
          "type": "string"
        },
        "companyTypeId": {
          "description": "The identifier of the company type",
          "format": "int64",
          "type": "integer"
        },
        "country": {
          "$ref": "#/definitions/CountryApiModel",
          "description": "The country of the company"
        },
        "countryId": {
          "description": "The country identifier of the company",
          "format": "int64",
          "type": "integer"
        },
        "creationTime": {
          "description": "Indicates the user creation time",
          "format": "date-time",
          "type": "string"
        },
        "disabledByPendingPayment": {
          "description": "Gets or Sets whether the user is deactivated for having a pending payment.",
          "type": "boolean"
        },
        "disabledByPendingPaymentTime": {
          "description": "Gets or Sets the time when the user go deactivated for having a pending payment.",
          "format": "date-time",
          "type": "string"
        },
        "displayName": {
          "description": "Gets the name to appear on the screen for the company",
          "type": "string"
        },
        "domainId": {
          "description": "The ID of the domain where the company resides",
          "format": "int64",
          "type": "integer"
        },
        "email": {
          "description": "Indicates the email address to contact the company",
          "type": "string"
        },
        "expirationDate": {
          "description": "The company current plan expiration date",
          "format": "date-time",
          "type": "string"
        },
        "extraInformation": {
          "$ref": "#/definitions/CompanyExtraInformationApiModel",
          "description": "Contains the extra information for the current company"
        },
        "firstname": {
          "description": "Indicates the firstname of the user (as individual company)",
          "type": "string"
        },
        "fiscalRegion": {
          "$ref": "#/definitions/FiscalRegionApiModel",
          "description": "The fiscal region of the company"
        },
        "fiscalRegionId": {
          "description": "The fiscal region identifier of the company",
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "description": "The unique identifier of the company",
          "format": "int64",
          "type": "integer"
        },
        "irpfModeCode": {
          "description": "The IRPF estimation code for the company",
          "type": "string"
        },
        "irpfModeId": {
          "description": "The IRPF estimation identifier for the company",
          "format": "int64",
          "type": "integer"
        },
        "isDefault": {
          "description": "Indicates that the current company is the user default company",
          "type": "boolean"
        },
        "lastAccessTime": {
          "description": "Indicates the last access time that the user accessed the platform",
          "format": "date-time",
          "type": "string"
        },
        "lastUpdateTime": {
          "description": "Indicates the last time that user information was updated",
          "format": "date-time",
          "type": "string"
        },
        "lastname": {
          "description": "Indicates the lastname of the user (as individual company)",
          "type": "string"
        },
        "name": {
          "description": "Indicates the name of the user (as individual company)",
          "type": "string"
        },
        "nif": {
          "description": "Indicates the NIF of the company",
          "type": "string"
        },
        "organizationName": {
          "description": "Indicates the name of the company",
          "type": "string"
        },
        "paymentType": {
          "description": "The user current payment type",
          "enum": [
            "None",
            "Pasarela",
            "Domiciliacion",
            "External",
            "TarjetaCredito",
            "Paypal"
          ],
          "type": "string"
        },
        "personName": {
          "description": "Builds the name of the organization as a single person",
          "type": "string"
        },
        "requiresConfiguration": {
          "description": "Indicates that the company requires to be configured (equivalent to web initial setup)",
          "type": "boolean"
        },
        "showRecargoEquivalencia": {
          "description": "Indicates if the company needs to show the RE option",
          "type": "boolean"
        },
        "timeZone": {
          "description": "The timezone of the company",
          "type": "string"
        },
        "type": {
          "description": "The current plan of the company",
          "enum": [
            "Basico",
            "Profesional",
            "Ultimate"
          ],
          "type": "string"
        },
        "uiCulture": {
          "description": "The UI culture of the company",
          "type": "string"
        },
        "vatTypeCode": {
          "description": "The code of the VAT mode",
          "type": "string"
        },
        "vatTypeId": {
          "description": "The VAT type identifier",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CompanyChange": {
      "properties": {
        "date": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CompanyDomainConfigurationApiModel": {
      "description": "Contains the information for a company domain configuration",
      "properties": {
        "code": {
          "description": "The code of the company domain",
          "type": "string"
        },
        "domainId": {
          "description": "The identifier of the company domain",
          "format": "int64",
          "type": "integer"
        },
        "isAeatCertificationEnabled": {
          "description": "Indicates if the Aeat certification feature is enabled",
          "type": "boolean"
        },
        "isDisabledByPendingPayment": {
          "description": "Returns if the domain is disabled by pending payment",
          "type": "boolean"
        },
        "migrateToContasimpleDomain": {
          "description": "Indicates if data of companies should be migrated to Contasimple Domain",
          "type": "boolean"
        },
        "migrateToContasimpleDomainDescription": {
          "description": "Description to show to users that are going to be migrated",
          "type": "string"
        },
        "name": {
          "description": "The name of the company domain",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CompanyExtraInformationApiModel": {
      "description": "Contains extra configuration for the company",
      "properties": {
        "companyIdentifierName": {
          "description": "The name of the Company Identifier (NIF title)",
          "type": "string"
        },
        "currencySymbol": {
          "description": "The symbol of the company currency",
          "type": "string"
        },
        "currencySymbolIsSuffix": {
          "description": "Indicates if the currency sumbol goes after (true) or before (false) the value",
          "type": "boolean"
        },
        "customAutoNumberFormat": {
          "description": "The company auto-numbering format",
          "type": "string"
        },
        "customDeliveryNoteAutoNumberFormat": {
          "description": "The company auto-numbering format for delivery notes",
          "type": "string"
        },
        "customEntityField1Name": {
          "description": "The name of the company custom field 1",
          "type": "string"
        },
        "customEntityField2Name": {
          "description": "The name of the company custom field 2",
          "type": "string"
        },
        "customEstimateAutoNumberFormat": {
          "description": "The company auto-numbering format for estimates",
          "type": "string"
        },
        "deliveryNoteCulture": {
          "description": "The culture for company delivery notes",
          "type": "string"
        },
        "enablePaginationInLists": {
          "description": "Enable or disable pagination on lists",
          "type": "boolean"
        },
        "entity": {
          "$ref": "#/definitions/EntityApiModel",
          "description": "The company owner entity"
        },
        "estimateCulture": {
          "description": "The culture for company estimates",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the extra information",
          "format": "int64",
          "type": "integer"
        },
        "importDeliveryNoteLineByLine": {
          "description": "When we invoice a delivery note, weather we should group lines of the delivery note or not.",
          "type": "boolean"
        },
        "invoiceCulture": {
          "description": "The culture for company invoices",
          "type": "string"
        },
        "invoiceDataFilled": {
          "description": "Indicates if the company invoice data have been filled",
          "type": "boolean"
        },
        "reName": {
          "description": "The name of the RE tax",
          "type": "string"
        },
        "reTypes": {
          "description": "The list of RE types for the company",
          "items": {
            "$ref": "#/definitions/ReTypeApiModel"
          },
          "type": "array"
        },
        "retentionName": {
          "description": "The name of the retention tax",
          "type": "string"
        },
        "retentionTypes": {
          "description": "The list of retention types for the company",
          "items": {
            "$ref": "#/definitions/RetentionTypeApiModel"
          },
          "type": "array"
        },
        "signElectronicInvoices": {
          "description": "The sign option for the electronic invoices",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        },
        "signPDFDeliveryNotes": {
          "description": "The sign option for the PDF Delivery notes",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        },
        "signPDFEstimates": {
          "description": "The sign option for the PDF Estimates",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        },
        "signPDFInvoices": {
          "description": "The sign option for the PDF invoices",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        },
        "signVirtualDriveFiles": {
          "description": "The sign option for the virtual drive files",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        },
        "vatName": {
          "description": "The name of the VAT tax",
          "type": "string"
        },
        "vatTypes": {
          "description": "The list of VAT types for the company",
          "items": {
            "$ref": "#/definitions/VatTypeApiModel"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CompanyFiscalAddress": {
      "properties": {
        "address": {
          "type": "string"
        },
        "municipality": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "province": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CompanyFullInfoApiModel": {
      "description": "API model that wraps the eInforma full company profile response.",
      "properties": {
        "email": {
          "description": "The company corporative email address.",
          "type": "string"
        },
        "fax": {
          "description": "The company fax number.",
          "type": "string"
        },
        "fiscalAddress": {
          "$ref": "#/definitions/CompanyFiscalAddress",
          "description": "Aggregates all company fiscal address related fields."
        },
        "latitude": {
          "description": "Geocoordinate component latitude (Lat) of the company ubication.",
          "type": "string"
        },
        "longitude": {
          "description": "Geocoordinate component longitude (Long/Ln) of the company ubication.",
          "type": "string"
        },
        "nif": {
          "description": "The company NIF. They call it CIF, however this terminology is deprecated nowadays in Spain.",
          "type": "string"
        },
        "organizationName": {
          "description": "This field represents what in spanish is known as the \"Denominación Social\" \r\nex: \"Contasimple S.L\"",
          "type": "string"
        },
        "phone": {
          "description": "The company phone number.",
          "type": "string"
        },
        "remainingRequests": {
          "description": "Remaining company requests counter. eInforma limit is set to 500 different company requests/month per Contasimple companyId.",
          "format": "int32",
          "type": "integer"
        },
        "web": {
          "description": "The company corporative website URL",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CompanyLatestChangesApiModel": {
      "description": "API model that wraps the eInforma API response with the company latest changes, plus the URLs \r\nto the sample and full reports for the end-user to buy.",
      "properties": {
        "companyChanges": {
          "description": "A List of company changes.",
          "items": {
            "$ref": "#/definitions/CompanyChange"
          },
          "type": "array"
        },
        "executiveSummaryReportFull": {
          "description": "URL link pointing to the 'Resumen ejecutivo' full report, with no data displayed and the 'Purchase' button.",
          "type": "string"
        },
        "executiveSummaryReportSample": {
          "description": "URL link pointing to the 'Resumen ejecutivo' sample report \r\nwith all fields visible, but with fictional company data.",
          "type": "string"
        },
        "latestChangesReportFull": {
          "description": "URL link pointing to the 'Informe Financiero' full report, with no data displayed and the 'Purchase' button.",
          "type": "string"
        },
        "latestChangesReportSample": {
          "description": "URL link pointing to the 'Informe Financiero' with the latest company changes sample report,\r\nwith all fields visible, but with fictional company data.",
          "type": "string"
        },
        "organizationName": {
          "description": "This field represents what in spanish is known as the \"Denominación Social\" \r\nex: \"Contasimple S.L\"",
          "type": "string"
        },
        "otherReports": {
          "description": "URL link pointing to a company summary with all available reports to purchase.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CompanyLightweightApiModel": {
      "description": "Defines the information for a company",
      "properties": {
        "activated": {
          "description": "Indicates if the company is active",
          "format": "int32",
          "type": "integer"
        },
        "displayName": {
          "description": "Gets the name to appear on the screen for the company",
          "type": "string"
        },
        "domainId": {
          "description": "The ID of the domain where the company resides",
          "format": "int64",
          "type": "integer"
        },
        "email": {
          "description": "Indicates the email address to contact the company",
          "type": "string"
        },
        "expirationDate": {
          "description": "The company current plan expiration date",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier of the company",
          "format": "int64",
          "type": "integer"
        },
        "isDefault": {
          "description": "Indicates that the current company is the user default company",
          "type": "boolean"
        },
        "nif": {
          "description": "Indicates the NIF of the company",
          "type": "string"
        },
        "organizationName": {
          "description": "Indicates the name of the company",
          "type": "string"
        },
        "requiresConfiguration": {
          "description": "Indicates that the company requires to be configured (equivalent to web initial setup)",
          "type": "boolean"
        },
        "type": {
          "description": "The current plan of the company",
          "enum": [
            "Basico",
            "Profesional",
            "Ultimate"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CompanySummary": {
      "properties": {
        "name": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "provinceCode": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CompanyTypeApiModel": {
      "description": "Contains the information for an company type",
      "properties": {
        "code": {
          "description": "The company type code",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the company type",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "The company type name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConfigurationApiModel": {
      "description": "Contains all the platform configuration options",
      "properties": {
        "allCountries": {
          "description": "All countries configuration",
          "items": {
            "$ref": "#/definitions/CountryApiModel"
          },
          "type": "array"
        },
        "companyTypes": {
          "description": "Company types configuration",
          "items": {
            "$ref": "#/definitions/CompanyTypeApiModel"
          },
          "type": "array"
        },
        "countries": {
          "description": "Countries configuration",
          "items": {
            "$ref": "#/definitions/CountryApiModel"
          },
          "type": "array"
        },
        "irpfEstimationModes": {
          "description": "IRPF estimation modes",
          "items": {
            "$ref": "#/definitions/IrpfModeApiModel"
          },
          "type": "array"
        },
        "issuedInvoicesClasses": {
          "description": "The list of invoice types for the issued invoices",
          "items": {
            "$ref": "#/definitions/ClassItem"
          },
          "type": "array"
        },
        "receivedInvoicesClasses": {
          "description": "The list of invoice types for received invoices",
          "items": {
            "$ref": "#/definitions/ClassItem"
          },
          "type": "array"
        },
        "vatModes": {
          "description": "VAT modes",
          "items": {
            "$ref": "#/definitions/VatModeApiModel"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ConfigureCompanyApiModel": {
      "description": "Contains the information to configura a company",
      "properties": {
        "companyTypeId": {
          "description": "The identifier of the company type",
          "format": "int64",
          "type": "integer"
        },
        "countryId": {
          "description": "The identifier of the country to select",
          "format": "int64",
          "type": "integer"
        },
        "entity": {
          "$ref": "#/definitions/ConfigureCompanyEntityApiModel",
          "description": "THe information of the company entity"
        },
        "fiscalRegionId": {
          "description": "The identifier of the fiscal region",
          "format": "int64",
          "type": "integer"
        },
        "irpfModeId": {
          "description": "The identifier of the IRPF mode",
          "format": "int64",
          "type": "integer"
        },
        "vatModeId": {
          "description": "The identifier of the VAT mode",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ConfigureCompanyEntityApiModel": {
      "description": "Defines the information for working with entities",
      "properties": {
        "address": {
          "description": "The entity address",
          "type": "string"
        },
        "city": {
          "description": "The entity city",
          "type": "string"
        },
        "companyId": {
          "description": "The company that owns the entity",
          "format": "int64",
          "type": "integer"
        },
        "country": {
          "description": "The entity country. Do not use (available only for old clients). Use the countryId otherwise.",
          "type": "string"
        },
        "countryId": {
          "description": "The country identifier",
          "format": "int64",
          "type": "integer"
        },
        "customField1": {
          "description": "The entity custom field 1",
          "type": "string"
        },
        "customField2": {
          "description": "The entity custom field 2",
          "type": "string"
        },
        "email": {
          "description": "The entity email address",
          "type": "string"
        },
        "fax": {
          "description": "The entity fax number",
          "type": "string"
        },
        "firstname": {
          "description": "The person firstname (required for company type = autonomo)",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the entity",
          "format": "int64",
          "type": "integer"
        },
        "lastname": {
          "description": "The person lastname (required for company type = autonomo)",
          "type": "string"
        },
        "latitude": {
          "description": "Map latitude of the contact. Does not have to match the exact address latitude\r\nA value between: [-90, +90]",
          "format": "double",
          "type": "number"
        },
        "longitude": {
          "description": "Map longitude of the contact. Does not have to match the exact address longitude\r\nA value between: [-180,+180]",
          "format": "double",
          "type": "number"
        },
        "name": {
          "description": "The person name (required for company type = autonomo)",
          "type": "string"
        },
        "nif": {
          "description": "The NIF number of the entity",
          "pattern": "^.{1,50}$",
          "type": "string"
        },
        "notes": {
          "description": "The entity notes",
          "type": "string"
        },
        "organization": {
          "description": "The organization name of the entity",
          "type": "string"
        },
        "phone": {
          "description": "The entity phone number",
          "type": "string"
        },
        "postalCode": {
          "description": "The entity postal code",
          "type": "string"
        },
        "province": {
          "description": "The entity province",
          "type": "string"
        },
        "type": {
          "description": "The type of entity",
          "enum": [
            "Issuer",
            "Target",
            "None",
            "Owner",
            "Invoicepayment",
            "InvoiceDomiciliation"
          ],
          "type": "string"
        },
        "url": {
          "description": "The entity URL address",
          "type": "string"
        }
      },
      "required": [
        "organization",
        "nif"
      ],
      "type": "object"
    },
    "CountryApiModel": {
      "description": "Defines the information for a country",
      "properties": {
        "defaultTimeZone": {
          "description": "The default timezone for the country",
          "type": "string"
        },
        "displayOnAccountConfiguration": {
          "description": "Indicates that the country is available for account configuration",
          "type": "boolean"
        },
        "fiscalRegions": {
          "description": "The list of fiscal regions on the country",
          "items": {
            "$ref": "#/definitions/FiscalRegionApiModel"
          },
          "type": "array"
        },
        "id": {
          "description": "The identifier of the country",
          "format": "int64",
          "type": "integer"
        },
        "isoCodeAlpha2": {
          "description": "The country ISO Alpha-2 code",
          "type": "string"
        },
        "isoCodeAlpha3": {
          "description": "The country ISO Alpha-3 code",
          "type": "string"
        },
        "name": {
          "description": "The name of the country",
          "type": "string"
        },
        "nifValidationRegex": {
          "description": "The regular expression to use for validation NIF for this country",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateCompanyApiModel": {
      "description": "Defines the information for creating a new company",
      "properties": {
        "email": {
          "description": "The contact email address of the new company to create",
          "type": "string"
        },
        "type": {
          "description": "The type of the company to create. Only used if the current user has the necessary permissions.",
          "enum": [
            "Basico",
            "Profesional",
            "Ultimate"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateDeliveryNoteApiModel": {
      "description": "Defines the information for creating a new delivery note",
      "properties": {
        "date": {
          "description": "The delivery note date",
          "format": "date-time",
          "type": "string"
        },
        "footer": {
          "description": "Delivery note notes",
          "type": "string"
        },
        "lines": {
          "description": "The number of lines that compose the delivery note",
          "items": {
            "$ref": "#/definitions/DeliveryNoteLineRequestApiModel"
          },
          "type": "array"
        },
        "notes": {
          "description": "Delivery note notes",
          "type": "string"
        },
        "number": {
          "description": "The delivery note number to create",
          "type": "string"
        },
        "numberingFormatId": {
          "description": "The id of the numbering format applied to the invoice number (optional)",
          "format": "int64",
          "type": "integer"
        },
        "relatedEstimateId": {
          "description": "The identifier of the estimate related to the delivery note (if required)",
          "format": "int64",
          "type": "integer"
        },
        "retentionPercentage": {
          "description": "The percentage of the retention value",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "status": {
          "description": "The current status of the delivery note",
          "enum": [
            "Creado",
            "Enviado",
            "Aceptado",
            "Rechazado",
            "Parcial",
            "Facturado",
            "Cerrado"
          ],
          "type": "string"
        },
        "targetEntityId": {
          "description": "Contains the delivery note entity identifier",
          "format": "int64",
          "minimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "number",
        "date",
        "lines"
      ],
      "type": "object"
    },
    "CreateEstimateApiModel": {
      "description": "Defines the information for creating a new estimate",
      "properties": {
        "date": {
          "description": "The estimate date",
          "format": "date-time",
          "type": "string"
        },
        "expirationDate": {
          "description": "The estimate expiration time (can be null)",
          "format": "date-time",
          "type": "string"
        },
        "footer": {
          "description": "Estimate notes",
          "type": "string"
        },
        "lines": {
          "description": "The number of lines that compose the estimate",
          "items": {
            "$ref": "#/definitions/EstimateLineRequestApiModel"
          },
          "type": "array"
        },
        "notes": {
          "description": "Estimate notes",
          "type": "string"
        },
        "number": {
          "description": "The estimate number to create",
          "type": "string"
        },
        "numberingFormatId": {
          "description": "The id of the numbering format applied to the invoice number (optional)",
          "format": "int64",
          "type": "integer"
        },
        "retentionPercentage": {
          "description": "The percentage of the retention value",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "status": {
          "description": "The current status of the estimate",
          "enum": [
            "Creado",
            "Enviado",
            "Aceptado",
            "Rechazado",
            "Parcial",
            "Facturado",
            "ParcialAlbaranado",
            "Albaranado",
            "Cerrado"
          ],
          "type": "string"
        },
        "targetEntityId": {
          "description": "Contains the expense entity identifier",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "number",
        "date",
        "lines"
      ],
      "type": "object"
    },
    "CreateExpenseApiModel": {
      "description": "Defines the information for creating a new expense",
      "properties": {
        "amount": {
          "description": "The amount for the expense (including taxes). \r\nThere is a limit of two decimals.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "concept": {
          "description": "Brief description about what the expense was.",
          "type": "string"
        },
        "date": {
          "description": "Expense date",
          "format": "date-time",
          "type": "string"
        },
        "expenseClass": {
          "description": "The type of expense",
          "format": "int32",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer"
        },
        "imputation": {
          "description": "The percentage of the expense that will be involved in the fiscal computations.",
          "format": "int32",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        },
        "issuerEntityId": {
          "description": "Contains the expense entity identifier",
          "format": "int64",
          "minimum": 0,
          "type": "integer"
        },
        "notes": {
          "description": "Some notes the use can input regarding the expense.",
          "type": "string"
        },
        "number": {
          "description": "The expense number",
          "type": "string"
        },
        "paymentMethodId": {
          "description": "Contains the document payment method identifier",
          "format": "int64",
          "minimum": 0,
          "type": "integer"
        },
        "specificEntity": {
          "$ref": "#/definitions/ExpenseSpecificEntityApiModel",
          "description": "Contains information for a single use expense entity"
        }
      },
      "required": [
        "date",
        "amount",
        "imputation",
        "expenseClass"
      ],
      "type": "object"
    },
    "CreateFolderApiModel": {
      "description": "Defines the information for creating a folder",
      "properties": {
        "name": {
          "description": "The name of the folder to create",
          "type": "string"
        },
        "parentId": {
          "description": "The parent ID of the new folder",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "CreateIssuedInvoiceApiModel": {
      "description": "Defines the information for creating an issued invoice",
      "properties": {
        "date": {
          "description": "The invoice date",
          "format": "date-time",
          "type": "string"
        },
        "expirationDate": {
          "description": "The invoice expiration time (can be null)",
          "format": "date-time",
          "type": "string"
        },
        "footer": {
          "description": "Invoice notes",
          "type": "string"
        },
        "invoiceClass": {
          "description": "The issued / received invoice class",
          "format": "int32",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer"
        },
        "lines": {
          "description": "The number of lines that compose the invoice",
          "items": {
            "$ref": "#/definitions/InvoiceLineRequestApiModel"
          },
          "type": "array"
        },
        "notes": {
          "description": "Invoice notes",
          "type": "string"
        },
        "number": {
          "description": "The invoice number to create",
          "type": "string"
        },
        "numberingFormatId": {
          "description": "The id of the numbering format applied to the invoice number (optional)",
          "format": "int64",
          "type": "integer"
        },
        "operationDate": {
          "description": "The operation date of the invoice",
          "format": "date-time",
          "type": "string"
        },
        "operationType": {
          "description": "The operation type for the invoice. \r\nDepends on the type of invoice and the company configuration.",
          "type": "string"
        },
        "rectifiesInvoiceId": {
          "description": "If not NULL contains the identifier of the invoice which the current invoice is rectifying",
          "format": "int64",
          "type": "integer"
        },
        "relatedDeliveryNotesId": {
          "description": "The identifiers of the delivery notes related to the invoice to create (if required)",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        },
        "relatedEstimatesId": {
          "description": "The identifier of the estimate related to the invoice to create (if required)",
          "format": "int64",
          "type": "integer"
        },
        "retentionPercentage": {
          "description": "The percentage of the retention value",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "targetEntityId": {
          "description": "The identifier of the invoice target",
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        }
      },
      "required": [
        "targetEntityId",
        "number",
        "date",
        "invoiceClass",
        "lines"
      ],
      "type": "object"
    },
    "CreateProductApiModel": {
      "description": "Defines the information for update a product",
      "properties": {
        "acquisitionCost": {
          "description": "Acquisition product cost",
          "format": "double",
          "type": "number"
        },
        "active": {
          "description": "Product is visible or not",
          "type": "boolean"
        },
        "allowProductSellWhenNoStock": {
          "description": "Indicates if the product sell is allowed when is out of stock",
          "type": "boolean"
        },
        "categoryId": {
          "description": "The category family id",
          "format": "int64",
          "type": "integer"
        },
        "companyId": {
          "description": "The company that owns the product",
          "format": "int64",
          "type": "integer"
        },
        "currentStock": {
          "description": "The current stock of the product",
          "format": "double",
          "type": "number"
        },
        "customField1": {
          "description": "Custom field for the product",
          "type": "string"
        },
        "customField2": {
          "description": "Custom field for the product",
          "type": "string"
        },
        "customField3": {
          "description": "Custom field for the product",
          "type": "string"
        },
        "customField4": {
          "description": "Custom field for the product",
          "type": "string"
        },
        "description": {
          "description": "The product description",
          "type": "string"
        },
        "discountPercentage": {
          "description": "The product discount percentage",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "externalReference": {
          "description": "External product reference",
          "type": "string"
        },
        "fullCategoriesPath": {
          "description": "Product categories path",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the product",
          "format": "int64",
          "type": "integer"
        },
        "internalCode": {
          "description": "Internal product code",
          "type": "string"
        },
        "isStockCompanyNotificationEnabled": {
          "description": "Indicates if the out of stock application notifications are enabled for the product",
          "type": "boolean"
        },
        "isStockControlEnabled": {
          "description": "Indicates if the stock control is enabled for the product",
          "type": "boolean"
        },
        "isStockEmailNotificationEnabled": {
          "description": "Indicates if the out of stock email notification is enabled",
          "type": "boolean"
        },
        "isStockNotificationDisplayOnDashboardEnabled": {
          "description": "Indicates if the out of stock notification is enabled in the application dashboard",
          "type": "boolean"
        },
        "isStockNotificationEnabled": {
          "description": "Indicates if the out of stock notifications are enabled for the product",
          "type": "boolean"
        },
        "minUnitsTriggerAlarm": {
          "description": "The minimum number of unit to trigger the product out of stock alarm",
          "format": "double",
          "type": "number"
        },
        "name": {
          "description": "The product name",
          "type": "string"
        },
        "notes": {
          "description": "Notes of the product",
          "type": "string"
        },
        "price": {
          "description": "The product price",
          "format": "double",
          "type": "number"
        },
        "unitTypeId": {
          "description": "The unit type id of the product",
          "format": "int64",
          "type": "integer"
        },
        "vat": {
          "description": "The product VAT",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "name",
        "price",
        "vat"
      ],
      "type": "object"
    },
    "CreateReceivedInvoiceApiModel": {
      "description": "Defines the information for creating an received invoice",
      "properties": {
        "date": {
          "description": "The invoice date",
          "format": "date-time",
          "type": "string"
        },
        "expirationDate": {
          "description": "The invoice expiration time (can be null)",
          "format": "date-time",
          "type": "string"
        },
        "footer": {
          "description": "Invoice notes",
          "type": "string"
        },
        "imputation": {
          "description": "The part of the invoice to impute for taxes",
          "format": "int32",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        },
        "invoiceClass": {
          "description": "The issued / received invoice class",
          "format": "int32",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer"
        },
        "isCashCriteria": {
          "description": "Indicates if the invoice is cash criteria",
          "type": "boolean"
        },
        "issuerEntityId": {
          "description": "The identifier of the invoice issuer",
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        },
        "lines": {
          "description": "The number of lines that compose the invoice",
          "items": {
            "$ref": "#/definitions/InvoiceLineRequestApiModel"
          },
          "type": "array"
        },
        "notes": {
          "description": "Invoice notes",
          "type": "string"
        },
        "number": {
          "description": "The invoice number to create",
          "type": "string"
        },
        "operationDate": {
          "description": "The operation date of the invoice",
          "format": "date-time",
          "type": "string"
        },
        "operationType": {
          "description": "The operation type for the invoice. \r\nDepends on the type of invoice and the company configuration.",
          "type": "string"
        },
        "retentionPercentage": {
          "description": "The percentage of the retention value",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "vatImputation": {
          "description": "The part of the VAT to impute for taxes",
          "format": "int32",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "issuerEntityId",
        "imputation",
        "number",
        "date",
        "invoiceClass",
        "lines"
      ],
      "type": "object"
    },
    "CreateUserApiModel": {
      "description": "Contains the information to create a new user",
      "properties": {
        "password": {
          "description": "The password of the new user to create",
          "maxLength": 2147483647,
          "minLength": 5,
          "type": "string"
        },
        "role": {
          "description": "The role of the new user to create",
          "enum": [
            "User",
            "MultiUser",
            "Manager",
            "Administrator",
            "Root"
          ],
          "type": "string"
        },
        "username": {
          "description": "The username of the new user to create",
          "type": "string"
        }
      },
      "required": [
        "username",
        "password"
      ],
      "type": "object"
    },
    "DeliveryNoteApiModel": {
      "description": "Contains the information for a delivery note",
      "properties": {
        "deliveryNoteDate": {
          "description": "The delivery note date",
          "format": "date-time",
          "type": "string"
        },
        "entityString": {
          "description": "The name that represents the issuer or target entity of the delivery note",
          "type": "string"
        },
        "footer": {
          "description": "The delivery note footer",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the delivery note",
          "format": "int64",
          "type": "integer"
        },
        "issueDate": {
          "description": "Contains delivery note issue date (could be null)",
          "format": "date-time",
          "type": "string"
        },
        "issuer": {
          "$ref": "#/definitions/DocumentEntityApiModel",
          "description": "The entity issuer. The one who generated the delivery note."
        },
        "lastUpdateDate": {
          "description": "The last time the delivery note was updated",
          "format": "date-time",
          "type": "string"
        },
        "lines": {
          "description": "The line objects for the delivery note",
          "items": {
            "$ref": "#/definitions/DeliveryNoteLineApiModel"
          },
          "type": "array"
        },
        "notes": {
          "description": "Delivery note notes",
          "type": "string"
        },
        "number": {
          "description": "The delivery note number",
          "type": "string"
        },
        "numberingFormatId": {
          "description": "If not NULL contains the identifier of the selected numbering format.",
          "format": "int64",
          "type": "integer"
        },
        "originalIssuerEntityID": {
          "description": "Original ID of the issuer of the delivery note",
          "format": "int64",
          "type": "integer"
        },
        "originalTargetEntityID": {
          "description": "Original ID of the target of the delivery note",
          "format": "int64",
          "type": "integer"
        },
        "relatedEstimateId": {
          "description": "The identifier of the estimate related to the delivery note (if exists)",
          "format": "int64",
          "type": "integer"
        },
        "retentionAmount": {
          "description": "The delivery note retention amount",
          "format": "double",
          "type": "number"
        },
        "retentionPercentage": {
          "description": "The delivery note retention percentage",
          "format": "double",
          "type": "number"
        },
        "status": {
          "description": "The current status of the delivery note",
          "enum": [
            "Creado",
            "Enviado",
            "Aceptado",
            "Rechazado",
            "Parcial",
            "Facturado",
            "Cerrado"
          ],
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/DocumentEntityApiModel",
          "description": "The entity target. The receiver of the delivery note."
        },
        "totalAmount": {
          "description": "Gets the total final amount for the delivery note (the value returned includes the \r\naddition of the taxable amount plus the VAT amount for every line) less the\r\nretention amount. TotalAmount = BI +IVA - Retencion + R.E",
          "format": "double",
          "type": "number"
        },
        "totalReAmount": {
          "description": "The total RE amount of the delivery note",
          "format": "double",
          "type": "number"
        },
        "totalTaxableAmount": {
          "description": "Gets the total taxable amount for the delivery note (the value returned includes the \r\naddition of the taxable amounts for the several lines). (Spain: Base imponible)",
          "format": "double",
          "type": "number"
        },
        "totalVatAmount": {
          "description": "Gets the total VAT amount for the delivery note (the value returned includes the \r\naddition of the VAT amounts for the several lines).",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "DeliveryNoteIdentifiersListApiModel": {
      "description": "The list of delivery note identifier",
      "properties": {
        "identifiers": {
          "description": "The list of identifiers",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DeliveryNoteLineApiModel": {
      "description": "Defines the information for a delivery note line",
      "properties": {
        "concept": {
          "description": "The line concept",
          "type": "string"
        },
        "detailedDescription": {
          "description": "A detailed description for the delivery note line",
          "type": "string"
        },
        "discountPercentage": {
          "description": "The discount percentage to apply to the delivery note line",
          "format": "double",
          "type": "number"
        },
        "id": {
          "description": "The identifier of the delivery note line",
          "format": "int64",
          "type": "integer"
        },
        "productId": {
          "description": "The selected product associated to the line for stock control",
          "format": "int64",
          "type": "integer"
        },
        "productName": {
          "description": "The selected product name associated to the line for stock control",
          "type": "string"
        },
        "productSku": {
          "description": "The selected product sku associated to the line for stock control",
          "type": "string"
        },
        "quantity": {
          "description": "The line items quantity",
          "format": "double",
          "type": "number"
        },
        "reAmount": {
          "description": "The RE amount",
          "format": "double",
          "type": "number"
        },
        "rePercentage": {
          "description": "The RE percentage",
          "format": "double",
          "type": "number"
        },
        "totalTaxableAmount": {
          "description": "The TotalTaxableAmount of the delivery note line",
          "format": "double",
          "type": "number"
        },
        "unitTaxableAmount": {
          "description": "Gets or Sets the unit price (the price for a single unit of product) for the delivery note line. \r\nThe total taxable amount for the line will be UnitTaxableAmount * Quantity.",
          "format": "double",
          "type": "number"
        },
        "vatAmount": {
          "description": "Gets or Sets the total VAT amount for the delivery note line.",
          "format": "double",
          "type": "number"
        },
        "vatPercentage": {
          "description": "Gets or Sets the VAT percentage of a single unit of product. If the TotalVATAmount property is set it takes precedence over \r\nthis property and the value returned is computed from the TotalVATAmount and UnitTaxableAmount properties.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "DeliveryNoteLineRequestApiModel": {
      "description": "Contains the information to create a delivery note line",
      "properties": {
        "concept": {
          "description": "The delivery note line concept",
          "type": "string"
        },
        "detailedDescription": {
          "description": "A detailed description for the delivery note",
          "type": "string"
        },
        "discountPercentage": {
          "description": "The discount percentage to apply to the delivery note",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "productId": {
          "description": "The selected product id for stock control (optional)",
          "format": "int64",
          "type": "integer"
        },
        "productName": {
          "description": "The selected product name associated to the line for stock control",
          "type": "string"
        },
        "productSku": {
          "description": "The selected product sku associated to the line for stock control",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity of items on the delivery note line",
          "format": "double",
          "type": "number"
        },
        "reAmount": {
          "description": "The RE amount of the delivery note line\r\nThere is a limit of two decimals.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "rePercentage": {
          "description": "The RE percentage to apply to the delivery note line",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "totalTaxableAmount": {
          "description": "The total taxable amount of the line.\r\nThere is a limit of two decimals.\r\nThis value is required to show the same rounded value applied by the client on the PDF.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "unitAmount": {
          "description": "The delivery note line unit base amount\r\nThere is a limit of two decimals.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "vatAmount": {
          "description": "The VAT amount of the delivery note line\r\nThere is a limit of two decimals.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "vatPercentage": {
          "description": "The VAT percentage to apply to the delivery note line",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "concept",
        "unitAmount",
        "quantity",
        "vatPercentage",
        "vatAmount",
        "totalTaxableAmount"
      ],
      "type": "object"
    },
    "DeliveryNoteNumberingFormatApiModel": {
      "description": "Defines the information for the delivery note numbering format",
      "properties": {
        "id": {
          "description": "The numbering format identifier",
          "format": "int64",
          "type": "integer"
        },
        "isActive": {
          "description": "Indicates if the numbering format is activated or deactivated",
          "type": "boolean"
        },
        "isDefault": {
          "description": "Indicates if the numbering format is the default one",
          "type": "boolean"
        },
        "mask": {
          "description": "The numbering format mask",
          "type": "string"
        },
        "name": {
          "description": "The name of the numbering format",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeliveryNoteNumberingFormatRequestApiModel": {
      "description": "Defines the information for the delivery note numbering format",
      "properties": {
        "mask": {
          "description": "The numbering format mask",
          "type": "string"
        },
        "name": {
          "description": "The name of the numbering format",
          "type": "string"
        }
      },
      "required": [
        "name",
        "mask"
      ],
      "type": "object"
    },
    "DeliveryNoteProductInfoApiModel": {
      "description": "Class that contains the information of a product into a delivery note stock control operation",
      "properties": {
        "documents": {
          "description": "The list of the documents where the stock was controlled",
          "items": {
            "$ref": "#/definitions/DocumentStockControlledInfoApiModel"
          },
          "type": "array"
        },
        "productId": {
          "description": "The product id",
          "format": "int64",
          "type": "integer"
        },
        "productName": {
          "description": "The product name",
          "type": "string"
        },
        "productNameSKU": {
          "description": "The product name with SKU",
          "type": "string"
        },
        "productSKU": {
          "description": "The product SKU",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeliveryNoteStatusApiModel": {
      "description": "Defines a delivery note status",
      "properties": {
        "status": {
          "description": "The current status of the delivery note",
          "enum": [
            "Creado",
            "Enviado",
            "Aceptado",
            "Rechazado",
            "Parcial",
            "Facturado",
            "Cerrado"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeliveryNotesProductInfoRequestApiModel": {
      "description": "Class that contains a list of delivery note ids to obtain the products with stock controlled at delivery note operations",
      "properties": {
        "deliveryNoteId": {
          "description": "A list of delivery note ids",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DeliveryNotesToInvoiceLinesApiModel": {
      "description": "Class that contains a list of delivery notes to group each delivery note lines by taxes",
      "properties": {
        "deliveryNoteId": {
          "description": "A list of delivery note ids",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DocumentEntityApiModel": {
      "description": "Defines the information for a document entity (the entity that is associated to an invoice, estimate or delivery note)",
      "properties": {
        "address": {
          "description": "The entity address",
          "type": "string"
        },
        "city": {
          "description": "The entity city",
          "type": "string"
        },
        "country": {
          "description": "The entity country",
          "type": "string"
        },
        "countryId": {
          "description": "The country identifier",
          "format": "int64",
          "type": "integer"
        },
        "customField1": {
          "description": "The entity custom field 1",
          "type": "string"
        },
        "customField2": {
          "description": "The entity custom field 2",
          "type": "string"
        },
        "email": {
          "description": "The entity email address",
          "type": "string"
        },
        "fax": {
          "description": "The entity fax number",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the entity",
          "format": "int64",
          "type": "integer"
        },
        "nif": {
          "description": "The NIF number of the entity",
          "type": "string"
        },
        "notes": {
          "description": "The entity notes",
          "type": "string"
        },
        "organization": {
          "description": "The organization name of the entity",
          "type": "string"
        },
        "phone": {
          "description": "The entity phone number",
          "type": "string"
        },
        "postalCode": {
          "description": "The entity postal code",
          "type": "string"
        },
        "province": {
          "description": "The entity province",
          "type": "string"
        },
        "url": {
          "description": "The entity URL address",
          "type": "string"
        }
      },
      "required": [
        "organization",
        "nif"
      ],
      "type": "object"
    },
    "DocumentPaymentApiModel": {
      "description": "Defines an invoice payment",
      "properties": {
        "amount": {
          "description": "The payed amount",
          "format": "double",
          "type": "number"
        },
        "date": {
          "description": "The payment date",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the invoice payment",
          "format": "int64",
          "type": "integer"
        },
        "paymentMethod": {
          "$ref": "#/definitions/PaymentMethodApiModel",
          "description": "The payment method"
        },
        "paymentMethodName": {
          "description": "The payment method name",
          "type": "string"
        },
        "paymentMethodNumber": {
          "description": "The payment method number",
          "type": "string"
        },
        "paymentMethodType": {
          "description": "The payment type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DocumentStockControlledInfoApiModel": {
      "description": "Class that contains the information for a document which stock was controlled in a previous stock operation",
      "properties": {
        "documentType": {
          "description": "The document type",
          "enum": [
            "Invoice",
            "Presupuesto",
            "DeliveryNote"
          ],
          "type": "string"
        },
        "id": {
          "description": "The document id",
          "format": "int64",
          "type": "integer"
        },
        "number": {
          "description": "The document number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DomainApiModel": {
      "description": "Defines the information for a domain",
      "properties": {
        "apiClient": {
          "$ref": "#/definitions/ApiClientWithSecretApiModel",
          "description": "Gets the domain API client information (if exists)"
        },
        "code": {
          "description": "Gets the domain code",
          "type": "string"
        },
        "defaultCountry": {
          "description": "The default country for the domain.",
          "format": "int64",
          "type": "integer"
        },
        "defaultCulture": {
          "description": "The default culture for the domain.",
          "type": "string"
        },
        "enableEInformaIntegration": {
          "description": "Indicates if EInforma integration is enabled for the current domain",
          "type": "boolean"
        },
        "hostname": {
          "description": "Gets the domain URL",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the product",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "Gets the domain description.",
          "type": "string"
        },
        "secureKey": {
          "description": "Gets the domain secure key",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EditRoleRequestApiModel": {
      "description": "Class that contains the information for edit the user role into a company",
      "properties": {
        "userCompanyRole": {
          "description": "The user role into the company",
          "enum": [
            "CompanyAdmin",
            "CompanyManager",
            "CompanyUser",
            "CompanyUserAsManager",
            "CompanyUserWorkHoursRegister"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ElectronicSignatureConfigurationApiModel": {
      "description": "Contains the information of the electronic signature configuration",
      "properties": {
        "hasCompanyCertificate": {
          "description": "Gets or sets if the company has certificate",
          "type": "boolean"
        },
        "hasDomainCertificate": {
          "description": "Gets or sets if the domain has certificate",
          "type": "boolean"
        },
        "planType": {
          "description": "Gets or sets the company type",
          "enum": [
            "Basico",
            "Profesional",
            "Ultimate"
          ],
          "type": "string"
        },
        "signElectronicInvoices": {
          "description": "Gets or sets the electronic invoices signature type",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        },
        "signPDFDeliveryNotes": {
          "description": "Gets or sets the delivery notes signature type",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        },
        "signPDFEstimates": {
          "description": "Gets or sets the pdf estimate signature type",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        },
        "signPDFInvoices": {
          "description": "Gets of sets the pdf invoices signature type",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        },
        "signVirtualDriveFiles": {
          "description": "Gets or set the virtual disk signature type",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ElectronicSignatureRequestApiModel": {
      "description": "Contains the information for the electronic signature",
      "properties": {
        "signElectronicInvoices": {
          "description": "The electronic invoices signature type",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        },
        "signPDFDeliveryNotes": {
          "description": "The delivery notes signature type",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        },
        "signPDFEstimates": {
          "description": "The pdf estimate signature type",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        },
        "signPDFInvoices": {
          "description": "The pdf invoices signature type",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        },
        "signVirtualDriveFiles": {
          "description": "The virtual disk signature type",
          "enum": [
            "NoSign",
            "SignWithDomainCert",
            "SignWithCompanyCert"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EntityApiModel": {
      "description": "Defines the information for working with entities",
      "properties": {
        "address": {
          "description": "The entity address",
          "type": "string"
        },
        "city": {
          "description": "The entity city",
          "type": "string"
        },
        "companyId": {
          "description": "The company that owns the entity",
          "format": "int64",
          "type": "integer"
        },
        "country": {
          "description": "The entity country. Do not use (available only for old clients). Use the countryId otherwise.",
          "type": "string"
        },
        "countryId": {
          "description": "The country identifier",
          "format": "int64",
          "type": "integer"
        },
        "customField1": {
          "description": "The entity custom field 1",
          "type": "string"
        },
        "customField2": {
          "description": "The entity custom field 2",
          "type": "string"
        },
        "discountPercentage": {
          "description": "The default discount percentage to apply on the concept lines for this entity",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "email": {
          "description": "The entity email address",
          "type": "string"
        },
        "fax": {
          "description": "The entity fax number",
          "type": "string"
        },
        "firstname": {
          "description": "The person firstname (required for company type = autonomo)",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the entity",
          "format": "int64",
          "type": "integer"
        },
        "lastname": {
          "description": "The person lastname (required for company type = autonomo)",
          "type": "string"
        },
        "latitude": {
          "description": "Map latitude of the contact. Does not have to match the exact address latitude\r\nA value between: [-90, +90]",
          "format": "double",
          "maximum": 90,
          "minimum": -90,
          "type": "number"
        },
        "longitude": {
          "description": "Map longitude of the contact. Does not have to match the exact address longitude\r\nA value between: [-180,+180]",
          "format": "double",
          "maximum": 180,
          "minimum": -180,
          "type": "number"
        },
        "name": {
          "description": "The person name (required for company type = autonomo)",
          "type": "string"
        },
        "nif": {
          "description": "The NIF number of the entity",
          "type": "string"
        },
        "notes": {
          "description": "The entity notes",
          "type": "string"
        },
        "organization": {
          "description": "The organization name of the entity",
          "type": "string"
        },
        "phone": {
          "description": "The entity phone number",
          "type": "string"
        },
        "postalCode": {
          "description": "The entity postal code",
          "type": "string"
        },
        "province": {
          "description": "The entity province",
          "type": "string"
        },
        "type": {
          "description": "The type of entity",
          "enum": [
            "Issuer",
            "Target",
            "None",
            "Owner",
            "Invoicepayment",
            "InvoiceDomiciliation"
          ],
          "type": "string"
        },
        "url": {
          "description": "The entity URL address",
          "type": "string"
        }
      },
      "required": [
        "organization",
        "nif"
      ],
      "type": "object"
    },
    "EntityBankAccountApiModel": {
      "description": "Defines the information for working with entities",
      "properties": {
        "bic": {
          "description": "BIC,not mandatory, but recommended",
          "type": "string"
        },
        "companyId": {
          "description": "The company that owns the entity",
          "format": "int64",
          "type": "integer"
        },
        "entityId": {
          "description": "Entity owner of bankaccounts",
          "format": "int64",
          "type": "integer"
        },
        "iban": {
          "description": "IBAN",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the entity",
          "format": "int64",
          "type": "integer"
        },
        "isDefault": {
          "description": "Default bank account from all, only can be one",
          "type": "boolean"
        },
        "notes": {
          "description": "private notes",
          "type": "string"
        }
      },
      "required": [
        "entityId",
        "iban"
      ],
      "type": "object"
    },
    "EstimateApiModel": {
      "description": "Contains the information for an estimate",
      "properties": {
        "creationDate": {
          "description": "The date when the invoice was created",
          "format": "date-time",
          "type": "string"
        },
        "entityString": {
          "description": "The name that represents the issuer or target entity of the invoice",
          "type": "string"
        },
        "expirationDate": {
          "description": "Contains estimate issue date (could be null)",
          "format": "date-time",
          "type": "string"
        },
        "footer": {
          "description": "The invoice footer",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the invoice",
          "format": "int64",
          "type": "integer"
        },
        "issueDate": {
          "description": "Contains estimate issue date (could be null)",
          "format": "date-time",
          "type": "string"
        },
        "issuer": {
          "$ref": "#/definitions/DocumentEntityApiModel",
          "description": "The entity issuer. The one who generated the invoice."
        },
        "lastUpdateDate": {
          "description": "The last time the invoice was updated",
          "format": "date-time",
          "type": "string"
        },
        "lines": {
          "description": "The line objects for the invoice",
          "items": {
            "$ref": "#/definitions/EstimateLineApiModel"
          },
          "type": "array"
        },
        "notes": {
          "description": "Estimate notes",
          "type": "string"
        },
        "number": {
          "description": "The estimate number",
          "type": "string"
        },
        "numberingFormatId": {
          "description": "If not NULL contains the identifier of the selected numbering format.",
          "format": "int64",
          "type": "integer"
        },
        "originalIssuerEntityID": {
          "description": "Original ID of the issuer of the invoice",
          "format": "int64",
          "type": "integer"
        },
        "originalTargetEntityID": {
          "description": "Original ID of the target of the invoice",
          "format": "int64",
          "type": "integer"
        },
        "presupuestoDate": {
          "description": "The estimate date",
          "format": "date-time",
          "type": "string"
        },
        "retentionAmount": {
          "description": "The invoice retention amount",
          "format": "double",
          "type": "number"
        },
        "retentionPercentage": {
          "description": "The invoice retention percentage",
          "format": "double",
          "type": "number"
        },
        "status": {
          "description": "The current status of the invoice",
          "enum": [
            "Creado",
            "Enviado",
            "Aceptado",
            "Rechazado",
            "Parcial",
            "Facturado",
            "ParcialAlbaranado",
            "Albaranado",
            "Cerrado"
          ],
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/DocumentEntityApiModel",
          "description": "The entity target. The receiver of the invoice."
        },
        "totalAmount": {
          "description": "Gets the total final amount for the invoice (the value returned includes the \r\naddition of the taxable amount plus the VAT amount for every line) less the\r\nretention amount. TotalAmount = BI +IVA - Retencion + R.E",
          "format": "double",
          "type": "number"
        },
        "totalReAmount": {
          "description": "The total RE amount of the invoice",
          "format": "double",
          "type": "number"
        },
        "totalTaxableAmount": {
          "description": "Gets the total taxable amount for the invoice (the value returned includes the \r\naddition of the taxable amounts for the several lines). (Spain: Base imponible)",
          "format": "double",
          "type": "number"
        },
        "totalVatAmount": {
          "description": "Gets the total VAT amount for the invoice (the value returned includes the \r\naddition of the VAT amounts for the several lines).",
          "format": "double",
          "type": "number"
        },
        "type": {
          "description": "The invoice type",
          "enum": [
            "Creado",
            "Enviado",
            "Aceptado",
            "Rechazado",
            "Parcial",
            "Facturado",
            "ParcialAlbaranado",
            "Albaranado",
            "Cerrado"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateLineApiModel": {
      "description": "Defines the information for an estimate line",
      "properties": {
        "concept": {
          "description": "The line concept",
          "type": "string"
        },
        "detailedDescription": {
          "description": "A detailed description for the estimate line",
          "type": "string"
        },
        "discountPercentage": {
          "description": "The discount percentage to apply to the estimate line",
          "format": "double",
          "type": "number"
        },
        "id": {
          "description": "The identifier of the invoice line",
          "format": "int64",
          "type": "integer"
        },
        "productId": {
          "description": "The selected product associated to the line for stock control",
          "format": "int64",
          "type": "integer"
        },
        "productName": {
          "description": "The selected product name associated to the line for stock control",
          "type": "string"
        },
        "productSku": {
          "description": "The selected product sku associated to the line for stock control",
          "type": "string"
        },
        "quantity": {
          "description": "The line items quantity",
          "format": "double",
          "type": "number"
        },
        "reAmount": {
          "description": "The RE amount",
          "format": "double",
          "type": "number"
        },
        "rePercentage": {
          "description": "The RE percentage",
          "format": "double",
          "type": "number"
        },
        "totalTaxableAmount": {
          "description": "The TotalTaxableAmount of the invoice line",
          "format": "double",
          "type": "number"
        },
        "unitTaxableAmount": {
          "description": "Gets or Sets the unit price (the price for a single unit of product) for the invoice line. \r\nThe total taxable amount for the line will be UnitTaxableAmount * Quantity.",
          "format": "double",
          "type": "number"
        },
        "vatAmount": {
          "description": "Gets or Sets the total VAT amount for the invoice line.",
          "format": "double",
          "type": "number"
        },
        "vatPercentage": {
          "description": "Gets or Sets the VAT percentage of a single unit of product. If the TotalVATAmount property is set it takes precedence over \r\nthis property and the value returned is computed from the TotalVATAmount and UnitTaxableAmount properties.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "EstimateLineRequestApiModel": {
      "description": "Contains the information for an estimate line",
      "properties": {
        "concept": {
          "description": "The estimate line concept",
          "type": "string"
        },
        "detailedDescription": {
          "description": "A detailed description for the estimate",
          "type": "string"
        },
        "discountPercentage": {
          "description": "The discount percentage to apply to the estimate",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "productId": {
          "description": "The selected product id for stock control (optional)",
          "format": "int64",
          "type": "integer"
        },
        "productName": {
          "description": "The selected product name associated to the line for stock control",
          "type": "string"
        },
        "productSku": {
          "description": "The selected product sku associated to the line for stock control",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity of items on the estimate line",
          "format": "double",
          "type": "number"
        },
        "reAmount": {
          "description": "The RE amount of the estimate line\r\nThere is a limit of two decimals.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "rePercentage": {
          "description": "The RE percentage to apply to the estimate line",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "totalTaxableAmount": {
          "description": "The total taxable amount of the line.\r\nThere is a limit of two decimals.\r\nThis value is required to show the same rounded value applied by the client on the PDF.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "unitAmount": {
          "description": "The estimate line unit base amount\r\nThere is a limit of two decimals.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "vatAmount": {
          "description": "The VAT amount of the estimate line\r\nThere is a limit of two decimals.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "vatPercentage": {
          "description": "The VAT percentage to apply to the estimate line",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "concept",
        "unitAmount",
        "quantity",
        "vatPercentage",
        "vatAmount",
        "totalTaxableAmount"
      ],
      "type": "object"
    },
    "EstimateNumberingFormatApiModel": {
      "description": "Defines the information for the estimate numbering format",
      "properties": {
        "id": {
          "description": "The numbering format identifier",
          "format": "int64",
          "type": "integer"
        },
        "isActive": {
          "description": "Indicates if the numbering format is activated or deactivated",
          "type": "boolean"
        },
        "isDefault": {
          "description": "Indicates if the numbering format is the default one",
          "type": "boolean"
        },
        "mask": {
          "description": "The numbering format mask",
          "type": "string"
        },
        "name": {
          "description": "The name of the numbering format",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateNumberingFormatRequestApiModel": {
      "description": "Defines the information for the estimate numbering format",
      "properties": {
        "mask": {
          "description": "The numbering format mask",
          "type": "string"
        },
        "name": {
          "description": "The name of the numbering format",
          "type": "string"
        }
      },
      "required": [
        "name",
        "mask"
      ],
      "type": "object"
    },
    "EstimateStatusApiModel": {
      "description": "Defines an estimate status",
      "properties": {
        "status": {
          "description": "The current status of the estimate",
          "enum": [
            "Creado",
            "Enviado",
            "Aceptado",
            "Rechazado",
            "Parcial",
            "Facturado",
            "ParcialAlbaranado",
            "Albaranado",
            "Cerrado"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExpenseApiModel": {
      "description": "Defines the information for an expense",
      "properties": {
        "aeatAprovedFileId": {
          "description": "If not NULL contains the identifier of the file that contains the related certified document",
          "format": "int64",
          "type": "integer"
        },
        "amount": {
          "description": "The amount for the expense (including taxes).",
          "format": "double",
          "type": "number"
        },
        "computablePercentage": {
          "description": "The percentage of the expense that will be involved in the fiscal computations.",
          "format": "double",
          "type": "number"
        },
        "concept": {
          "description": "Brief description about what the expense was.",
          "type": "string"
        },
        "creationTime": {
          "description": "DateTime when the expenses was created",
          "format": "date-time",
          "type": "string"
        },
        "expenseClass": {
          "description": "The type of expense",
          "format": "int32",
          "type": "integer"
        },
        "expenseClassDescription": {
          "description": "The expense class description",
          "type": "string"
        },
        "expenseDate": {
          "description": "Expense date",
          "format": "date-time",
          "type": "string"
        },
        "expensePayment": {
          "$ref": "#/definitions/DocumentPaymentApiModel",
          "description": "The payment method"
        },
        "hasAeatAprovedFile": {
          "description": "Checks if the current invoice has a certified file",
          "type": "boolean"
        },
        "id": {
          "description": "The expense identifier",
          "format": "int64",
          "type": "integer"
        },
        "issuer": {
          "$ref": "#/definitions/ExpenseEntity",
          "description": "Contains the expense entity"
        },
        "modificationTime": {
          "description": "DateTime when the expenses was updated",
          "format": "date-time",
          "type": "string"
        },
        "notes": {
          "description": "Some notes the use can input regarding the expense.",
          "type": "string"
        },
        "number": {
          "description": "The expense number",
          "type": "string"
        },
        "period": {
          "description": "Expense period",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExpenseEntity": {
      "properties": {
        "address": {
          "type": "string"
        },
        "companyId": {
          "format": "int64",
          "type": "integer"
        },
        "country": {
          "readOnly": true,
          "type": "string"
        },
        "countryId": {
          "format": "int64",
          "type": "integer"
        },
        "county": {
          "type": "string"
        },
        "customField1": {
          "type": "string"
        },
        "customField2": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "isEmpty": {
          "readOnly": true,
          "type": "boolean"
        },
        "nif": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "oldTextCountry": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExpenseEntityApiModel": {
      "description": "Defines teh information for an expense entity",
      "properties": {
        "address": {
          "description": "The entity address",
          "type": "string"
        },
        "city": {
          "description": "The entity city",
          "type": "string"
        },
        "country": {
          "description": "The entity country",
          "type": "string"
        },
        "countryId": {
          "description": "The country identifier",
          "format": "int64",
          "type": "integer"
        },
        "customField1": {
          "description": "The entity custom field 1",
          "type": "string"
        },
        "customField2": {
          "description": "The entity custom field 2",
          "type": "string"
        },
        "email": {
          "description": "The entity email address",
          "type": "string"
        },
        "fax": {
          "description": "The entity fax number",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the entity",
          "format": "int64",
          "type": "integer"
        },
        "nif": {
          "description": "The NIF number of the entity",
          "type": "string"
        },
        "notes": {
          "description": "The entity notes",
          "type": "string"
        },
        "organization": {
          "description": "The organization name of the entity",
          "type": "string"
        },
        "phone": {
          "description": "The entity phone number",
          "type": "string"
        },
        "postalCode": {
          "description": "The entity postal code",
          "type": "string"
        },
        "province": {
          "description": "The entity province",
          "type": "string"
        },
        "url": {
          "description": "The entity URL address",
          "type": "string"
        }
      },
      "required": [
        "organization",
        "nif"
      ],
      "type": "object"
    },
    "ExpenseSpecificEntityApiModel": {
      "description": "Defines the information for a single use expense entity",
      "properties": {
        "name": {
          "description": "The entity name",
          "type": "string"
        },
        "nif": {
          "description": "The entity nif",
          "type": "string"
        }
      },
      "required": [
        "nif",
        "name"
      ],
      "type": "object"
    },
    "ExportA3RequestApiModel": {
      "description": "Contains the information about an A3 export request",
      "properties": {
        "exportAllInformation": {
          "description": "Set to true to export all information. Set to false to export only new information",
          "type": "boolean"
        },
        "exportExpensesPayments": {
          "description": "Set to true to export expense payments information",
          "type": "boolean"
        },
        "exportInvestmentGoodsAmortizations": {
          "description": "Set to true to export investment goods information",
          "type": "boolean"
        },
        "exportIssuedInvoicePayments": {
          "description": "Set to true to export issued invoice payments information",
          "type": "boolean"
        },
        "exportIssuedInvoices": {
          "description": "Set to true to export issued invoices information",
          "type": "boolean"
        },
        "exportReceivedInvoicePayments": {
          "description": "Set to true to export received invoice payments information",
          "type": "boolean"
        },
        "exportReceivedInvoices": {
          "description": "Set to true to export received invoices and expenses information",
          "type": "boolean"
        },
        "fromDate": {
          "description": "The initial date for the export (for custom date range)",
          "format": "date-time",
          "type": "string"
        },
        "generateEntityNumbers": {
          "description": "Set to true to automatically generate account numbers for entities without them",
          "type": "boolean"
        },
        "ignoreStaffAccounts": {
          "description": "Set to true to ignore staff expenses (640 and 642)",
          "type": "boolean"
        },
        "paymentMethodIdForExpenseMovementsWithMissingPaymentMethod": {
          "description": "The payment method to use when an expense payment has no payment method defined. Is required when the ExportExpensesPayments param is set to true",
          "format": "int64",
          "type": "integer"
        },
        "toDate": {
          "description": "The final date for the export (for custom date range)",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExportA3TaskApiModel": {
      "description": "Contains the information about an A3 export requested task",
      "properties": {
        "info": {
          "description": "The requested export configuration",
          "type": "object"
        },
        "queueTime": {
          "description": "The task queue time",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The task current status",
          "enum": [
            "Waiting",
            "Working",
            "Done",
            "Failed",
            "DoneButNotCompleted"
          ],
          "type": "string"
        },
        "taskId": {
          "description": "The identifier of the generated task",
          "format": "int64",
          "type": "integer"
        },
        "type": {
          "description": "The type of created task",
          "enum": [
            "UploadInvoiceToDropbox",
            "ExportInvoicesPdfAsZipFile",
            "UploadInvoiceToGoogleDrive",
            "UploadBudgetToDropbox",
            "UploadBudgetToGoogleDrive",
            "UploadDeliveryNoteToDropbox",
            "UploadDeliveryNoteToGoogleDrive",
            "GenerateA3AccountingTransfer",
            "ExportBookIVA",
            "ExportBookIRPF",
            "ExportBookIVAIRPF",
            "ExportAccountingAdvanced",
            "GenerateBankRemittance",
            "GenerateBankRemittanceRefund",
            "SignVirtualDiskFile",
            "ImportDataFromFile"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExternalRegistrationApiModel": {
      "description": "Class that contains the information for an external registration",
      "properties": {
        "companyContactEmail": {
          "description": "The company contact email",
          "type": "string"
        },
        "companyId": {
          "description": "The company id that is created from the external registration (until the company is not created, this value will be null)",
          "format": "int64",
          "type": "integer"
        },
        "companyName": {
          "description": "The company name",
          "type": "string"
        },
        "companyNif": {
          "description": "The company nif",
          "type": "string"
        },
        "creationTime": {
          "description": "The creation time",
          "format": "date-time",
          "type": "string"
        },
        "email": {
          "description": "The email of the user that will be registered",
          "type": "string"
        },
        "externalReference": {
          "description": "The reference that identifies the user in the external resource",
          "type": "string"
        },
        "id": {
          "description": "The external registration id",
          "format": "int64",
          "type": "integer"
        },
        "integrationCode": {
          "description": "The code of the integration resource",
          "type": "string"
        },
        "isCompanyRemoved": {
          "description": "Gets if the company is removed",
          "type": "boolean"
        },
        "isUserRemoved": {
          "description": "Gets if the user is removed",
          "type": "boolean"
        },
        "lastUpdateTime": {
          "description": "The last update time (null if no updates has been made)",
          "format": "date-time",
          "type": "string"
        },
        "startDate": {
          "description": "The registration start date",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status of the external registration (until the registration process is not completed, this value will be null)",
          "enum": [
            "RegistrationOK",
            "ReactivationOK",
            "RequestedNewEmail"
          ],
          "type": "string"
        },
        "statusDescription": {
          "description": "The status description",
          "readOnly": true,
          "type": "string"
        },
        "terminationDate": {
          "description": "The registration end date (when the external registration unsubscribe)",
          "format": "date-time",
          "type": "string"
        },
        "userContactEmail": {
          "description": "The user contact email",
          "type": "string"
        },
        "userId": {
          "description": "The user id that is created from the external registration (until the user is not created, this value will be null)",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "FileApiModel": {
      "description": "Defines the information for a file or folder",
      "properties": {
        "aeatApprovedFileId": {
          "description": "Contains the identifier of the related certification document",
          "format": "int64",
          "type": "integer"
        },
        "canBeModified": {
          "description": "Checks if the current file can be modified or deleted",
          "type": "boolean"
        },
        "cannotBeModifiedBeforeDate": {
          "description": "Indicates that the current document cannot be updated or removed before this date. NULL indicates that the file does not have any modify or delete restriction.",
          "format": "date-time",
          "type": "string"
        },
        "code": {
          "description": "The code for the vitrual folders",
          "type": "string"
        },
        "date": {
          "description": "The file update time",
          "format": "date-time",
          "type": "string"
        },
        "dependencyId": {
          "description": "The identifier of teh dependency element",
          "format": "int64",
          "type": "integer"
        },
        "dependencyNumber": {
          "description": "The number of the dependency element",
          "type": "string"
        },
        "dependencySubType": {
          "description": "THe dependency subtype",
          "type": "string"
        },
        "dependencyType": {
          "description": "The type of dependency",
          "enum": [
            "None",
            "Invoice",
            "Expense",
            "DeliveryNote",
            "Presupuesto",
            "Entity",
            "Domiciliacion",
            "Export",
            "ExportInvoices",
            "ExportA3",
            "ExportIVA",
            "ExportIRPF",
            "ExportAdvanced",
            "DocumentCertificationRemovedRelatedDocument",
            "All",
            "Import",
            "ImportCatalog",
            "ImportCustomers",
            "ImportSuppliers",
            "ExportIVAIRPF"
          ],
          "type": "string"
        },
        "description": {
          "description": "The file or folder description",
          "type": "string"
        },
        "displayFullFilename": {
          "description": "The full display name",
          "type": "string"
        },
        "extension": {
          "description": "The extension of the file",
          "type": "string"
        },
        "filename": {
          "description": "The name of the file or folder",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the file ofr folder",
          "format": "int64",
          "type": "integer"
        },
        "isAeatApproved": {
          "description": "Indicates if the file contains a certification document",
          "type": "boolean"
        },
        "isAeatApprovedOriginal": {
          "description": "Indicates if the file contains the original picture of a certified document",
          "type": "boolean"
        },
        "parentId": {
          "description": "The parent folder (if exists)",
          "format": "int64",
          "type": "integer"
        },
        "sha256Signature": {
          "description": "Contains the SHA256 signature of the file",
          "type": "string"
        },
        "size": {
          "description": "The size of the file",
          "format": "int64",
          "type": "integer"
        },
        "type": {
          "description": "The type of element",
          "enum": [
            "File",
            "Folder"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "FiscalRegionApiModel": {
      "description": "Defines the information for a fiscal region",
      "properties": {
        "allowCustomization": {
          "description": "Indicates if the fiscal region allows to customize its settings",
          "type": "boolean"
        },
        "code": {
          "description": "The code of the fiscal region",
          "enum": [
            "es_Peninsula",
            "es_Canarias",
            "es_CeutaYMelilla",
            "es_Navarra",
            "es_Alaba",
            "es_Bizcaya",
            "es_Guipuzcoa",
            "mx",
            "ar",
            "co",
            "cl",
            "pe",
            "ve",
            "ec",
            "hn",
            "us",
            "uk",
            "ie",
            "otra"
          ],
          "type": "string"
        },
        "companyIdentifierName": {
          "description": "The name of the Company Identifier (NIF title)",
          "type": "string"
        },
        "culture": {
          "description": "The culture code of the fiscal region",
          "type": "string"
        },
        "defaultTimeZone": {
          "description": "The default time zone for the fiscal region",
          "type": "string"
        },
        "enableRe": {
          "description": "Indicates if the fiscal region allows enabled the RE tax",
          "type": "boolean"
        },
        "id": {
          "description": "The identifier of the fiscal regoion",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "The name of the fiscal region",
          "type": "string"
        },
        "reName": {
          "description": "The name of the RE tax",
          "type": "string"
        },
        "retentionName": {
          "description": "The name of the retention field",
          "type": "string"
        },
        "taxesEnabled": {
          "description": "Indicates if the fiscall region allows to use the taxing module",
          "type": "boolean"
        },
        "vatModes": {
          "description": "The list of VAT modes on the fiscal region",
          "items": {
            "$ref": "#/definitions/VatModeApiModel"
          },
          "type": "array"
        },
        "vatName": {
          "description": "The name of the VAT tax",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ImportFileRequestApiModel": {
      "description": "Class that contains the configuration for a import file request",
      "properties": {
        "filename": {
          "description": "The uploaded filename to import",
          "type": "string"
        },
        "headersLine": {
          "description": "The line where the file headers are located (if exists)",
          "format": "int32",
          "type": "integer"
        },
        "importType": {
          "description": "The import type",
          "enum": [
            "Customers",
            "Suppliers",
            "Products",
            "ProductsStockControl"
          ],
          "type": "string"
        },
        "selectedMappings": {
          "description": "The selected mappings that contains the properties to import",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "startAtLine": {
          "description": "The line of the file from the import starts",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ImportFileTaskApiModel": {
      "description": "Class that contains the information of an import task",
      "properties": {
        "filename": {
          "description": "The uploaded filename to import",
          "type": "string"
        },
        "headersLine": {
          "description": "The line where the file headers are located (if exists)",
          "format": "int32",
          "type": "integer"
        },
        "importType": {
          "description": "The import type",
          "enum": [
            "Customers",
            "Suppliers",
            "Products",
            "ProductsStockControl"
          ],
          "type": "string"
        },
        "selectedMappings": {
          "description": "The selected mappings that contains the properties to import",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "startAtLine": {
          "description": "The line of the file from the import starts",
          "format": "int32",
          "type": "integer"
        },
        "taskId": {
          "description": "The task id",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ImportMappingPropertyApiModel": {
      "description": "Class that contains the information of an import mapping property",
      "properties": {
        "isRequired": {
          "description": "Indicates if the property is required for import",
          "type": "boolean"
        },
        "localizedPropertyName": {
          "description": "Gets the localized property name",
          "type": "string"
        },
        "propertyName": {
          "description": "The name of the property",
          "type": "string"
        },
        "usePropertyToFindHeaderRow": {
          "description": "If true, enables this property to be used to find the header row into the imported file",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ImportedPreviewDataApiModel": {
      "description": "Contains the information to show the imported file preview data",
      "properties": {
        "fileTotalColumns": {
          "description": "The total columns that the file contains",
          "format": "int32",
          "type": "integer"
        },
        "fileTotalLines": {
          "description": "The total lines that the file contains",
          "format": "int32",
          "type": "integer"
        },
        "headersLine": {
          "description": "The line where the file headers are located (if exists)",
          "format": "int32",
          "type": "integer"
        },
        "importedSampleData": {
          "description": "The imported sample data",
          "items": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "array"
        },
        "isMaxColumnsExceeded": {
          "description": "Returns if the max columns is exceeded",
          "type": "boolean"
        },
        "mappingProperties": {
          "description": "The mappings for the import type",
          "items": {
            "$ref": "#/definitions/ImportMappingPropertyApiModel"
          },
          "type": "array"
        },
        "startAtLine": {
          "description": "The line from the import starts",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InvoiceApiModel": {
      "description": "Contains the information for an invoice",
      "properties": {
        "aeatAprovedFileId": {
          "description": "If not NULL contains the identifier of the file that contains the related certified document",
          "format": "int64",
          "type": "integer"
        },
        "computablePercentage": {
          "description": "Gets or Sets the percentage of the invoice that will be involved in the fiscal computations.\r\n    IMPORTANT: This property only makes sense with invoices of type Received.\r\n    Issued invoices should always have a ComputablePercentage of 100% because otherwise the invoice \r\n    RetentionAmount (which may have already been sent to the administration by the invoice payee)\r\n    would not match the computable invoice amount.",
          "format": "double",
          "type": "number"
        },
        "computablePercentageVAT": {
          "description": "Gets or Sets the percentage of the expense that will be involved in the IVA Imputation.",
          "format": "double",
          "type": "number"
        },
        "creationDate": {
          "description": "The date when the invoice was created",
          "format": "date-time",
          "type": "string"
        },
        "entityString": {
          "description": "The name that represents the issuer or target entity of the invoice",
          "type": "string"
        },
        "expirationDate": {
          "description": "Contains invoice expiration date (cuold be null)",
          "format": "date-time",
          "type": "string"
        },
        "footer": {
          "description": "The invoice footer",
          "type": "string"
        },
        "hasAeatAprovedFile": {
          "description": "Checks if the current invoice has a certified file",
          "type": "boolean"
        },
        "id": {
          "description": "The identifier of the invoice",
          "format": "int64",
          "type": "integer"
        },
        "invoiceClass": {
          "description": "The invoice class",
          "format": "int32",
          "type": "integer"
        },
        "invoiceClassDescription": {
          "description": "The invoice class description",
          "type": "string"
        },
        "invoiceDate": {
          "description": "The invoice date",
          "format": "date-time",
          "type": "string"
        },
        "isCashCriteria": {
          "description": "Indicates if the issuer or target of the invoice is subject to \"Regimen de Criterio de Caja\"",
          "type": "boolean"
        },
        "isRectificationInvoice": {
          "description": "Checks if the current invoice is a rectification invoice",
          "type": "boolean"
        },
        "issuer": {
          "$ref": "#/definitions/DocumentEntityApiModel",
          "description": "The entity issuer. The one who generated the invoice."
        },
        "lastUpdateDate": {
          "description": "The last time the invoice was updated",
          "format": "date-time",
          "type": "string"
        },
        "lines": {
          "description": "The line objects for the invoice",
          "items": {
            "$ref": "#/definitions/InvoiceLineApiModel"
          },
          "type": "array"
        },
        "notes": {
          "description": "",
          "type": "string"
        },
        "number": {
          "description": "The invoice number",
          "type": "string"
        },
        "numberingFormatId": {
          "description": "If not NULL contains the identifier of the selected numbering format.",
          "format": "int64",
          "type": "integer"
        },
        "operationDate": {
          "description": "The operation date of the invoice",
          "format": "date-time",
          "type": "string"
        },
        "operationType": {
          "description": "The type of operation",
          "enum": [
            "Nacional",
            "NacNoSujeta",
            "Intracumunitaria",
            "Exportacion",
            "Importacion",
            "NacionalExenta",
            "InversionSujetoPasivo"
          ],
          "type": "string"
        },
        "operationTypeDescription": {
          "description": "The operation type description",
          "type": "string"
        },
        "originalIssuerEntityID": {
          "description": "Original ID of the issuer of the invoice",
          "format": "int64",
          "type": "integer"
        },
        "originalTargetEntityID": {
          "description": "Original ID of the target of the invoice",
          "format": "int64",
          "type": "integer"
        },
        "payments": {
          "description": "The invoice payments",
          "items": {
            "$ref": "#/definitions/DocumentPaymentApiModel"
          },
          "type": "array"
        },
        "period": {
          "description": "The invoice period",
          "type": "string"
        },
        "rectifiesInvoiceId": {
          "description": "If not NULL contains the identifier of the invoice which the current invoice is rectifying",
          "format": "int64",
          "type": "integer"
        },
        "relatedEstimateId": {
          "description": "The identifier of the estimate related to the delivery note (if exists)",
          "format": "int64",
          "type": "integer"
        },
        "retentionAmount": {
          "description": "The invoice retention amount",
          "format": "double",
          "type": "number"
        },
        "retentionPercentage": {
          "description": "The invoice retention percentage",
          "format": "double",
          "type": "number"
        },
        "status": {
          "description": "The current status of the invoice",
          "enum": [
            "Pending",
            "Incomplete",
            "Payed"
          ],
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/DocumentEntityApiModel",
          "description": "The entity target. The receiver of the invoice."
        },
        "totalAmount": {
          "description": "Gets the total final amount for the invoice (the value returned includes the \r\naddition of the taxable amount plus the VAT amount for every line) less the\r\nretention amount. TotalAmount = BI +IVA - Retencion",
          "format": "double",
          "type": "number"
        },
        "totalAmountPerPay": {
          "description": "Returns the pending invoice amount to pay.",
          "format": "double",
          "type": "number"
        },
        "totalComputableAmount": {
          "description": "Returns the TotalAmount of the invoice that is Computable.",
          "format": "double",
          "type": "number"
        },
        "totalComputableAmountForVAT": {
          "description": "Returns the TotalAmount of the invoice that is Computable for all VAT computations.",
          "format": "double",
          "type": "number"
        },
        "totalPayedAmount": {
          "description": "Returns the amount of money payed.",
          "format": "double",
          "type": "number"
        },
        "totalReAmount": {
          "description": "The total RE amount of the invoice",
          "format": "double",
          "type": "number"
        },
        "totalTaxableAmount": {
          "description": "Gets the total taxable amount for the invoice (the value returned includes the \r\naddition of the taxable amounts for the several lines). (Spain: Base imponible)",
          "format": "double",
          "type": "number"
        },
        "totalVatAmount": {
          "description": "Gets the total VAT amount for the invoice (the value returned includes the \r\naddition of the VAT amounts for the several lines).",
          "format": "double",
          "type": "number"
        },
        "type": {
          "description": "The invoice type",
          "enum": [
            "Issued",
            "Received",
            "Amortized"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceFooterApiModel": {
      "description": "Contains the information for an invoice footer",
      "properties": {
        "description": {
          "description": "The contents of the invoice footer",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the oinveoice footer",
          "format": "int64",
          "type": "integer"
        },
        "title": {
          "description": "The title of the footer",
          "type": "string"
        }
      },
      "required": [
        "title",
        "description"
      ],
      "type": "object"
    },
    "InvoiceIdentifiersListApiModel": {
      "description": "The list of invoice identifier",
      "properties": {
        "identifiers": {
          "description": "The list of identifiers",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InvoiceLineApiModel": {
      "description": "Defines the information for an invoice line",
      "properties": {
        "concept": {
          "description": "The line concept",
          "type": "string"
        },
        "detailedDescription": {
          "description": "A detailed description for the invoice line",
          "type": "string"
        },
        "discountPercentage": {
          "description": "The discount percentage to apply to the invoice line",
          "format": "double",
          "type": "number"
        },
        "id": {
          "description": "The identifier of the invoice line",
          "format": "int64",
          "type": "integer"
        },
        "productId": {
          "description": "The selected product associated to the line for stock control",
          "format": "int64",
          "type": "integer"
        },
        "productName": {
          "description": "The selected product name associated to the line for stock control",
          "type": "string"
        },
        "productSku": {
          "description": "The selected product sku associated to the line for stock control",
          "type": "string"
        },
        "quantity": {
          "description": "The line items quantity",
          "format": "double",
          "type": "number"
        },
        "reAmount": {
          "description": "The RE amount",
          "format": "double",
          "type": "number"
        },
        "rePercentage": {
          "description": "The RE percentage",
          "format": "double",
          "type": "number"
        },
        "totalTaxableAmount": {
          "description": "The TotalTaxableAmount of the invoice line",
          "format": "double",
          "type": "number"
        },
        "unitTaxableAmount": {
          "description": "Gets or Sets the unit price (the price for a single unit of product) for the invoice line. \r\nThe total taxable amount for the line will be UnitTaxableAmount * Quantity.",
          "format": "double",
          "type": "number"
        },
        "vatAmount": {
          "description": "Gets or Sets the total VAT amount for the invoice line.",
          "format": "double",
          "type": "number"
        },
        "vatPercentage": {
          "description": "Gets or Sets the VAT percentage of a single unit of product. If the TotalVATAmount property is set it takes precedence over \r\nthis property and the value returned is computed from the TotalVATAmount and UnitTaxableAmount properties.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "InvoiceLineRequestApiModel": {
      "description": "Contains the information for an invoice line",
      "properties": {
        "concept": {
          "description": "The invoice line concept",
          "type": "string"
        },
        "detailedDescription": {
          "description": "A detailed description for the invoice line",
          "type": "string"
        },
        "discountPercentage": {
          "description": "The discount percentage to apply to the invoice line",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "productId": {
          "description": "The selected product id for stock control (optional)",
          "format": "int64",
          "type": "integer"
        },
        "productName": {
          "description": "The selected product name associated to the line for stock control",
          "type": "string"
        },
        "productSku": {
          "description": "The selected product sku associated to the line for stock control",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity of items on the invoice line",
          "format": "double",
          "type": "number"
        },
        "reAmount": {
          "description": "The RE amount of the invoice line\r\nThere is a limit of two decimals.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "rePercentage": {
          "description": "The RE percentage to apply to the invoice line",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "totalTaxableAmount": {
          "description": "The total taxable amount of the line.\r\nThere is a limit of two decimals.\r\nThis value is required to show the same rounded value applied by the client on the PDF.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "unitAmount": {
          "description": "The invoice line unit base amount\r\nThere is a limit of two decimals.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "vatAmount": {
          "description": "The VAT amount of the invoice line\r\nThere is a limit of two decimals.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "vatPercentage": {
          "description": "The VAT percentage to apply to the invoice line",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "concept",
        "unitAmount",
        "quantity",
        "vatPercentage",
        "vatAmount",
        "totalTaxableAmount"
      ],
      "type": "object"
    },
    "InvoiceNumberingFormatApiModel": {
      "description": "Defines the information for the invoice numbering format",
      "properties": {
        "id": {
          "description": "The numbering format identifier",
          "format": "int64",
          "type": "integer"
        },
        "isActive": {
          "description": "Indicates if the numbering format is activated or deactivated",
          "type": "boolean"
        },
        "isDefault": {
          "description": "Indicates if the numbering format is the default one",
          "type": "boolean"
        },
        "mask": {
          "description": "The numbering format mask",
          "type": "string"
        },
        "name": {
          "description": "The name of the numbering format",
          "type": "string"
        },
        "type": {
          "description": "The numbering format type",
          "enum": [
            "Normal",
            "Rectifying"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceNumberingFormatCreateRequestApiModel": {
      "description": "Defines the information for the invoice numbering format",
      "properties": {
        "mask": {
          "description": "The numbering format mask",
          "type": "string"
        },
        "name": {
          "description": "The name of the numbering format",
          "type": "string"
        },
        "type": {
          "description": "The numbering format type",
          "enum": [
            "Normal",
            "Rectifying"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "type",
        "mask"
      ],
      "type": "object"
    },
    "InvoiceNumberingFormatUpdateRequestApiModel": {
      "description": "Defines the information for the invoice numbering format",
      "properties": {
        "mask": {
          "description": "The numbering format mask",
          "type": "string"
        },
        "name": {
          "description": "The name of the numbering format",
          "type": "string"
        }
      },
      "required": [
        "name",
        "mask"
      ],
      "type": "object"
    },
    "InvoicePaymentRequestApiModel": {
      "description": "Defines the information to register an invoice payment",
      "properties": {
        "amount": {
          "description": "The payed amount",
          "format": "double",
          "type": "number"
        },
        "date": {
          "description": "The payment date",
          "format": "date-time",
          "type": "string"
        },
        "paymentMethodId": {
          "description": "The identifier of the payment method",
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        }
      },
      "required": [
        "date",
        "amount",
        "paymentMethodId"
      ],
      "type": "object"
    },
    "IrpfModeApiModel": {
      "description": "Defines the information for an IRPF estimation mode",
      "properties": {
        "code": {
          "description": "The code of the estimation type",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the estimation type",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "The name of the estimation type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LimitApiModel": {
      "description": "Defines the limit for a single type",
      "properties": {
        "current": {
          "description": "Current item count",
          "format": "int64",
          "type": "integer"
        },
        "limit": {
          "description": "Current product limit",
          "format": "int64",
          "type": "integer"
        },
        "limitMode": {
          "description": "Limit mode",
          "enum": [
            "NoLimitation",
            "AccountTypeLimited",
            "CustomLimit"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LimitsApiModel": {
      "description": "Defines the account item limits",
      "properties": {
        "disc": {
          "$ref": "#/definitions/LimitApiModel",
          "description": "Disc limits"
        },
        "documents": {
          "$ref": "#/definitions/LimitApiModel",
          "description": "Document limits"
        },
        "entityIssuer": {
          "$ref": "#/definitions/LimitApiModel",
          "description": "Issuer entities limit"
        },
        "entityTarget": {
          "$ref": "#/definitions/LimitApiModel",
          "description": "Target entities limit"
        },
        "products": {
          "$ref": "#/definitions/LimitApiModel",
          "description": "Product limits"
        },
        "remittances": {
          "$ref": "#/definitions/LimitApiModel",
          "description": "Remittances limits"
        }
      },
      "type": "object"
    },
    "MailConfigurationApiModel": {
      "description": "Contains the information of a company email configuration",
      "properties": {
        "defaultValueReplyTo": {
          "description": "The default value for the \"reply to\" field",
          "type": "string"
        },
        "fromEmail": {
          "description": "The email address to display as \"from\" field",
          "type": "string"
        },
        "fromName": {
          "description": "The name to display as \"from\" field",
          "type": "string"
        },
        "mailProvider": {
          "description": "The kind of provider configured for the current company",
          "enum": [
            "DomainDefault",
            "Gmail",
            "Yahoo",
            "Outlook",
            "Custom"
          ],
          "type": "string"
        },
        "shouldHideReplyToAndCopyField": {
          "description": "If the company requires the \"ReplyTo\" and \"SendBccCopy\" to be hidden",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MailPresetsApiModel": {
      "description": "Contains the information for a mail preset",
      "properties": {
        "body": {
          "description": "The recipients of the mail preset",
          "type": "string"
        },
        "dependencyType": {
          "description": "The document type",
          "enum": [
            "Invoice",
            "Estimate",
            "DeliveryNote"
          ],
          "type": "string"
        },
        "id": {
          "description": "The identifier of the mail preset",
          "format": "int64",
          "type": "integer"
        },
        "isDefault": {
          "description": "Identifies if the mail preset is the default one",
          "type": "boolean"
        },
        "recipients": {
          "description": "The recipients of the mail preset",
          "type": "string"
        },
        "subject": {
          "description": "The subject of the mail preset",
          "type": "string"
        },
        "title": {
          "description": "The title of the mail preset",
          "type": "string"
        }
      },
      "required": [
        "title"
      ],
      "type": "object"
    },
    "MeApiModel": {
      "description": "Defines the information for the current account",
      "properties": {
        "company": {
          "$ref": "#/definitions/CompanyApiModel",
          "description": "The current company information"
        },
        "user": {
          "$ref": "#/definitions/UserApiModel",
          "description": "The current user information"
        }
      },
      "type": "object"
    },
    "MessageApiModel": {
      "description": "Contains a message information",
      "properties": {
        "body": {
          "description": "Message contents",
          "type": "string"
        },
        "id": {
          "description": "Message identifier",
          "format": "int64",
          "type": "integer"
        },
        "sentTime": {
          "description": "The message date",
          "format": "date-time",
          "type": "string"
        },
        "subject": {
          "description": "Message subject",
          "type": "string"
        }
      },
      "required": [
        "subject",
        "body"
      ],
      "type": "object"
    },
    "ModulePermissionsApiModel": {
      "description": "Defines the information for a module",
      "properties": {
        "actions": {
          "description": "The permissions for the module actions",
          "items": {
            "$ref": "#/definitions/ActionPermissionsApiModel"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the current module",
          "enum": [
            "Default",
            "Help",
            "Notes",
            "Messages",
            "Configuration",
            "Companies",
            "News",
            "Entities",
            "Accounting",
            "AccountingIssuedInvoices",
            "AccountingReceivedInvoices",
            "AccountingCosts",
            "AccountingRedeemableCosts",
            "AccountingNewInvoice",
            "AccountingResume",
            "AccountingPresupuesto",
            "AccountingDeliveryNote",
            "Taxes",
            "TaxesIva",
            "TaxesIrpf",
            "TaxesRetenciones",
            "TaxesRetencionAlquileres",
            "TaxesThirdPartyOperations",
            "TaxesOperacionesIntracomunitarias",
            "TaxesResume",
            "InitialConfiguration",
            "Administration",
            "AdministrationVentas",
            "AdministrationStatistics",
            "Baners",
            "ExportUserData",
            "AccountingTransfer",
            "Catalogo",
            "Tutorial",
            "VirtualDisk",
            "Banks",
            "Treasury",
            "Reports",
            "ImportSingleInvoice",
            "UserPromotions",
            "Limbo",
            "Pasarela",
            "ManagerDashboard",
            "Domiciliaciones",
            "AccountingPeriodMaintenance",
            "AdministratorDashboard",
            "DocumentCertification",
            "WorkHoursRegister",
            "Users",
            "EInforma",
            "PersonalInformation",
            "Authentication",
            "EmptyLogout",
            "Core",
            "AdministrationImpersonation",
            "CompanyInvitation",
            "AdministrationPromocodes"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteApiModel": {
      "description": "Defines the information for a note",
      "properties": {
        "creationDate": {
          "description": "The note creation time",
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "The description of the note",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the product",
          "format": "int64",
          "type": "integer"
        },
        "lastUpdate": {
          "description": "The note last update time",
          "format": "date-time",
          "type": "string"
        },
        "title": {
          "description": "The title of the note",
          "type": "string"
        },
        "userId": {
          "description": "The company that owns the product",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "title",
        "description"
      ],
      "type": "object"
    },
    "NotificationAction": {
      "properties": {
        "extra": {
          "type": "object"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "NotificationApiModel": {
      "description": "Defines the a notification",
      "properties": {
        "actions": {
          "description": "The list of notification actions",
          "items": {
            "$ref": "#/definitions/NotificationAction"
          },
          "type": "array"
        },
        "companyId": {
          "description": "Company identifier",
          "format": "int64",
          "type": "integer"
        },
        "creationTime": {
          "description": "The notification creation time",
          "format": "date-time",
          "type": "string"
        },
        "extra": {
          "description": "The notification extra information",
          "type": "object"
        },
        "id": {
          "description": "The notification identifier",
          "format": "int64",
          "type": "integer"
        },
        "kind": {
          "description": "The notification kind",
          "enum": [
            "Common",
            "TaskFinished",
            "Error",
            "Upload"
          ],
          "type": "string"
        },
        "message": {
          "description": "The notification message",
          "type": "string"
        },
        "read": {
          "description": "Indicates if the notification have been read",
          "type": "boolean"
        },
        "title": {
          "description": "The notification title",
          "type": "string"
        },
        "updateTime": {
          "description": "The notification update time",
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "description": "The notification url",
          "type": "string"
        },
        "userId": {
          "description": "User identifier",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "NotificationsAccountPreferencesApiModel": {
      "description": "Contains information about account preferences",
      "properties": {
        "company": {
          "description": "The current company preferences",
          "items": {
            "$ref": "#/definitions/NotificationsPreferencesApiModel"
          },
          "type": "array"
        },
        "user": {
          "description": "The user preferences",
          "items": {
            "$ref": "#/definitions/NotificationsPreferencesApiModel"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "NotificationsAndMessagesApiModel": {
      "description": "Contains the information for unread notifications and messages",
      "properties": {
        "messages": {
          "description": "Unread messages",
          "items": {
            "$ref": "#/definitions/MessageApiModel"
          },
          "type": "array"
        },
        "notifications": {
          "description": "Unread notifications",
          "items": {
            "$ref": "#/definitions/NotificationApiModel"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "NotificationsAndMessagesCountApiModel": {
      "description": "Contains the information for unread notifications and messages",
      "properties": {
        "messagesCount": {
          "description": "Unread messages count",
          "format": "int64",
          "type": "integer"
        },
        "notificationsCount": {
          "description": "Unread notifications count",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "NotificationsPreferencesApiModel": {
      "description": "Defines the information for a notification preference",
      "properties": {
        "channel": {
          "description": "The notification channel",
          "enum": [
            "Mail",
            "Push"
          ],
          "type": "string"
        },
        "enabled": {
          "description": "Indicates if the notification is enabled",
          "type": "boolean"
        },
        "type": {
          "description": "The notification type",
          "enum": [
            "App",
            "Promotion"
          ],
          "type": "string"
        }
      },
      "required": [
        "type",
        "channel",
        "enabled"
      ],
      "type": "object"
    },
    "OnboardingVersionApiModel": {
      "description": "Defines version that we want to mark as seen",
      "properties": {
        "versionNumber": {
          "description": "The version number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperationTypeApiModel": {
      "description": "Defines the information for an operation type",
      "properties": {
        "description": {
          "description": "The description of the operation type",
          "type": "string"
        },
        "operation": {
          "description": "The operation type value",
          "enum": [
            "Nacional",
            "NacNoSujeta",
            "Intracumunitaria",
            "Exportacion",
            "Importacion",
            "NacionalExenta",
            "InversionSujetoPasivo"
          ],
          "type": "string"
        },
        "transaction": {
          "description": "The name of the operation type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodApiModel": {
      "description": "Defines a payment method",
      "properties": {
        "active": {
          "description": "The payment method status",
          "type": "boolean"
        },
        "id": {
          "description": "The identifier of the payment type",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "The payment method name",
          "type": "string"
        },
        "number": {
          "description": "The payment method number",
          "type": "string"
        },
        "type": {
          "description": "The type of payment",
          "enum": [
            "Efectivo",
            "Tarjeta",
            "Ingreso_Trasferencia",
            "Recibo_Bancario",
            "Pagare",
            "PayPal"
          ],
          "type": "string"
        }
      },
      "required": [
        "type",
        "name"
      ],
      "type": "object"
    },
    "PaymentMethodTypeApiModel": {
      "description": "Defines the information for a payment method type",
      "properties": {
        "allowsCreation": {
          "description": "Indicates if the payment method is allowed for creation",
          "type": "boolean"
        },
        "text": {
          "description": "The localized text of the type",
          "type": "string"
        },
        "value": {
          "description": "The payment method value",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentPromocode": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "code": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "domainId": {
          "format": "int64",
          "type": "integer"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "fullClassName": {
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "privateDescription": {
          "type": "string"
        },
        "publicDescription": {
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PermissionsApiModel": {
      "description": "Defines the information for a user permissions",
      "properties": {
        "companyRole": {
          "description": "Contains the user role on the current company",
          "enum": [
            "CompanyAdmin",
            "CompanyManager",
            "CompanyUser",
            "CompanyUserAsManager",
            "CompanyUserWorkHoursRegister"
          ],
          "type": "string"
        },
        "modules": {
          "description": "Defines the list of modules and it's action permissions",
          "items": {
            "$ref": "#/definitions/ModulePermissionsApiModel"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PredictiveSearchResult": {
      "properties": {
        "companySummaryList": {
          "items": {
            "$ref": "#/definitions/CompanySummary"
          },
          "type": "array"
        },
        "totalResults": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ProductApiModel": {
      "description": "Defines the information for a product",
      "properties": {
        "acquisitionCost": {
          "description": "Acquisition product cost",
          "format": "double",
          "type": "number"
        },
        "active": {
          "description": "Product is visible or not",
          "type": "boolean"
        },
        "allowProductSellWhenNoStock": {
          "description": "Indicates if the product sell is allowed when is out of stock",
          "type": "boolean"
        },
        "categoryId": {
          "description": "The category family id",
          "format": "int64",
          "type": "integer"
        },
        "companyId": {
          "description": "The company that owns the product",
          "format": "int64",
          "type": "integer"
        },
        "currentStock": {
          "description": "The current stock of the product",
          "format": "double",
          "type": "number"
        },
        "customField1": {
          "description": "Custom field for the product",
          "type": "string"
        },
        "customField2": {
          "description": "Custom field for the product",
          "type": "string"
        },
        "customField3": {
          "description": "Custom field for the product",
          "type": "string"
        },
        "customField4": {
          "description": "Custom field for the product",
          "type": "string"
        },
        "description": {
          "description": "The product description",
          "type": "string"
        },
        "discountPercentage": {
          "description": "The product discount percentage",
          "format": "double",
          "type": "number"
        },
        "discountedPrice": {
          "description": "The discounted price (with the discount percentage applied)",
          "format": "double",
          "type": "number"
        },
        "externalReference": {
          "description": "External product reference",
          "type": "string"
        },
        "fullCategoriesPath": {
          "description": "Product categories path",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the product",
          "format": "int64",
          "type": "integer"
        },
        "internalCode": {
          "description": "Internal product code",
          "type": "string"
        },
        "isStockCompanyNotificationEnabled": {
          "description": "Indicates if the out of stock application notifications are enabled for the product",
          "type": "boolean"
        },
        "isStockControlEnabled": {
          "description": "Indicates if the stock control is enabled for the product",
          "type": "boolean"
        },
        "isStockEmailNotificationEnabled": {
          "description": "Indicates if the out of stock email notification is enabled",
          "type": "boolean"
        },
        "isStockNotificationDisplayOnDashboardEnabled": {
          "description": "Indicates if the out of stock notification is enabled in the application dashboard",
          "type": "boolean"
        },
        "isStockNotificationEnabled": {
          "description": "Indicates if the out of stock notifications are enabled for the product",
          "type": "boolean"
        },
        "minUnitsTriggerAlarm": {
          "description": "The minimum number of unit to trigger the product out of stock alarm",
          "format": "double",
          "type": "number"
        },
        "name": {
          "description": "The product name",
          "type": "string"
        },
        "notes": {
          "description": "Notes of the product",
          "type": "string"
        },
        "price": {
          "description": "The product price",
          "format": "double",
          "type": "number"
        },
        "unitTypeId": {
          "description": "The unit type id of the product",
          "format": "int64",
          "type": "integer"
        },
        "unitTypeLongName": {
          "description": "The unit type long name (if exists)",
          "type": "string"
        },
        "unitTypeShortName": {
          "description": "The unit type short name (if exists)",
          "type": "string"
        },
        "vat": {
          "description": "The product VAT",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ProductStockOperationApiModel": {
      "description": "Defines the information for a product stock operation",
      "properties": {
        "amount": {
          "description": "The stock operation amount",
          "format": "double",
          "type": "number"
        },
        "comments": {
          "description": "Comments related to the operation",
          "type": "string"
        },
        "createdTime": {
          "description": "The operation date",
          "format": "date-time",
          "type": "string"
        },
        "deliveryNoteId": {
          "description": "The delivery note id if the stock operation is related to a delivery note",
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "description": "The stock operation identifier",
          "format": "int64",
          "type": "integer"
        },
        "invoiceId": {
          "description": "The invoice id if the stock operation is related to an invoice",
          "format": "int64",
          "type": "integer"
        },
        "operationAction": {
          "description": "The operation action (create, edit or delete)",
          "enum": [
            "Create",
            "Edit",
            "Delete",
            "CreateFromDeliveryNote",
            "Enable",
            "Disable",
            "CreateFromEstimate"
          ],
          "type": "string"
        },
        "operationType": {
          "description": "The stock operation type (automatic or manual)",
          "enum": [
            "Automatic",
            "Manual"
          ],
          "type": "string"
        },
        "productFamily": {
          "description": "The product family",
          "type": "string"
        },
        "productId": {
          "description": "The identifier of the product",
          "format": "int64",
          "type": "integer"
        },
        "productInternalCode": {
          "description": "The product internal code",
          "type": "string"
        },
        "productName": {
          "description": "The product name",
          "type": "string"
        },
        "productStockAfterOperation": {
          "description": "The product stock after the stock operation",
          "format": "double",
          "type": "number"
        },
        "subtype": {
          "description": "The stock operation subtype (adds more information about the type property)",
          "enum": [
            "None",
            "ProductStockControlSetting",
            "DeliveryNoteStockControlSetting",
            "DeliveryNoteInvoicingStockControlSetting",
            "RecoverDeliveryNoteStockControlSetting",
            "InvoiceStockControlSetting",
            "RecoverInvoiceStockControlSetting",
            "ProductStockControlSettingFromImport",
            "ResetStock",
            "AbsoluteStock",
            "RelativeStock",
            "EstimateStockControlSetting",
            "EstimateInvoicingStockControlSetting",
            "EstimateToDeliveryNoteStockControlSetting"
          ],
          "type": "string"
        },
        "type": {
          "description": "The stock operation type (the reason of the operation)",
          "enum": [
            "Invoice",
            "DeliveryNote",
            "InitialStock",
            "Import",
            "Lost",
            "Found",
            "Buy",
            "Sell",
            "Other",
            "StockControlSetting",
            "ProductRemoved",
            "ProviderReturn"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductStockOperationRequestApiModel": {
      "description": "Defines the information for a product stock operation",
      "properties": {
        "amount": {
          "description": "The stock operation amount",
          "format": "double",
          "type": "number"
        },
        "comments": {
          "description": "Comments related to the operation",
          "type": "string"
        },
        "productId": {
          "description": "The identifier of the product",
          "format": "int64",
          "type": "integer"
        },
        "type": {
          "description": "The stock operation type (the reason of the operation)",
          "enum": [
            "Invoice",
            "DeliveryNote",
            "InitialStock",
            "Import",
            "Lost",
            "Found",
            "Buy",
            "Sell",
            "Other",
            "StockControlSetting",
            "ProductRemoved",
            "ProviderReturn"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PublicEstimateApiModel": {
      "description": "Defines the information for generating a public estimate",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/PublicEstimateConfigurationApiModel",
          "description": "The estimate configuration (optional)"
        },
        "expirationDate": {
          "description": "Contains estimate expiration date (cuold be null)",
          "format": "date-time",
          "type": "string"
        },
        "footer": {
          "description": "Estimate notes",
          "type": "string"
        },
        "lines": {
          "description": "The line objects for the estimate",
          "items": {
            "$ref": "#/definitions/PublicEstimateLineApiModel"
          },
          "type": "array"
        },
        "logo": {
          "description": "The logo token to display on the estimate. Must be uploaded previously using the \"/public/estimate/logo\" service.",
          "type": "string"
        },
        "me": {
          "$ref": "#/definitions/PublicEstimateEntityApiModel",
          "description": "Information for the one generating the estimate"
        },
        "number": {
          "description": "The estimate number",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/PublicEstimateSharingOptionsApiModel",
          "description": "Estimate generation options download the document or false to send it by email to the information setted on \"me\"/\"email\" field"
        },
        "presupuestoDate": {
          "description": "The estimate date",
          "format": "date-time",
          "type": "string"
        },
        "retentionPercentage": {
          "description": "The estimate retention percentage",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "target": {
          "$ref": "#/definitions/PublicEstimateEntityApiModel",
          "description": "The information of the estimate destination"
        }
      },
      "required": [
        "options",
        "number",
        "presupuestoDate",
        "me",
        "target",
        "lines"
      ],
      "type": "object"
    },
    "PublicEstimateConfigurationApiModel": {
      "description": "Defines the configuration for generating an invoice from the public service",
      "properties": {
        "companyIdentifierName": {
          "description": "The company identifier name",
          "type": "string"
        },
        "culture": {
          "description": "THe language to generate the estimate",
          "type": "string"
        },
        "currency": {
          "description": "The currency used for the estimate",
          "type": "string"
        },
        "reName": {
          "description": "The name of the RE tax",
          "type": "string"
        },
        "retentionName": {
          "description": "The name of the Retention tax",
          "type": "string"
        },
        "vatName": {
          "description": "The name of the VAT tax",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PublicEstimateEntityApiModel": {
      "description": "Defines the information for generating a public estimate",
      "properties": {
        "address": {
          "description": "The entity address",
          "type": "string"
        },
        "city": {
          "description": "The entity city",
          "type": "string"
        },
        "countryId": {
          "description": "The country identifier",
          "format": "int64",
          "type": "integer"
        },
        "email": {
          "description": "The entity email address",
          "type": "string"
        },
        "fax": {
          "description": "The entity fax number",
          "type": "string"
        },
        "name": {
          "description": "The organization name of the entity",
          "type": "string"
        },
        "nif": {
          "description": "The NIF number of the entity",
          "pattern": "^.{1,50}$",
          "type": "string"
        },
        "phone": {
          "description": "The entity phone number",
          "type": "string"
        },
        "postalCode": {
          "description": "The entity postal code",
          "type": "string"
        },
        "province": {
          "description": "The entity province",
          "type": "string"
        }
      },
      "required": [
        "name",
        "nif"
      ],
      "type": "object"
    },
    "PublicEstimateLineApiModel": {
      "description": "Defines the information for an estimate line",
      "properties": {
        "concept": {
          "description": "The line concept",
          "type": "string"
        },
        "quantity": {
          "description": "The line items quantity",
          "format": "double",
          "type": "number"
        },
        "reAmount": {
          "description": "The RE amount",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "rePercentage": {
          "description": "The RE percentage",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "totalTaxableAmount": {
          "description": "The total taxable amount of the line.\r\nThere is a limit of two decimals.\r\nThis value is required to show the same rounded value applied by the client on the PDF.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "unitTaxableAmount": {
          "description": "Gets or Sets the unit price (the price for a single unit of product) for the estimate line. \r\nThe total taxable amount for the line will be UnitTaxableAmount * Quantity.",
          "format": "double",
          "type": "number"
        },
        "vatAmount": {
          "description": "Gets or Sets the total VAT amount for the estimate line.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "vatPercentage": {
          "description": "Gets or Sets the VAT percentage of a single unit of product. If the TotalVATAmount property is set it takes precedence over \r\nthis property and the value returned is computed from the TotalVATAmount and UnitTaxableAmount properties.",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "concept",
        "quantity",
        "unitTaxableAmount",
        "totalTaxableAmount"
      ],
      "type": "object"
    },
    "PublicEstimateSharingOptionsApiModel": {
      "description": "Defines the information for sharing the generated estimate",
      "properties": {
        "customMessage": {
          "description": "Defines a custom message to send to the estimate destination",
          "type": "string"
        },
        "download": {
          "description": "Set to true to download the estimate",
          "type": "boolean"
        },
        "sendByEmail": {
          "description": "Set to true to send the estimate by email. Requires the email information to be set on the entities information.",
          "type": "boolean"
        },
        "subscribeToNewsletter": {
          "description": "Set to true to subscribe the estimate issuer to platform newsletter",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PublicInvoiceApiModel": {
      "description": "Defines the information for generating a public invoice",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/PublicInvoiceConfigurationApiModel",
          "description": "The invoice configuration (optional)"
        },
        "expirationDate": {
          "description": "Contains invoice expiration date (cuold be null)",
          "format": "date-time",
          "type": "string"
        },
        "footer": {
          "description": "Invoice notes",
          "type": "string"
        },
        "invoiceDate": {
          "description": "The invoice date",
          "format": "date-time",
          "type": "string"
        },
        "lines": {
          "description": "The line objects for the invoice",
          "items": {
            "$ref": "#/definitions/PublicInvoiceLineApiModel"
          },
          "type": "array"
        },
        "logo": {
          "description": "The logo token to display on the invoice. Must be uploaded previously using the \"/public/invoice/logo\" service.",
          "type": "string"
        },
        "me": {
          "$ref": "#/definitions/PublicInvoiceEntityApiModel",
          "description": "Information for the one generating the invoice"
        },
        "number": {
          "description": "The invoice number",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/PublicInvoiceSharingOptionsApiModel",
          "description": "Invoice generation options download the document or false to send it by email to the information setted on \"me\"/\"email\" field"
        },
        "retentionPercentage": {
          "description": "The invoice retention percentage",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "target": {
          "$ref": "#/definitions/PublicInvoiceEntityApiModel",
          "description": "The information of the invoice destination"
        }
      },
      "required": [
        "options",
        "number",
        "invoiceDate",
        "me",
        "target",
        "lines"
      ],
      "type": "object"
    },
    "PublicInvoiceConfigurationApiModel": {
      "description": "Defines the configuration for generating an invoice from the public service",
      "properties": {
        "companyIdentifierName": {
          "description": "The company identifier name",
          "type": "string"
        },
        "culture": {
          "description": "THe language to generate the invoice",
          "type": "string"
        },
        "currency": {
          "description": "The currency used for the invoice",
          "type": "string"
        },
        "reName": {
          "description": "The name of the RE tax",
          "type": "string"
        },
        "retentionName": {
          "description": "The name of the Retention tax",
          "type": "string"
        },
        "vatName": {
          "description": "The name of the VAT tax",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PublicInvoiceEntityApiModel": {
      "description": "Defines the information for generating a public invoice",
      "properties": {
        "address": {
          "description": "The entity address",
          "type": "string"
        },
        "city": {
          "description": "The entity city",
          "type": "string"
        },
        "countryId": {
          "description": "The country identifier",
          "format": "int64",
          "type": "integer"
        },
        "email": {
          "description": "The entity email address",
          "type": "string"
        },
        "fax": {
          "description": "The entity fax number",
          "type": "string"
        },
        "name": {
          "description": "The organization name of the entity",
          "type": "string"
        },
        "nif": {
          "description": "The NIF number of the entity",
          "pattern": "^.{1,50}$",
          "type": "string"
        },
        "phone": {
          "description": "The entity phone number",
          "type": "string"
        },
        "postalCode": {
          "description": "The entity postal code",
          "type": "string"
        },
        "province": {
          "description": "The entity province",
          "type": "string"
        }
      },
      "required": [
        "name",
        "nif"
      ],
      "type": "object"
    },
    "PublicInvoiceLineApiModel": {
      "description": "Defines the information for an invoice line",
      "properties": {
        "concept": {
          "description": "The line concept",
          "type": "string"
        },
        "quantity": {
          "description": "The line items quantity",
          "format": "double",
          "type": "number"
        },
        "reAmount": {
          "description": "The RE amount",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "rePercentage": {
          "description": "The RE percentage",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "totalTaxableAmount": {
          "description": "The total taxable amount of the line.\r\nThere is a limit of two decimals.\r\nThis value is required to show the same rounded value applied by the client on the PDF.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "unitTaxableAmount": {
          "description": "Gets or Sets the unit price (the price for a single unit of product) for the invoice line. \r\nThe total taxable amount for the line will be UnitTaxableAmount * Quantity.",
          "format": "double",
          "type": "number"
        },
        "vatAmount": {
          "description": "Gets or Sets the total VAT amount for the invoice line.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "vatPercentage": {
          "description": "Gets or Sets the VAT percentage of a single unit of product. If the TotalVATAmount property is set it takes precedence over \r\nthis property and the value returned is computed from the TotalVATAmount and UnitTaxableAmount properties.",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        }
      },
      "required": [
        "concept",
        "quantity",
        "unitTaxableAmount",
        "totalTaxableAmount"
      ],
      "type": "object"
    },
    "PublicInvoiceSharingOptionsApiModel": {
      "description": "Defines the information for sharing the generated invoice",
      "properties": {
        "customMessage": {
          "description": "Defines a custom message to send to the invoice destination",
          "type": "string"
        },
        "download": {
          "description": "Set to true to download the invoice",
          "type": "boolean"
        },
        "sendByEmail": {
          "description": "Set to true to send the invoice by email. Requires the email information to be set on the entities information.",
          "type": "boolean"
        },
        "subscribeToNewsletter": {
          "description": "Set to true to subscribe the invoice issuer to platform newsletter",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PushToken": {
      "properties": {
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "device": {
          "enum": [
            "Web",
            "iOS",
            "Android"
          ],
          "type": "string"
        },
        "referer": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Created",
            "Expired",
            "Removed",
            "NotRegistered",
            "InvalidRegistration",
            "MissingRegistration"
          ],
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "type": "string"
        },
        "userAgent": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PushTokenApiModel": {
      "description": "Defines the information to send for a push token",
      "properties": {
        "itemId": {
          "description": "The user or company id",
          "format": "int64",
          "type": "integer"
        },
        "token": {
          "description": "The device token",
          "type": "string"
        }
      },
      "required": [
        "token"
      ],
      "type": "object"
    },
    "ReTypeApiModel": {
      "description": "Contains the information for a RE type",
      "properties": {
        "id": {
          "description": "The RE type identifier",
          "format": "int64",
          "type": "integer"
        },
        "isDefault": {
          "description": "Indicated if the RE type is the default one",
          "type": "boolean"
        },
        "name": {
          "description": "The RE type name",
          "type": "string"
        },
        "order": {
          "description": "The RE type order",
          "format": "int32",
          "type": "integer"
        },
        "percent": {
          "description": "The RE type percent",
          "format": "double",
          "type": "number"
        },
        "type": {
          "description": "The RE type",
          "enum": [
            "RegionFiscal",
            "Usuario"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegisterUserApiModel": {
      "description": "Contains the information to create a new user",
      "properties": {
        "brand": {
          "description": "The brand to create the user.",
          "format": "int64",
          "type": "integer"
        },
        "clientId": {
          "description": "The ID of the client creating the user",
          "maxLength": 32,
          "minLength": 32,
          "type": "string"
        },
        "clientSecret": {
          "description": "The secret of the client creating the user",
          "maxLength": 64,
          "minLength": 64,
          "type": "string"
        },
        "password": {
          "description": "The password of the new user to create",
          "maxLength": 2147483647,
          "minLength": 5,
          "type": "string"
        },
        "promoCode": {
          "description": "The promo code to apply for creating the user",
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        },
        "userInvitation": {
          "$ref": "#/definitions/UserInvitationFromRegisterApiModel",
          "description": "The invitation id and invitation token to accept a user invitation to a company from the register"
        },
        "username": {
          "description": "The username of the new user to create",
          "type": "string"
        }
      },
      "required": [
        "clientId",
        "clientSecret",
        "username",
        "password"
      ],
      "type": "object"
    },
    "RememberPasswordApiModel": {
      "description": "Defines the information to remember user password",
      "properties": {
        "email": {
          "description": "The email of the user to remember password",
          "type": "string"
        }
      },
      "required": [
        "email"
      ],
      "type": "object"
    },
    "RetentionTypeApiModel": {
      "description": "Contains the information for a retention type",
      "properties": {
        "category": {
          "description": "The retention category",
          "enum": [
            "Actual",
            "CeutaYMelilla",
            "Antiguo"
          ],
          "type": "string"
        },
        "id": {
          "description": "The retention identifier",
          "format": "int64",
          "type": "integer"
        },
        "isDefault": {
          "description": "Indicates if the retention is the default one",
          "type": "boolean"
        },
        "name": {
          "description": "The retention name",
          "type": "string"
        },
        "order": {
          "description": "The display order",
          "format": "int32",
          "type": "integer"
        },
        "percent": {
          "description": "The retention percentaje",
          "format": "double",
          "type": "number"
        },
        "type": {
          "description": "The retention type",
          "enum": [
            "RegionFiscal",
            "Usuario"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SendDocumentApiModel": {
      "description": "Defines the information for a document to be sent",
      "properties": {
        "blindCopy": {
          "description": "Add sender as blind copy",
          "type": "boolean"
        },
        "body": {
          "description": "Message body",
          "type": "string"
        },
        "replyTo": {
          "description": "Message reply to field",
          "type": "string"
        },
        "subject": {
          "description": "Message subject",
          "type": "string"
        },
        "to": {
          "description": "Message destination",
          "pattern": "^[0-9a-zA-Z-._+&]+@(([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})|(([a-zA-Z0-9\\-]+\\.)+([a-zA-Z]{2,})))(\\s*[;,]\\s*[0-9a-zA-Z-._+&]+@(([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})|(([a-zA-Z0-9\\-]+\\.)+([a-zA-Z]{2,}))))*$",
          "type": "string"
        }
      },
      "required": [
        "to",
        "subject",
        "body"
      ],
      "type": "object"
    },
    "SignFileRequestApiModel": {
      "description": "Class that contains the information for sign a file",
      "properties": {
        "fileId": {
          "description": "The original file that will be signed",
          "format": "int64",
          "type": "integer"
        },
        "signedFilename": {
          "description": "The name of the signed file",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SignFileTaskApiModel": {
      "description": "Class that contains the information of a sign file task",
      "properties": {
        "fileId": {
          "description": "The file id that will be signed",
          "format": "int64",
          "type": "integer"
        },
        "signedFileName": {
          "description": "The name of the signed file",
          "type": "string"
        },
        "taskId": {
          "description": "The task id",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "StockControlConfigurationApiModel": {
      "description": "Contains the configuration of the stock control",
      "properties": {
        "defaultAllowProductSellWhenNoStock": {
          "description": "Indicates if the product sell is allowed when is out of stock",
          "type": "boolean"
        },
        "defaultIsStockCompanyNotificationEnabled": {
          "description": "Indicates if the out of stock message is sent by notification to the company",
          "type": "boolean"
        },
        "defaultIsStockControlEnabled": {
          "description": "Indicates if the stock control is enabled by default when a product is created or imported",
          "type": "boolean"
        },
        "defaultIsStockEmailNotificationEnabled": {
          "description": "Indicates if the out of stock message is sent by email to the specified email address",
          "type": "boolean"
        },
        "defaultIsStockNotificationDisplayOnDashboardEnabled": {
          "description": "Indicates if the out of stock notification is showed in the dashboard by default for the product",
          "type": "boolean"
        },
        "defaultIsStockNotificationEnabled": {
          "description": "Indicates if the out of stock alarm is enabled by default for the product",
          "type": "boolean"
        },
        "defaultMinUnitsTriggerAlarm": {
          "description": "Indicates the default number of units to trigger the out of stock alarm",
          "format": "double",
          "type": "number"
        },
        "deliveryNoteRecoverStockOnDelete": {
          "description": "When a delivery note is deleted, indicates if the stock will be recovered",
          "type": "boolean"
        },
        "deliveryNoteStockControlType": {
          "description": "The delivery notes stock control configuration",
          "enum": [
            "Never",
            "Create_edit",
            "Invoice"
          ],
          "type": "string"
        },
        "estimateStockControlType": {
          "description": "The estimates stock control configuration",
          "enum": [
            "Never",
            "DeliveryNote",
            "Invoice"
          ],
          "type": "string"
        },
        "invoiceRecoverStockOnDelete": {
          "description": "When an issued invoice is deleted, indicates if the stock will be recovered",
          "type": "boolean"
        },
        "invoiceStockControlType": {
          "description": "The issued invoices stock control configuration",
          "enum": [
            "Never",
            "Create_edit"
          ],
          "type": "string"
        },
        "notificationEmail": {
          "description": "The email to notify the out of stock messages (could be empty)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StockControlRequestApiModel": {
      "description": "Contains the configuration of the stock control",
      "properties": {
        "defaultAllowProductSellWhenNoStock": {
          "description": "Indicates if the product sell is allowed when is out of stock",
          "type": "boolean"
        },
        "defaultIsStockCompanyNotificationEnabled": {
          "description": "Indicates if the out of stock message is sent by notification to the company",
          "type": "boolean"
        },
        "defaultIsStockControlEnabled": {
          "description": "Indicates if the stock control is enabled by default when a product is created or imported",
          "type": "boolean"
        },
        "defaultIsStockEmailNotificationEnabled": {
          "description": "Indicates if the out of stock message is sent by email to the specified email address",
          "type": "boolean"
        },
        "defaultIsStockNotificationDisplayOnDashboardEnabled": {
          "description": "Indicates if the out of stock notification is showed in the dashboard by default for the product",
          "type": "boolean"
        },
        "defaultIsStockNotificationEnabled": {
          "description": "Indicates if the out of stock alarm is enabled by default for the product",
          "type": "boolean"
        },
        "defaultMinUnitsTriggerAlarm": {
          "description": "Indicates the default number of units to trigger the out of stock alarm",
          "format": "double",
          "type": "number"
        },
        "deliveryNoteRecoverStockOnDelete": {
          "description": "When a delivery note is deleted, indicates if the stock will be recovered",
          "type": "boolean"
        },
        "deliveryNoteStockControlType": {
          "description": "The delivery notes stock control configuration",
          "enum": [
            "Never",
            "Create_edit",
            "Invoice"
          ],
          "type": "string"
        },
        "estimateStockControlType": {
          "description": "The estimates stock control configuration",
          "enum": [
            "Never",
            "DeliveryNote",
            "Invoice"
          ],
          "type": "string"
        },
        "invoiceRecoverStockOnDelete": {
          "description": "When an issued invoice is deleted, indicates if the stock will be recovered",
          "type": "boolean"
        },
        "invoiceStockControlType": {
          "description": "The issued invoices stock control configuration",
          "enum": [
            "Never",
            "Create_edit"
          ],
          "type": "string"
        },
        "notificationEmail": {
          "description": "The email to notify the out of stock messages (could be empty)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StockForDocumentsAndProductsEnabledApiModel": {
      "description": "Contains if the stock control for documents is configured and if exists products with stock control enabled",
      "properties": {
        "existsProductsWithStockControlEnabled": {
          "description": "Returns if exists products with the stock control enabled",
          "type": "boolean"
        },
        "isStockControlConfiguredForDocuments": {
          "description": "Returns if the stock control is configured for documents",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SupportMessageTemplateApiModel": {
      "description": "Defines the information for a support message template",
      "properties": {
        "category": {
          "description": "Template category",
          "type": "string"
        },
        "creationDate": {
          "description": "Template creation time",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "Template identifier",
          "format": "int64",
          "type": "integer"
        },
        "lastUpdate": {
          "description": "Template last update time",
          "format": "date-time",
          "type": "string"
        },
        "message": {
          "description": "Template message",
          "type": "string"
        },
        "title": {
          "description": "Template title",
          "type": "string"
        }
      },
      "required": [
        "title",
        "message"
      ],
      "type": "object"
    },
    "TaskStatusApiModel": {
      "description": "Defines the status information for a task",
      "properties": {
        "completed": {
          "description": "Indicates that the task has completed its execution",
          "readOnly": true,
          "type": "boolean"
        },
        "failReason": {
          "description": "The task fail reason",
          "type": "string"
        },
        "id": {
          "description": "The task identifier",
          "format": "int64",
          "type": "integer"
        },
        "info": {
          "description": "The task extra information. It's contents will depend on the type of task",
          "type": "object"
        },
        "lastAttempt": {
          "description": "The execution starting time",
          "format": "date-time",
          "type": "string"
        },
        "queueTime": {
          "description": "The task queue time",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The task current status",
          "enum": [
            "Waiting",
            "Working",
            "Done",
            "Failed",
            "DoneButNotCompleted"
          ],
          "type": "string"
        },
        "type": {
          "description": "The type of task",
          "enum": [
            "UploadInvoiceToDropbox",
            "ExportInvoicesPdfAsZipFile",
            "UploadInvoiceToGoogleDrive",
            "UploadBudgetToDropbox",
            "UploadBudgetToGoogleDrive",
            "UploadDeliveryNoteToDropbox",
            "UploadDeliveryNoteToGoogleDrive",
            "GenerateA3AccountingTransfer",
            "ExportBookIVA",
            "ExportBookIRPF",
            "ExportBookIVAIRPF",
            "ExportAccountingAdvanced",
            "GenerateBankRemittance",
            "GenerateBankRemittanceRefund",
            "SignVirtualDiskFile",
            "ImportDataFromFile"
          ],
          "type": "string"
        },
        "waitingTime": {
          "description": "The task waiting time",
          "readOnly": true,
          "type": "string"
        },
        "workingTime": {
          "description": "The task working time",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeZoneInformationApiModel": {
      "description": "Class that contains the time zone information",
      "properties": {
        "displayName": {
          "description": "The time zone display name",
          "type": "string"
        },
        "id": {
          "description": "The time zone id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UnitTypeApiModel": {
      "description": "Defines the information for unit types",
      "properties": {
        "category": {
          "description": "The unit category",
          "type": "string"
        },
        "id": {
          "description": "The unity type identifier",
          "format": "int64",
          "type": "integer"
        },
        "longName": {
          "description": "The unit long name",
          "type": "string"
        },
        "shortName": {
          "description": "The unit short name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateDeliveryNoteApiModel": {
      "description": "Defines the information for update a delivery note",
      "properties": {
        "date": {
          "description": "The delivery note date",
          "format": "date-time",
          "type": "string"
        },
        "footer": {
          "description": "Delivery note notes",
          "type": "string"
        },
        "lines": {
          "description": "The number of lines that compose the delivery note",
          "items": {
            "$ref": "#/definitions/DeliveryNoteLineRequestApiModel"
          },
          "type": "array"
        },
        "notes": {
          "description": "Delivery note notes",
          "type": "string"
        },
        "number": {
          "description": "The delivery note number to create",
          "type": "string"
        },
        "numberingFormatId": {
          "description": "The id of the numbering format applied to the delivery note number (optional)",
          "format": "int64",
          "type": "integer"
        },
        "retentionPercentage": {
          "description": "The percentage of the retention value",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "status": {
          "description": "The current status of the delivery note",
          "enum": [
            "Creado",
            "Enviado",
            "Aceptado",
            "Rechazado",
            "Parcial",
            "Facturado",
            "Cerrado"
          ],
          "type": "string"
        },
        "targetEntity": {
          "$ref": "#/definitions/UpdateDocumentEntityApiModel",
          "description": "The delivery note target entity information"
        }
      },
      "required": [
        "targetEntity",
        "number",
        "date",
        "lines"
      ],
      "type": "object"
    },
    "UpdateDocumentEntityApiModel": {
      "description": "Defines the information for update a document entity (the entity that is associated to an invoice, estimate or delivery note)",
      "properties": {
        "address": {
          "description": "The entity address",
          "type": "string"
        },
        "city": {
          "description": "The entity city",
          "type": "string"
        },
        "country": {
          "description": "The entity country",
          "type": "string"
        },
        "countryId": {
          "description": "The country identifier",
          "format": "int64",
          "type": "integer"
        },
        "customField1": {
          "description": "The entity custom field 1",
          "type": "string"
        },
        "customField2": {
          "description": "The entity custom field 2",
          "type": "string"
        },
        "email": {
          "description": "The entity email address",
          "type": "string"
        },
        "fax": {
          "description": "The entity fax number",
          "type": "string"
        },
        "nif": {
          "description": "The NIF number of the entity",
          "type": "string"
        },
        "notes": {
          "description": "The entity notes",
          "type": "string"
        },
        "organization": {
          "description": "The organization name of the entity",
          "type": "string"
        },
        "phone": {
          "description": "The entity phone number",
          "type": "string"
        },
        "postalCode": {
          "description": "The entity postal code",
          "type": "string"
        },
        "province": {
          "description": "The entity province",
          "type": "string"
        },
        "url": {
          "description": "The entity URL address",
          "type": "string"
        }
      },
      "required": [
        "organization",
        "nif"
      ],
      "type": "object"
    },
    "UpdateEstimateApiModel": {
      "description": "Defines the information to update an estimate",
      "properties": {
        "date": {
          "description": "The estimate date",
          "format": "date-time",
          "type": "string"
        },
        "expirationDate": {
          "description": "The estimate expiration time (can be null)",
          "format": "date-time",
          "type": "string"
        },
        "footer": {
          "description": "Estimate notes",
          "type": "string"
        },
        "lines": {
          "description": "The number of lines that compose the estimate",
          "items": {
            "$ref": "#/definitions/EstimateLineRequestApiModel"
          },
          "type": "array"
        },
        "notes": {
          "description": "Estimate notes",
          "type": "string"
        },
        "number": {
          "description": "The estimate number to create",
          "type": "string"
        },
        "numberingFormatId": {
          "description": "The id of the numbering format applied to the estimate number (optional)",
          "format": "int64",
          "type": "integer"
        },
        "retentionPercentage": {
          "description": "The percentage of the retention value",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "status": {
          "description": "The current status of the estimate",
          "enum": [
            "Creado",
            "Enviado",
            "Aceptado",
            "Rechazado",
            "Parcial",
            "Facturado",
            "ParcialAlbaranado",
            "Albaranado",
            "Cerrado"
          ],
          "type": "string"
        },
        "targetEntity": {
          "$ref": "#/definitions/UpdateDocumentEntityApiModel",
          "description": "The invoice target entity information"
        }
      },
      "required": [
        "number",
        "date",
        "lines"
      ],
      "type": "object"
    },
    "UpdateExpenseApiModel": {
      "description": "Defines the information to update an expense",
      "properties": {
        "amount": {
          "description": "The amount for the expense (including taxes).\r\nThere is a limit of two decimals.",
          "format": "double",
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "concept": {
          "description": "Brief description about what the expense was.",
          "type": "string"
        },
        "date": {
          "description": "Expense date",
          "format": "date-time",
          "type": "string"
        },
        "expenseClass": {
          "description": "The type of expense",
          "format": "int32",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer"
        },
        "imputation": {
          "description": "The percentage of the expense that will be involved in the fiscal computations.",
          "format": "int32",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        },
        "issuerEntity": {
          "$ref": "#/definitions/ExpenseEntityApiModel",
          "description": "Contains the expense entity identifier"
        },
        "notes": {
          "description": "Some notes the use can input regarding the expense.",
          "type": "string"
        },
        "number": {
          "description": "The expense number",
          "type": "string"
        },
        "paymentMethodId": {
          "description": "Contains the document payment method identifier",
          "format": "int64",
          "minimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "date",
        "amount",
        "imputation",
        "expenseClass"
      ],
      "type": "object"
    },
    "UpdateIssuedInvoiceApiModel": {
      "description": "Defines the information for update an issued invoice",
      "properties": {
        "date": {
          "description": "The invoice date",
          "format": "date-time",
          "type": "string"
        },
        "expirationDate": {
          "description": "The invoice expiration time (can be null)",
          "format": "date-time",
          "type": "string"
        },
        "footer": {
          "description": "Invoice notes",
          "type": "string"
        },
        "invoiceClass": {
          "description": "The issued / received invoice class",
          "format": "int32",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer"
        },
        "lines": {
          "description": "The number of lines that compose the invoice",
          "items": {
            "$ref": "#/definitions/InvoiceLineRequestApiModel"
          },
          "type": "array"
        },
        "notes": {
          "description": "Invoice notes",
          "type": "string"
        },
        "number": {
          "description": "The invoice number to create",
          "type": "string"
        },
        "numberingFormatId": {
          "description": "The id of the numbering format applied to the invoice number (optional)",
          "format": "int64",
          "type": "integer"
        },
        "operationDate": {
          "description": "The operation date of the invoice",
          "format": "date-time",
          "type": "string"
        },
        "operationType": {
          "description": "The operation type for the invoice. \r\nDepends on the type of invoice and the company configuration.",
          "type": "string"
        },
        "rectifiesInvoiceId": {
          "description": "If not NULL contains the identifier of the invoice which the current invoice is rectifying",
          "format": "int64",
          "type": "integer"
        },
        "retentionPercentage": {
          "description": "The percentage of the retention value",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "targetEntity": {
          "$ref": "#/definitions/UpdateDocumentEntityApiModel",
          "description": "The invoice target entity information"
        }
      },
      "required": [
        "targetEntity",
        "number",
        "date",
        "invoiceClass",
        "lines"
      ],
      "type": "object"
    },
    "UpdatePasswordApiModel": {
      "description": "Defines the information for updating the current user password",
      "properties": {
        "currentPassword": {
          "description": "The current user password",
          "type": "string"
        },
        "newPassword": {
          "description": "The new password to set",
          "maxLength": 2147483647,
          "minLength": 5,
          "type": "string"
        }
      },
      "required": [
        "currentPassword",
        "newPassword"
      ],
      "type": "object"
    },
    "UpdateProductApiModel": {
      "description": "Defines the information for create a product",
      "properties": {
        "acquisitionCost": {
          "description": "Acquisition product cost",
          "format": "double",
          "type": "number"
        },
        "active": {
          "description": "Product is visible or not",
          "type": "boolean"
        },
        "allowProductSellWhenNoStock": {
          "description": "Indicates if the product sell is allowed when is out of stock",
          "type": "boolean"
        },
        "categoryId": {
          "description": "The category family id",
          "format": "int64",
          "type": "integer"
        },
        "companyId": {
          "description": "The company that owns the product",
          "format": "int64",
          "type": "integer"
        },
        "customField1": {
          "description": "Custom field for the product",
          "type": "string"
        },
        "customField2": {
          "description": "Custom field for the product",
          "type": "string"
        },
        "customField3": {
          "description": "Custom field for the product",
          "type": "string"
        },
        "customField4": {
          "description": "Custom field for the product",
          "type": "string"
        },
        "description": {
          "description": "The product description",
          "type": "string"
        },
        "discountPercentage": {
          "description": "The product discount percentage",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "pattern": "^[-]?\\d+[.,]?\\d{0,2}$",
          "type": "number"
        },
        "externalReference": {
          "description": "External product reference",
          "type": "string"
        },
        "fullCategoriesPath": {
          "description": "Product categories path",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the product",
          "format": "int64",
          "type": "integer"
        },
        "internalCode": {
          "description": "Internal product code",
          "type": "string"
        },
        "isStockCompanyNotificationEnabled": {
          "description": "Indicates if the out of stock application notifications are enabled for the product",
          "type": "boolean"
        },
        "isStockControlEnabled": {
          "description": "Indicates if the stock control is enabled for the product",
          "type": "boolean"
        },
        "isStockEmailNotificationEnabled": {
          "description": "Indicates if the out of stock email notification is enabled",
          "type": "boolean"
        },
        "isStockNotificationDisplayOnDashboardEnabled": {
          "description": "Indicates if the out of stock notification is enabled in the application dashboard",
          "type": "boolean"
        },
        "isStockNotificationEnabled": {
          "description": "Indicates if the out of stock notifications are enabled for the product",
          "type": "boolean"
        },
        "minUnitsTriggerAlarm": {
          "description": "The minimum number of unit to trigger the product out of stock alarm",
          "format": "double",
          "type": "number"
        },
        "name": {
          "description": "The product name",
          "type": "string"
        },
        "notes": {
          "description": "Notes of the product",
          "type": "string"
        },
        "price": {
          "description": "The product price",
          "format": "double",
          "type": "number"
        },
        "unitTypeId": {
          "description": "The unit type id of the product",
          "format": "int64",
          "type": "integer"
        },
        "vat": {
          "description": "The product VAT",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "name",
        "price",
        "vat"
      ],
      "type": "object"
    },
    "UpdateReceivedInvoiceApiModel": {
      "description": "Defines the information for updating a received invoice",
      "properties": {
        "date": {
          "description": "The invoice date",
          "format": "date-time",
          "type": "string"
        },
        "expirationDate": {
          "description": "The invoice expiration time (can be null)",
          "format": "date-time",
          "type": "string"
        },
        "footer": {
          "description": "Invoice notes",
          "type": "string"
        },
        "imputation": {
          "description": "The part of the invoice to impute for taxes",
          "format": "int32",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        },
        "invoiceClass": {
          "description": "The issued / received invoice class",
          "format": "int32",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer"
        },
        "isCashCriteria": {
          "description": "Indicates if the invoice is cash criteria",
          "type": "boolean"
        },
        "issuerEntity": {
          "$ref": "#/definitions/UpdateDocumentEntityApiModel",
          "description": "The information for the invoice issuer"
        },
        "lines": {
          "description": "The number of lines that compose the invoice",
          "items": {
            "$ref": "#/definitions/InvoiceLineRequestApiModel"
          },
          "type": "array"
        },
        "notes": {
          "description": "Invoice notes",
          "type": "string"
        },
        "number": {
          "description": "The invoice number to create",
          "type": "string"
        },
        "operationDate": {
          "description": "The operation date of the invoice",
          "format": "date-time",
          "type": "string"
        },
        "operationType": {
          "description": "The operation type for the invoice. \r\nDepends on the type of invoice and the company configuration.",
          "type": "string"
        },
        "retentionPercentage": {
          "description": "The percentage of the retention value",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "vatImputation": {
          "description": "The part of the VAT to impute for taxes",
          "format": "int32",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "issuerEntity",
        "imputation",
        "number",
        "date",
        "invoiceClass",
        "lines"
      ],
      "type": "object"
    },
    "UpdateTimeZoneApiModel": {
      "description": "Class that contains information to update a time zone",
      "properties": {
        "timeZoneId": {
          "description": "The new time zone id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateUserApiModel": {
      "description": "Identifies the information for an application user",
      "properties": {
        "birthDate": {
          "description": "Indicates the birth date of the user",
          "format": "date-time",
          "type": "string"
        },
        "email": {
          "description": "The user email address",
          "type": "string"
        },
        "gender": {
          "description": "Indicates the gender of the user",
          "enum": [
            "Male",
            "Female"
          ],
          "type": "string"
        },
        "name": {
          "description": "The user name",
          "type": "string"
        },
        "phone": {
          "description": "User phone number",
          "type": "string"
        },
        "surname": {
          "description": "The user surname",
          "type": "string"
        },
        "uiCulture": {
          "description": "User preferred culture",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateUserCompanyRoleApiModel": {
      "description": "Class that contains the information for the edition of the user company role",
      "properties": {
        "userCompanyId": {
          "description": "The user id that is being edited",
          "format": "int64",
          "type": "integer"
        },
        "userCompanyRole": {
          "description": "The user company role of the edition",
          "enum": [
            "CompanyAdmin",
            "CompanyManager",
            "CompanyUser",
            "CompanyUserAsManager",
            "CompanyUserWorkHoursRegister"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "UploadPublicLogoResponseApiModel": {
      "description": "Defines the information for an uploadded public logo",
      "properties": {
        "expiration": {
          "description": "The expiration of the uploaded logo",
          "format": "date-time",
          "type": "string"
        },
        "token": {
          "description": "The identifeir of the uploaded logo",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserApiModel": {
      "description": "Identifies the information for an application user",
      "properties": {
        "birthDate": {
          "description": "Indicates the birth date of the user",
          "format": "date-time",
          "type": "string"
        },
        "brandId": {
          "description": "The ID of the brand where the company was registered",
          "format": "int64",
          "type": "integer"
        },
        "canCreateCompanies": {
          "description": "Indicates if the user can create",
          "type": "boolean"
        },
        "displayName": {
          "description": "The user display name",
          "type": "string"
        },
        "email": {
          "description": "The user email address",
          "type": "string"
        },
        "gender": {
          "description": "Indicates the gender of the user",
          "enum": [
            "Male",
            "Female"
          ],
          "type": "string"
        },
        "hasAdminRights": {
          "description": "Indicates if the user is an admin",
          "type": "boolean"
        },
        "hasManagerRights": {
          "description": "Indicates if the user is a manager",
          "type": "boolean"
        },
        "id": {
          "description": "User identifier",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "The user name",
          "type": "string"
        },
        "phone": {
          "description": "Indicates the user phone number",
          "type": "string"
        },
        "surname": {
          "description": "The user surname",
          "type": "string"
        },
        "timeZone": {
          "description": "The timezone of the user",
          "type": "string"
        },
        "uiCulture": {
          "description": "User preferred culture",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserCompanyInfoApiModel": {
      "description": "Class that contains the information for a user into a specific company",
      "properties": {
        "id": {
          "description": "The user company relation identifier",
          "format": "int64",
          "type": "integer"
        },
        "isAccessToCompanyActivated": {
          "description": "Gets if the user access into the company is active or not",
          "type": "boolean"
        },
        "isDomainParentManagerInCompanyDomain": {
          "description": "Returns if the user is domain parent manager in the company domain",
          "type": "boolean"
        },
        "isUserActive": {
          "description": "Gets or sets if the user is active",
          "type": "boolean"
        },
        "name": {
          "description": "The user name",
          "type": "string"
        },
        "surname": {
          "description": "The user surname",
          "type": "string"
        },
        "userCompanyRole": {
          "description": "The user role into the company",
          "enum": [
            "CompanyAdmin",
            "CompanyManager",
            "CompanyUser",
            "CompanyUserAsManager",
            "CompanyUserWorkHoursRegister"
          ],
          "type": "string"
        },
        "userContactEmail": {
          "description": "The user contact email",
          "type": "string"
        },
        "userId": {
          "description": "The user id",
          "format": "int64",
          "type": "integer"
        },
        "userRole": {
          "description": "The user role into the company.",
          "enum": [
            "User",
            "MultiUser",
            "Manager",
            "Administrator",
            "Root"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserInvitationApiModel": {
      "description": "Class that contains the information of a user invitation to a company",
      "properties": {
        "email": {
          "description": "The invited user email",
          "type": "string"
        },
        "expirationTime": {
          "description": "The invitation expiration time",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "The invitation id",
          "format": "int64",
          "type": "integer"
        },
        "role": {
          "description": "The user role into the company",
          "enum": [
            "CompanyAdmin",
            "CompanyManager",
            "CompanyUser",
            "CompanyUserAsManager",
            "CompanyUserWorkHoursRegister"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserInvitationFromRegisterApiModel": {
      "description": "Class that contains the information for accept an invitation to a company from the register",
      "properties": {
        "invitationId": {
          "description": "The invitation id",
          "format": "int64",
          "type": "integer"
        },
        "invitationToken": {
          "description": "The invitation token",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserInvitationRequestApiModel": {
      "description": "Class that contains the information to invite a user to the current company",
      "properties": {
        "userCompanyRole": {
          "description": "The user company role",
          "enum": [
            "CompanyAdmin",
            "CompanyManager",
            "CompanyUser",
            "CompanyUserAsManager",
            "CompanyUserWorkHoursRegister"
          ],
          "type": "string"
        },
        "userEmail": {
          "description": "The user email to invite",
          "type": "string"
        }
      },
      "required": [
        "userEmail"
      ],
      "type": "object"
    },
    "UserInvitationResultsApiModel": {
      "description": "Class that contains the results of a user invitation to a company",
      "properties": {
        "invitationMethod": {
          "description": "The method by which the user has been invited",
          "enum": [
            "PlatformMessage",
            "Email"
          ],
          "type": "string"
        },
        "isInvitationReSent": {
          "description": "Gets if the invitation already exists and has been resent",
          "type": "boolean"
        },
        "userInvitationEmail": {
          "description": "The user invitation email",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VatModeApiModel": {
      "description": "Contains the information for a VAT mode",
      "properties": {
        "code": {
          "description": "The VAT mode code",
          "type": "string"
        },
        "id": {
          "description": "The VAT mode ID",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "The VAT mode name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VatTypeApiModel": {
      "description": "Defines the information for a VAT type",
      "properties": {
        "id": {
          "description": "The VAT type identifier",
          "format": "int64",
          "type": "integer"
        },
        "isDefault": {
          "description": "Indicated if the VAT type is the default one",
          "type": "boolean"
        },
        "name": {
          "description": "The VAT type name",
          "type": "string"
        },
        "order": {
          "description": "The VAT type order",
          "format": "int32",
          "type": "integer"
        },
        "percent": {
          "description": "The VAT type percent",
          "format": "double",
          "type": "number"
        },
        "type": {
          "description": "The VAt type",
          "enum": [
            "FiscalRegion",
            "Company"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Version": {
      "properties": {
        "build": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "major": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "majorRevision": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "minor": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "minorRevision": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "revision": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "VersionApiModel": {
      "description": "Defines the version information of the API",
      "properties": {
        "apiVersion": {
          "$ref": "#/definitions/Version",
          "description": "The API version details"
        },
        "description": {
          "description": "The version description",
          "type": "string"
        },
        "platformVersion": {
          "$ref": "#/definitions/Version",
          "description": "The platform version details"
        },
        "timestamp": {
          "description": "The timestamp when the response was generated",
          "format": "double",
          "readOnly": true,
          "type": "number"
        }
      },
      "type": "object"
    },
    "WorkHoursReportDateRangeApiModel": {
      "description": "A date range (start time and end time) for the work hours report",
      "properties": {
        "dateRangeFormatted": {
          "description": "The date range formatted",
          "type": "string"
        },
        "endTime": {
          "description": "The end time in local time zone",
          "format": "date-time",
          "type": "string"
        },
        "startTime": {
          "description": "The start time in local time zone",
          "format": "date-time",
          "type": "string"
        },
        "totalWorkedHoursAndMinutesShortFormatted": {
          "description": "The total worked hours and minutes formatted",
          "type": "string"
        },
        "utcEndTime": {
          "description": "The end time in UTC",
          "format": "date-time",
          "type": "string"
        },
        "utcStartTime": {
          "description": "The start time in UTC",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkHoursSummaryDayOverviewApiModel": {
      "description": "Class that contains the summary of the entries and total worked time for a user in a specific day",
      "properties": {
        "employeeName": {
          "description": "The employee name",
          "type": "string"
        },
        "entries": {
          "description": "A list of entries for the requested date",
          "items": {
            "$ref": "#/definitions/WorkingHoursApiModel"
          },
          "type": "array"
        },
        "firstStartTime": {
          "description": "The first start time (first entry)",
          "format": "date-time",
          "type": "string"
        },
        "firstStartTimeIsPreviousThanRequestedDate": {
          "description": "Returns if the first start time is previous than the requested date (the register starts before the requested date)",
          "type": "boolean"
        },
        "lastEndTime": {
          "description": "The last end time (last entry)",
          "format": "date-time",
          "type": "string"
        },
        "lastEndTimeIsLaterThanRequestedDate": {
          "description": "Returns if the last end time is later than the requested date (the register ends after the requested date)",
          "type": "boolean"
        },
        "requestedDate": {
          "description": "The requested date",
          "format": "date-time",
          "type": "string"
        },
        "stopsNumber": {
          "description": "The number of stops (pauses for rest) of the day",
          "format": "int32",
          "type": "integer"
        },
        "totalWorkedTimeInMinutes": {
          "description": "Returns the worked time in minutes",
          "format": "double",
          "type": "number"
        },
        "unclosedEntries": {
          "description": "The unclosed entries",
          "format": "int32",
          "type": "integer"
        },
        "userEmail": {
          "description": "The user email",
          "type": "string"
        },
        "userId": {
          "description": "The user id",
          "format": "int64",
          "type": "integer"
        },
        "workedHours": {
          "description": "Total worked hours",
          "format": "double",
          "type": "number"
        },
        "workedMinutes": {
          "description": "Total worked minutes",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "WorkingHoursApiModel": {
      "description": "Defines the information for a product",
      "properties": {
        "companyId": {
          "description": "The company under which working hour has been registered.",
          "format": "int64",
          "type": "integer"
        },
        "deletedByUserId": {
          "description": "The user that marked the time entry as deleted.",
          "format": "int64",
          "type": "integer"
        },
        "deletedTime": {
          "description": "The time when the entry was marked for deletion.",
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "The working hour description.",
          "type": "string"
        },
        "employeeName": {
          "description": "This should return the user name and surname. If the user has not filled his or her personal data yet, it will return the contact email.",
          "type": "string"
        },
        "endTime": {
          "description": "The local time time when a user ends a working period.",
          "format": "date-time",
          "type": "string"
        },
        "endTimeLogTime": {
          "description": "The time when a user logs the end of a working period.",
          "format": "date-time",
          "type": "string"
        },
        "endTimeLoggedByUserId": {
          "description": "The user that logs the end of a working period. Not necessarily the same user that actually worked.",
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "description": "The identifier of the working hour entry.",
          "format": "int64",
          "type": "integer"
        },
        "isDeleted": {
          "description": "Whether this entry is deleted or not at the logical level.",
          "type": "boolean"
        },
        "minutesWorkedPerDay": {
          "description": "The minutes worked during the whole day (relative to the date part of the startTime field).\r\nIf you need the hours worked instead, just do the transformation on the client side.",
          "format": "int64",
          "type": "integer"
        },
        "startTime": {
          "description": "The local time time when a user starts a working period.",
          "format": "date-time",
          "type": "string"
        },
        "startTimeLogTime": {
          "description": "The time when a user logs the start of a working period.",
          "format": "date-time",
          "type": "string"
        },
        "startTimeLoggedByUserId": {
          "description": "The user that logs the start of a working period. Not necessarily the same user that actually worked.",
          "format": "int64",
          "type": "integer"
        },
        "userId": {
          "description": "The user (conceptually an \"Employee\") that worked a certain start-to-end working time period (under a certain company).",
          "format": "int64",
          "type": "integer"
        },
        "utcEndTime": {
          "description": "The UTC time when a user ends a working period.",
          "format": "date-time",
          "type": "string"
        },
        "utcStartTime": {
          "description": "The UTC time when a user starts a working period.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkingHoursCreateStartTimeApiModel": {
      "description": "Defines the information for a user working hours start time registry.",
      "properties": {
        "description": {
          "description": "The working hour description.",
          "type": "string"
        },
        "startTime": {
          "description": "Only send the startTime value (in local time zone) when an admin or manager is registering a working hours start. \r\nIf a normal user sends a startime, set the value to null. If a value is sent being a normal user, it's ignored\r\nand the current server will be used.",
          "format": "date-time",
          "type": "string"
        },
        "userId": {
          "description": "The user (conceptually an \"Employee\") that worked a certain start-to-end working time period (under a certain company).",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "WorkingHoursEditApiModel": {
      "description": "Contains the information to edit a working hours register",
      "properties": {
        "description": {
          "description": "The working hour description.",
          "type": "string"
        },
        "endTime": {
          "description": "The time when a user ends a working period. If has value, the seconds are ignored and setted always to 00.",
          "format": "date-time",
          "type": "string"
        },
        "startTime": {
          "description": "The time when a user starts a working period. The seconds are ignored and setted always to 00.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkingHoursRegistryConfigurationApiModel": {
      "description": "Defines the information related with the WorkingHoursRegistry module configuration",
      "properties": {
        "maxWorkingDayHours": {
          "description": "Number of hours that a user can work in a single day.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "WorkingHoursReportEntryApiModel": {
      "description": "Class that contains a working hours entry with the information for these worked day",
      "properties": {
        "comments": {
          "description": "The comments",
          "type": "string"
        },
        "commentsCommaSeparated": {
          "description": "The comments in html format",
          "type": "string"
        },
        "commentsHtmlFormatted": {
          "description": "The comments formatted for html",
          "type": "string"
        },
        "dateRangeList": {
          "description": "A list of date ranges (start times and end times for the day)",
          "items": {
            "$ref": "#/definitions/WorkHoursReportDateRangeApiModel"
          },
          "type": "array"
        },
        "dateRangesCount": {
          "description": "The number of date ranges",
          "format": "int32",
          "type": "integer"
        },
        "dateRangesFormatted": {
          "description": "The date ranges list formatted",
          "type": "string"
        },
        "dayOfWeek": {
          "description": "The day of the week (Sunday starts at 0)",
          "format": "int32",
          "type": "integer"
        },
        "dayOfWeekName": {
          "description": "The day of the week name",
          "type": "string"
        },
        "hasUnclosedEntries": {
          "description": "Returns if exists unclosed entries",
          "type": "boolean"
        },
        "startTime": {
          "description": "The start time in local time zone",
          "format": "date-time",
          "type": "string"
        },
        "totalUnclosedEntries": {
          "description": "The total unclosed entries",
          "format": "int32",
          "type": "integer"
        },
        "totalWorkedHours": {
          "description": "The total worked hours",
          "format": "double",
          "type": "number"
        },
        "totalWorkedHoursAndMinutesShortFormatted": {
          "description": "The total worked hours and minutes in short format (Xh Xm)",
          "type": "string"
        },
        "utcStartTime": {
          "description": "The start time in UTC",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkingHoursSumDailyApiModel": {
      "description": "Transforms the data from UserWorkingHours individual entries to daily computed minutes worked for users.",
      "properties": {
        "employeeName": {
          "description": "The employee name (name + surname or contactEmail)",
          "type": "string"
        },
        "entries": {
          "description": "The list of the worked entries for the user",
          "items": {
            "$ref": "#/definitions/WorkingHoursReportEntryApiModel"
          },
          "type": "array"
        },
        "hasEntries": {
          "description": "Returns if the user has working hours entries between the selected dates",
          "type": "boolean"
        },
        "totalDays": {
          "description": "The total days",
          "format": "int32",
          "type": "integer"
        },
        "totalHours": {
          "description": "The total hours worked",
          "format": "double",
          "type": "number"
        },
        "totalHoursAndDaysFormatted": {
          "description": "The total hours and days summary string formatted",
          "type": "string"
        },
        "totalHoursMinutesAndDaysFormatted": {
          "description": "The total hours, minutes and days string formatted",
          "type": "string"
        },
        "totalUnclosedEntries": {
          "description": "The total unclosed entries",
          "format": "int32",
          "type": "integer"
        },
        "totalWorkedHoursAndMinutesShortFormatted": {
          "description": "The total worked hours and minutes short formatted",
          "type": "string"
        },
        "userId": {
          "description": "The ID of the user.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "WorkingHoursSumTotalApiModel": {
      "description": "Transforms the data from UserWorkingHours individual entries to computed hours and days worked for a user.",
      "properties": {
        "employeeName": {
          "description": "This should return the user name and surname. If the user has not filled his or her personal data yet, it will return the contact email.",
          "type": "string"
        },
        "totalDays": {
          "description": "The total computed days during the time period selected for the given user.",
          "format": "int64",
          "type": "integer"
        },
        "totalHours": {
          "description": "The total computed hours during the time period selected for the given user rounded to two decimal places.",
          "format": "double",
          "type": "number"
        },
        "totalUnclosedEntries": {
          "description": "The total unclosed entries during the time period selected for the given user.",
          "format": "int64",
          "type": "integer"
        },
        "totalWorkedHoursAndMinutesShortFormatted": {
          "description": "The total worked hours and minutes short formatted",
          "type": "string"
        },
        "userId": {
          "description": "The user id",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "WorkingHoursSummaryCurrentDayApiModel": {
      "description": "Contains the summary of the worked hours for the current day",
      "properties": {
        "totalWorkedHours": {
          "description": "The total worked hours for the current day",
          "format": "int32",
          "type": "integer"
        },
        "totalWorkedMinutes": {
          "description": "The total worked minutes for the current day",
          "format": "int32",
          "type": "integer"
        },
        "workingHoursEntries": {
          "description": "The list of the working hours entries",
          "items": {
            "$ref": "#/definitions/WorkingHoursApiModel"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WorkingHoursUpdateEndTimeApiModel": {
      "description": "Defines the information for a user working hours end time registry.",
      "properties": {
        "description": {
          "description": "The working hour description.",
          "type": "string"
        },
        "endTime": {
          "description": "Only send the endTime value (in local time zone) when an admin or manager is registering a working hours start. \r\nIf a normal user sends an endTime, set the value to null. If a value is sent being a normal user, it's ignored\r\nand the current server will be used.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "host": "api.contasimple.com",
  "info": {
    "title": "Contasimple API",
    "version": "v2"
  },
  "paths": {
    "/api/v{version}/WorkHoursRegister": {
      "get": {
        "consumes": [],
        "operationId": "WorkHoursRegister_Get",
        "parameters": [
          {
            "description": "The index from where we want to start showing the working hours entries, useful for pagination. Default is 0.",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The maximum number of working hour entries to show, to use also in pagination. This call must be paginated, values of zero are not allowed.",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[WorkingHoursApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Get all working hours for the current company.",
        "tags": [
          "Working Hours"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "WorkHoursRegister_Create",
        "parameters": [
          {
            "description": "The corresponding API Model which defines the information to send to the API.",
            "in": "body",
            "name": "workingHours",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkingHoursCreateStartTimeApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[WorkingHoursApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new workingHours entry.",
        "tags": [
          "Working Hours"
        ]
      }
    },
    "/api/v{version}/WorkHoursRegister/GetLastUnclosedEntryForCurrentWorkingDay/{userId}": {
      "get": {
        "consumes": [],
        "operationId": "WorkHoursRegister_GetLastUnclosedEntryForCurrentWorkingDay",
        "parameters": [
          {
            "description": "The identifier of the user for whom we want to retrieve the time entries.",
            "format": "int64",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[WorkingHoursApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the last unclosed entry for a given user for the latest 12h of the current working day.",
        "tags": [
          "Working Hours"
        ]
      }
    },
    "/api/v{version}/WorkHoursRegister/GetLatestOpenEntryForSpecificDay/{userId}": {
      "get": {
        "consumes": [],
        "operationId": "WorkHoursRegister_GetLatestOpenEntryForSpecificDay",
        "parameters": [
          {
            "description": "The identifier of the user for whom we want to retrieve the time entries.",
            "format": "int64",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The requested date to obtain the last unclosed entry.",
            "format": "date-time",
            "in": "query",
            "name": "requestedDate",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[WorkingHoursApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the last unclosed entry for a given user for the latest 12h if the day passed as parameter is today.\r\nFor other days, gets the last unclosed entry for the whole day.\r\nThis method only can be used by company admins, company managers or company users as managers.",
        "tags": [
          "Working Hours"
        ]
      }
    },
    "/api/v{version}/WorkHoursRegister/GetReport": {
      "get": {
        "consumes": [],
        "operationId": "WorkHoursRegister_GetReport",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[WorkingHoursSumTotalApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Get the total computed working hours and days for a certain user or all users.\r\nWorkingHoursSumTotalFilter defines possible filters for this API method.\r\nA user only can get the report if its company role is 'CompanyAdmin'.",
        "tags": [
          "Working Hours"
        ]
      }
    },
    "/api/v{version}/WorkHoursRegister/GetReportExtended": {
      "get": {
        "consumes": [],
        "operationId": "WorkHoursRegister_GetReportExtended",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[WorkingHoursSumDailyApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Get the total computed working hours/day\r\nA user only can get the report if its company role is 'CompanyAdmin'.",
        "tags": [
          "Working Hours"
        ]
      }
    },
    "/api/v{version}/WorkHoursRegister/GetReportForSignature": {
      "get": {
        "consumes": [],
        "operationId": "WorkHoursRegister_GetReportForSignature",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[WorkingHoursSumDailyApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Get the total computed working hours/day for signature.",
        "tags": [
          "Working Hours"
        ]
      }
    },
    "/api/v{version}/WorkHoursRegister/GetWorkHoursForCurrentDay": {
      "get": {
        "consumes": [],
        "operationId": "WorkHoursRegister_GetWorkHoursForCurrentDay",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[WorkingHoursSummaryCurrentDayApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the working hours summary for the current working day and user (a list with the work hours entries and the total worked hours and minutes).",
        "tags": [
          "Working Hours"
        ]
      }
    },
    "/api/v{version}/WorkHoursRegister/GetWorkHoursOverviewForSpecificDay": {
      "get": {
        "consumes": [],
        "operationId": "WorkHoursRegister_GetWorkHoursOverviewSpecificDay",
        "parameters": [
          {
            "description": "The requested day to get the overview.",
            "format": "date-time",
            "in": "query",
            "name": "requestedDate",
            "required": true,
            "type": "string"
          },
          {
            "description": "Indicates if the individual entries of the day for every user must be returned.",
            "in": "query",
            "name": "getIndividualEntries",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[WorkHoursSummaryDayOverviewApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets a working hours overview for the day passed as parameter.",
        "tags": [
          "Working Hours"
        ]
      }
    },
    "/api/v{version}/WorkHoursRegister/editEntry/{workingHoursId}": {
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "WorkHoursRegister_Edit",
        "parameters": [
          {
            "description": "The id of the workingHours entry that we want to edit.",
            "format": "int64",
            "in": "path",
            "name": "workingHoursId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A WorkingHoursEditApiModel filled with the data as we wanted it to be edit.",
            "in": "body",
            "name": "workingHours",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkingHoursEditApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[WorkingHoursApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Edits a working hours entry.",
        "tags": [
          "Working Hours"
        ]
      }
    },
    "/api/v{version}/WorkHoursRegister/{workingHoursId}": {
      "delete": {
        "consumes": [],
        "operationId": "WorkHoursRegister_Delete",
        "parameters": [
          {
            "description": "The id of the workingHours entry that we want to delete.",
            "format": "int64",
            "in": "path",
            "name": "workingHoursId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes a workingHours entry (soft delete by boolean field).",
        "tags": [
          "Working Hours"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "WorkHoursRegister_Get",
        "parameters": [
          {
            "description": "The identifier of the working hours entry to retrieve.",
            "format": "int64",
            "in": "path",
            "name": "workingHoursId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[WorkingHoursApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Get working hours entry by id.",
        "tags": [
          "Working Hours"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "WorkHoursRegister_Update",
        "parameters": [
          {
            "description": "The id of the workingHours entry that we want to update.",
            "format": "int64",
            "in": "path",
            "name": "workingHoursId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A WorkingHoursApiModel filled with the data as we wanted it to be updated.",
            "in": "body",
            "name": "workingHours",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkingHoursUpdateEndTimeApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[WorkingHoursApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates a new workingHours entry",
        "tags": [
          "Working Hours"
        ]
      }
    },
    "/api/v{version}/accounting/accountingPeriodMaintenance": {
      "get": {
        "consumes": [],
        "operationId": "AccountingPeriodMaintenance_List",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[AccountingPeriodMaintenanceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of expenses for the current company",
        "tags": [
          "Accounting - Period maintenance"
        ]
      }
    },
    "/api/v{version}/accounting/accountingPeriodMaintenance/{period}": {
      "get": {
        "consumes": [],
        "operationId": "AccountingPeriodMaintenance_Get",
        "parameters": [
          {
            "description": "The period to retrieve",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[AccountingPeriodMaintenanceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the information of the given period",
        "tags": [
          "Accounting - Period maintenance"
        ]
      }
    },
    "/api/v{version}/accounting/accountingPeriodMaintenance/{period}/close": {
      "post": {
        "consumes": [],
        "operationId": "AccountingPeriodMaintenance_ClosePeriod",
        "parameters": [
          {
            "description": "The period to close",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[AccountingPeriodMaintenanceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Closes the given period",
        "tags": [
          "Accounting - Period maintenance"
        ]
      }
    },
    "/api/v{version}/accounting/accountingPeriodMaintenance/{period}/open": {
      "post": {
        "consumes": [],
        "operationId": "AccountingPeriodMaintenance_OpenPeriod",
        "parameters": [
          {
            "description": "The period to open",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[String]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Opens the given period",
        "tags": [
          "Accounting - Period maintenance"
        ]
      }
    },
    "/api/v{version}/accounting/deliveryNotes": {
      "get": {
        "consumes": [],
        "operationId": "AccountingDeliveryNotes_List",
        "parameters": [
          {
            "description": "The index from where start to show delivery notes.",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Maximum number of delivery notes shown.",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[DeliveryNoteApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of delivery notes for the current company",
        "tags": [
          "Accounting - Delivery notes"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingDeliveryNotes_CreateDeliveryNote",
        "parameters": [
          {
            "description": "The information for the delivery note to create",
            "in": "body",
            "name": "deliveryNote",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDeliveryNoteApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DeliveryNoteApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new delivery note",
        "tags": [
          "Accounting - Delivery notes"
        ]
      }
    },
    "/api/v{version}/accounting/deliveryNotes/nextDeliveryNoteNumber": {
      "get": {
        "consumes": [],
        "operationId": "AccountingDeliveryNotes_GetNextDeliveryNoteNumber",
        "parameters": [
          {
            "description": "The mask to use for generating the number. If null the default one is used.",
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[String]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the next delivery note number",
        "tags": [
          "Accounting - Delivery notes"
        ]
      }
    },
    "/api/v{version}/accounting/deliveryNotes/{deliveryNoteId}": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingDeliveryNotes_DeleteDeliveryNote",
        "parameters": [
          {
            "description": "The delivery note identifier to remove",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes the given delivery note",
        "tags": [
          "Accounting - Delivery notes"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingDeliveryNotes_Get",
        "parameters": [
          {
            "description": "The identifier of the delivery note to retrieve",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DeliveryNoteApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the delivery note information for the given delivery note id",
        "tags": [
          "Accounting - Delivery notes"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingDeliveryNotes_UpdateDeliveryNote",
        "parameters": [
          {
            "description": "The delivery note identifier to update",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The delivery note information",
            "in": "body",
            "name": "deliveryNote",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDeliveryNoteApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DeliveryNoteApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given delivery note",
        "tags": [
          "Accounting - Delivery notes"
        ]
      }
    },
    "/api/v{version}/accounting/deliveryNotes/{deliveryNoteId}/attach": {
      "post": {
        "consumes": [],
        "operationId": "AccountingDeliveryNotes_Attach",
        "parameters": [
          {
            "description": "The identifier of the delivery note to attach files to",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Attaches a file or files to the given delivery note",
        "tags": [
          "Accounting - Delivery notes"
        ]
      }
    },
    "/api/v{version}/accounting/deliveryNotes/{deliveryNoteId}/attachments": {
      "get": {
        "consumes": [],
        "operationId": "AccountingDeliveryNotes_Attachments",
        "parameters": [
          {
            "description": "The identifier of the delivery note to attach files to",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the list of attachments of this delivery note",
        "tags": [
          "Accounting - Delivery notes"
        ]
      }
    },
    "/api/v{version}/accounting/deliveryNotes/{deliveryNoteId}/pdf": {
      "get": {
        "consumes": [],
        "operationId": "AccountingDeliveryNotes_Pdf",
        "parameters": [
          {
            "description": "The identifier of the delivery note to retrieve",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Downloads the PDF for the given delivery note",
        "tags": [
          "Accounting - Delivery notes"
        ]
      }
    },
    "/api/v{version}/accounting/deliveryNotes/{deliveryNoteId}/relatedEstimate": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingDeliveryNotesRelatedDocuments_DeleteRelatedEstimate",
        "parameters": [
          {
            "description": "The identifier of the delivery note to delete the related estimate",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the delivery note related estimate",
        "tags": [
          "Accounting - Delivery notes - Related documents"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingDeliveryNotesRelatedDocuments_GetRelatedEstimate",
        "parameters": [
          {
            "description": "The identifier of the delivery note to retrieve the related estimate",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EstimateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the estimate related to the requested delivery note id",
        "tags": [
          "Accounting - Delivery notes - Related documents"
        ]
      }
    },
    "/api/v{version}/accounting/deliveryNotes/{deliveryNoteId}/relatedEstimate/{estimateId}": {
      "post": {
        "consumes": [],
        "operationId": "AccountingDeliveryNotesRelatedDocuments_UpdateRelatedEstimate",
        "parameters": [
          {
            "description": "The identifier of the delivery note to update the related estimate",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The identifier of the estimate to attach",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EstimateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the delivery note related estimate",
        "tags": [
          "Accounting - Delivery notes - Related documents"
        ]
      }
    },
    "/api/v{version}/accounting/deliveryNotes/{deliveryNoteId}/relatedInvoices": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingDeliveryNotesRelatedDocuments_DeleteRelatedInvoices",
        "parameters": [
          {
            "description": "The identifier of the delivery note to delete the related invoices",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the delivery note related invoices",
        "tags": [
          "Accounting - Delivery notes - Related documents"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingDeliveryNotesRelatedDocuments_GetRelatedInvoices",
        "parameters": [
          {
            "description": "The identifier of the delivery note to retrieve the related invoices",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the invoices related to the requested delivery note id",
        "tags": [
          "Accounting - Delivery notes - Related documents"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingDeliveryNotesRelatedDocuments_UpdateRelatedInvoices",
        "parameters": [
          {
            "description": "The identifier of the delivery note to assign the invoices",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The list of invoice identifiers",
            "in": "body",
            "name": "invoices",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceIdentifiersListApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Assigns the list of invoices to the given delivery note.\r\nDoes not remove current assigned invoices.",
        "tags": [
          "Accounting - Delivery notes - Related documents"
        ]
      }
    },
    "/api/v{version}/accounting/deliveryNotes/{deliveryNoteId}/relatedInvoices/{invoiceId}": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingDeliveryNotesRelatedDocuments_DeleteRelatedInvoices",
        "parameters": [
          {
            "description": "The identifier of the delivery note to delete the related invoice",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The identifier of the invoice to remove",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the relation between the given delivery note and invoice",
        "tags": [
          "Accounting - Delivery notes - Related documents"
        ]
      }
    },
    "/api/v{version}/accounting/deliveryNotes/{deliveryNoteId}/send": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingDeliveryNotes_Send",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendDocumentApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Sends the delivery note by email",
        "tags": [
          "Accounting - Delivery notes"
        ]
      }
    },
    "/api/v{version}/accounting/deliveryNotes/{deliveryNoteId}/status": {
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingDeliveryNotes_ChangeDeliveryNoteStatus",
        "parameters": [
          {
            "description": "The delivery note identifier to update",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The new delivery note status",
            "in": "body",
            "name": "status",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryNoteStatusApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DeliveryNoteApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given delivery note status",
        "tags": [
          "Accounting - Delivery notes"
        ]
      }
    },
    "/api/v{version}/accounting/estimates": {
      "get": {
        "consumes": [],
        "operationId": "AccountingEstimates_List",
        "parameters": [
          {
            "description": "The index from where start to show estimates.",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Maximum number of estimates shown.",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[EstimateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of estimates for the current company",
        "tags": [
          "Accounting - Estimates"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingEstimates_CreateEstimate",
        "parameters": [
          {
            "description": "The information for the estimate to create",
            "in": "body",
            "name": "estimate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEstimateApiModel"
            }
          },
          {
            "description": "Bypass the duplicate estimate check by estimate number, provider and year",
            "in": "query",
            "name": "bypassEstimateDuplicateValidation",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EstimateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new estimate",
        "tags": [
          "Accounting - Estimates"
        ]
      }
    },
    "/api/v{version}/accounting/estimates/nextEstimateNumber": {
      "get": {
        "consumes": [],
        "operationId": "AccountingEstimates_GetNextEstimateNumber",
        "parameters": [
          {
            "description": "The mask to use for generating the number. If null the default one is used.",
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[String]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the next estimate number",
        "tags": [
          "Accounting - Estimates"
        ]
      }
    },
    "/api/v{version}/accounting/estimates/{estimateId}": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingEstimates_DeleteEstimate",
        "parameters": [
          {
            "description": "The estimate identifier to remove",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes the given estimate",
        "tags": [
          "Accounting - Estimates"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingEstimates_Get",
        "parameters": [
          {
            "description": "The identifier of the estimate to retrieve",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EstimateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the estimate information for the given estimate id",
        "tags": [
          "Accounting - Estimates"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingEstimates_UpdateEstimate",
        "parameters": [
          {
            "description": "The estimate identifier to update",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The estimate information",
            "in": "body",
            "name": "estimate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateEstimateApiModel"
            }
          },
          {
            "description": "Bypass the duplicate estimate check by estimate number, provider and year. Default to false.",
            "in": "query",
            "name": "bypassEstimateDuplicateValidation",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EstimateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given estimate",
        "tags": [
          "Accounting - Estimates"
        ]
      }
    },
    "/api/v{version}/accounting/estimates/{estimateId}/attach": {
      "post": {
        "consumes": [],
        "operationId": "AccountingEstimates_Attach",
        "parameters": [
          {
            "description": "The identifier of the estimate to attach files to",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Attaches a file or files to the given estimate",
        "tags": [
          "Accounting - Estimates"
        ]
      }
    },
    "/api/v{version}/accounting/estimates/{estimateId}/attachments": {
      "get": {
        "consumes": [],
        "operationId": "AccountingEstimates_Attachments",
        "parameters": [
          {
            "description": "The identifier of the estimate to attach files to",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the list of attachments of this estimate",
        "tags": [
          "Accounting - Estimates"
        ]
      }
    },
    "/api/v{version}/accounting/estimates/{estimateId}/pdf": {
      "get": {
        "consumes": [],
        "operationId": "AccountingEstimates_Pdf",
        "parameters": [
          {
            "description": "The identifier of the estimate to retrieve",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Downloads the PDF for the given estimate",
        "tags": [
          "Accounting - Estimates"
        ]
      }
    },
    "/api/v{version}/accounting/estimates/{estimateId}/relatedDeliveryNotes": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingEstimatesRelatedDocuments_DeleteRelatedDeliveryNotes",
        "parameters": [
          {
            "description": "The identifier of the estimate to delete the related delivery notes",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the estimate related delivery notes",
        "tags": [
          "Accounting - Estimates - Related documents"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingEstimatesRelatedDocuments_GetRelatedDeliveryNotes",
        "parameters": [
          {
            "description": "The identifier of the estimate to retrieve the related delivery notes",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[DeliveryNoteApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the delivery notes related to the requested estimate id",
        "tags": [
          "Accounting - Estimates - Related documents"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingEstimatesRelatedDocuments_UpdateRelatedDeliveryNotes",
        "parameters": [
          {
            "description": "The identifier of the estimate to assign the related delivery notes",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The list of delivery note identifiers",
            "in": "body",
            "name": "deliveryNotes",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryNoteIdentifiersListApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[DeliveryNoteApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Assigns the list of delivery notes to the given estimate.\r\nDoes not remove current assigned delivery notes.",
        "tags": [
          "Accounting - Estimates - Related documents"
        ]
      }
    },
    "/api/v{version}/accounting/estimates/{estimateId}/relatedDeliveryNotes/{deliveryNoteId}": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingEstimatesRelatedDocuments_DeleteRelatedDeliveryNote",
        "parameters": [
          {
            "description": "The identifier of the estimate to delete the related delivery note",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The identifier of the delivery note to remove",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the relation between the given estimate and delivery note",
        "tags": [
          "Accounting - Estimates - Related documents"
        ]
      }
    },
    "/api/v{version}/accounting/estimates/{estimateId}/relatedInvoices": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingEstimatesRelatedDocuments_DeleteRelatedInvoices",
        "parameters": [
          {
            "description": "The identifier of the estimate to delete the related invoices",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the estimate related invoices",
        "tags": [
          "Accounting - Estimates - Related documents"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingEstimatesRelatedDocuments_GetRelatedInvoices",
        "parameters": [
          {
            "description": "The identifier of the estimate to retrieve the related invoices",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the invoices related to the requested estimate id",
        "tags": [
          "Accounting - Estimates - Related documents"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingEstimatesRelatedDocuments_UpdateRelatedInvoices",
        "parameters": [
          {
            "description": "The identifier of the estimate to assign the invoices",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The list of invoice identifiers",
            "in": "body",
            "name": "invoices",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceIdentifiersListApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Assigns the list of invoices to the given estimate.\r\nDoes not remove current assigned invoices.",
        "tags": [
          "Accounting - Estimates - Related documents"
        ]
      }
    },
    "/api/v{version}/accounting/estimates/{estimateId}/relatedInvoices/{invoiceId}": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingEstimatesRelatedDocuments_DeleteRelatedInvoices",
        "parameters": [
          {
            "description": "The identifier of the estimate to delete the related invoice",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The identifier of the invoice to remove",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the relation between the given estimate and invoice",
        "tags": [
          "Accounting - Estimates - Related documents"
        ]
      }
    },
    "/api/v{version}/accounting/estimates/{estimateId}/send": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingEstimates_Send",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendDocumentApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Sends the estimate by email",
        "tags": [
          "Accounting - Estimates"
        ]
      }
    },
    "/api/v{version}/accounting/estimates/{estimateId}/status": {
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingEstimates_ChangeEstimateStatus",
        "parameters": [
          {
            "description": "The estimate identifier to update",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The new estimate status",
            "in": "body",
            "name": "status",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstimateStatusApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EstimateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given estimate",
        "tags": [
          "Accounting - Estimates"
        ]
      }
    },
    "/api/v{version}/accounting/export/a3": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingExportA_RequestA3Export",
        "parameters": [
          {
            "in": "body",
            "name": "exportRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportA3RequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ExportA3TaskApiModel]"
            }
          }
        },
        "summary": "Requests a new A3 export",
        "tags": [
          "Accounting - Export"
        ]
      }
    },
    "/api/v{version}/accounting/invoices/deliveryNoteLinesToInvoiceLines": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesCommon_DeliveryNoteLinesToInvoiceLines",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "A list of delivery note ids",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "deliveryNotesList.deliveryNoteId",
            "required": false,
            "type": "array"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[InvoiceLineApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the lines of the delivery notes passed as parameter converted to invoice lines. For each delivery note, its lines are grouped by taxes when\r\nthe user has configured the option \"group delivery note lines at delivery notes invoicing\". If the option is disabled, returns the lines converted\r\n\"line by line\".",
        "tags": [
          "Accounting - Delivery notes"
        ]
      }
    },
    "/api/v{version}/accounting/invoices/search/number": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesCommon_SearchByNumber",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Searches the invoices with the given number",
        "tags": [
          "Accounting - Invoices - Common"
        ]
      }
    },
    "/api/v{version}/accounting/invoices/{invoiceId}": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesCommon_Get",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the entity information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Common"
        ]
      }
    },
    "/api/v{version}/accounting/invoices/{invoiceId}/attach": {
      "post": {
        "consumes": [],
        "operationId": "AccountingInvoicesCommon_Attach",
        "parameters": [
          {
            "description": "The identifier of the invoice to attach files to",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Attaches a file or files to the given invoice",
        "tags": [
          "Accounting - Invoices - Common"
        ]
      }
    },
    "/api/v{version}/accounting/invoices/{invoiceId}/attachments": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesCommon_Attachments",
        "parameters": [
          {
            "description": "The identifier of the invoice to attach files to",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the list of attachments of this invoice",
        "tags": [
          "Accounting - Invoices - Common"
        ]
      }
    },
    "/api/v{version}/accounting/invoices/{invoiceId}/payments": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesCommonPayments_GetPayments",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve the payments",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[DocumentPaymentApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the payments information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Common - Payments"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingInvoicesCommonPayments_CreatePayment",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve the payments",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the payment",
            "in": "body",
            "name": "payment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoicePaymentRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DocumentPaymentApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the payments information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Common - Payments"
        ]
      }
    },
    "/api/v{version}/accounting/invoices/{invoiceId}/payments/downloadReceipt/{invoicePaymentId}": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesCommonPayments_DownloadItem",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "format": "int64",
            "in": "path",
            "name": "invoicePaymentId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Downloads the PDF for the given payment",
        "tags": [
          "Accounting - Invoices - Common - Payments"
        ]
      }
    },
    "/api/v{version}/accounting/invoices/{invoiceId}/payments/{invoicePaymentId}": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingInvoicesCommonPayments_DeletePayment",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve the payments",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The identifier of the invoice payment to remove",
            "format": "int64",
            "in": "path",
            "name": "invoicePaymentId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the payments information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Common - Payments"
        ]
      }
    },
    "/api/v{version}/accounting/invoices/{invoiceId}/pdf": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesCommon_Pdf",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Downloads the PDF for the given invoice",
        "tags": [
          "Accounting - Invoices - Common"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/expenses": {
      "get": {
        "consumes": [],
        "operationId": "AccountingExpenses_List",
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[ExpenseApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of expenses for the current company",
        "tags": [
          "Accounting - Expenses"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingExpenses_CreateExpense",
        "parameters": [
          {
            "description": "The period where to create the expense",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The expense information",
            "in": "body",
            "name": "expense",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateExpenseApiModel"
            }
          },
          {
            "description": "Bypass the duplicate expenses check by expense number, provider and year. Default to false.",
            "in": "query",
            "name": "bypassInvoiceDuplicateValidation",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ExpenseApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new expense with the given information",
        "tags": [
          "Accounting - Expenses"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/expenses/{expenseId}": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingExpenses_DeleteExpense",
        "parameters": [
          {
            "description": "The period where to create the expense",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The expense identifier to remove",
            "format": "int64",
            "in": "path",
            "name": "expenseId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "True to delete the certified files attached to the expense",
            "in": "query",
            "name": "deleteCertifiedFiles",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes the given expense",
        "tags": [
          "Accounting - Expenses"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingExpenses_Get",
        "parameters": [
          {
            "description": "The identifier of the expense to retrieve",
            "format": "int64",
            "in": "path",
            "name": "expenseId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ExpenseApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the expense information for the given expense id",
        "tags": [
          "Accounting - Expenses"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingExpenses_UpdateExpense",
        "parameters": [
          {
            "description": "The period where to update the expense",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The expense identifier to update",
            "format": "int64",
            "in": "path",
            "name": "expenseId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The expense information",
            "in": "body",
            "name": "expense",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateExpenseApiModel"
            }
          },
          {
            "description": "Bypass the duplicate expenses check by expense number, provider and year. Default to false.",
            "in": "query",
            "name": "bypassInvoiceDuplicateValidation",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given expense",
        "tags": [
          "Accounting - Expenses"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/expenses/{expenseId}/attach": {
      "post": {
        "consumes": [],
        "operationId": "AccountingExpenses_Attach",
        "parameters": [
          {
            "description": "The identifier of the expense to attach files to",
            "format": "int64",
            "in": "path",
            "name": "expenseId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Attaches a file or files to the given expense",
        "tags": [
          "Accounting - Expenses"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/expenses/{expenseId}/attachments": {
      "get": {
        "consumes": [],
        "operationId": "AccountingExpenses_Attachments",
        "parameters": [
          {
            "description": "The identifier of the entity to attach files to",
            "format": "int64",
            "in": "path",
            "name": "expenseId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the list of attachments of this expense",
        "tags": [
          "Accounting - Expenses"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/expenses/{expenseId}/certifiedAttachments": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingExpenses_DeleteCertifiedAttachments",
        "parameters": [
          {
            "description": "The identifier of the expense",
            "format": "int64",
            "in": "path",
            "name": "expenseId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes the certified attachments for the expense passed as parameter",
        "tags": [
          "Accounting - Expenses"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingExpenses_CertifiedAttachments",
        "parameters": [
          {
            "description": "The identifier of the expense",
            "format": "int64",
            "in": "path",
            "name": "expenseId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the list of certified attachments of this expense",
        "tags": [
          "Accounting - Expenses"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/expenses/{expenseId}/certify": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingExpenses_DetachCertification",
        "parameters": [
          {
            "description": "The identifier of the expense to remove the attachment from",
            "format": "int64",
            "in": "path",
            "name": "expenseId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Detaches the existing document certification. \r\nIf the expense does not have any document certification attached this method does nothing.",
        "tags": [
          "Accounting - Expenses"
        ]
      },
      "post": {
        "consumes": [],
        "operationId": "AccountingExpenses_Certify",
        "parameters": [
          {
            "description": "The identifier of the expense to attach the file to",
            "format": "int64",
            "in": "path",
            "name": "expenseId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Attaches a certified file to the given expense",
        "tags": [
          "Accounting - Expenses"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/amortized": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesAmortized_List",
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of received invoices for the current company",
        "tags": [
          "Accounting - Invoices - Amortized"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/amortized/operationTypes": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesAmortized_OperationTypes",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[OperationTypeApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of valid operation types for the invoice type",
        "tags": [
          "Accounting - Invoices - Amortized"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/amortized/{invoiceId}": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingInvoicesAmortized_DeleteInvoice",
        "parameters": [
          {
            "description": "The period where to create the invoice",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The invoice identifier to remove",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "True to delete the certified files attached to the invoice",
            "in": "query",
            "name": "deleteCertifiedFiles",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes the given invoice",
        "tags": [
          "Accounting - Invoices - Amortized"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesAmortized_Get",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the entity information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Amortized"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/amortized/{invoiceId}/attach": {
      "post": {
        "consumes": [],
        "operationId": "AccountingInvoicesAmortized_Attach",
        "parameters": [
          {
            "description": "The identifier of the invoice to attach files to",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Attaches a file or files to the given invoice",
        "tags": [
          "Accounting - Invoices - Amortized"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/amortized/{invoiceId}/attachments": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesAmortized_Attachments",
        "parameters": [
          {
            "description": "The identifier of the invoice to attach files to",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the list of attachments of this invoice",
        "tags": [
          "Accounting - Invoices - Amortized"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/amortized/{invoiceId}/certifiedAttachments": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingInvoicesAmortized_DeleteCertifiedAttachments",
        "parameters": [
          {
            "description": "The identifier of the invoice",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes the certified attachments for the invoice passed as parameter",
        "tags": [
          "Accounting - Invoices - Amortized"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesAmortized_CertifiedAttachments",
        "parameters": [
          {
            "description": "The identifier of the invoice",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the list of certified attachments of this invoice",
        "tags": [
          "Accounting - Invoices - Amortized"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/amortized/{invoiceId}/certify": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingInvoicesAmortized_DetachCertification",
        "parameters": [
          {
            "description": "The identifier of the invoice to remove the attachment from",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Detaches the existing document certification. \r\nIf the invoice does not have any document certification attached this method does nothing.",
        "tags": [
          "Accounting - Invoices - Amortized"
        ]
      },
      "post": {
        "consumes": [],
        "operationId": "AccountingInvoicesAmortized_Certify",
        "parameters": [
          {
            "description": "The identifier of the invoice to attach the file to",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Attaches a certified file to the given invoice",
        "tags": [
          "Accounting - Invoices - Amortized"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/amortized/{invoiceId}/payments": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesAmortizedPayments_GetPayments",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve the payments",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[DocumentPaymentApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the payments information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Amortized - Payments"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingInvoicesAmortizedPayments_CreatePayment",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve the payments",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the payment",
            "in": "body",
            "name": "payment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoicePaymentRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DocumentPaymentApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the payments information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Amortized - Payments"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/amortized/{invoiceId}/payments/{invoicePaymentId}": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingInvoicesAmortizedPayments_DeletePayment",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve the payments",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The identifier of the invoice payment to remove",
            "format": "int64",
            "in": "path",
            "name": "invoicePaymentId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the payments information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Amortized - Payments"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/amortized/{invoiceId}/restore": {
      "put": {
        "consumes": [],
        "operationId": "AccountingInvoicesAmortized_RestoreInvestmentGood",
        "parameters": [
          {
            "description": "The identifier of the invoice associated to the investment good",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Restores a investment good deleting the end date and recalculating all the amortization quotas.",
        "tags": [
          "Accounting - Invoices - Amortized"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssued_List",
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the issued invoices for the current company",
        "tags": [
          "Accounting - Invoices - Issued"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingInvoicesIssued_CreateInvoice",
        "parameters": [
          {
            "description": "The period where to create the invoice",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The invoice information",
            "in": "body",
            "name": "invoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateIssuedInvoiceApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new issued invoice",
        "tags": [
          "Accounting - Invoices - Issued"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued/nextInvoiceNumber": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssued_GetNextInvoiceNumber",
        "parameters": [
          {
            "description": "The period when to retrieve the invoice number",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The mask to use for generating the number. If null the default one is used.",
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          },
          {
            "description": "The invoice type to generate",
            "enum": [
              "Normal",
              "Rectifying"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[String]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the next invoice number",
        "tags": [
          "Accounting - Invoices - Issued"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued/operationTypes": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssued_OperationTypes",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[OperationTypeApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of valid operation types for the invoice type",
        "tags": [
          "Accounting - Invoices - Issued"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued/search/number": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssued_SearchByNumber",
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Searches the invoices with the given number",
        "tags": [
          "Accounting - Invoices - Issued"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued/{invoiceId}": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssued_DeleteInvoice",
        "parameters": [
          {
            "description": "The period where to create the invoice",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The invoice identifier to remove",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes the given invoice",
        "tags": [
          "Accounting - Invoices - Issued"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssued_Get",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the entity information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Issued"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingInvoicesIssued_UpdateInvoice",
        "parameters": [
          {
            "description": "The period where to create the invoice",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the invoice to update",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The invoice information",
            "in": "body",
            "name": "invoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateIssuedInvoiceApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates and issued invoice",
        "tags": [
          "Accounting - Invoices - Issued"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued/{invoiceId}/attach": {
      "post": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssued_Attach",
        "parameters": [
          {
            "description": "The identifier of the invoice to attach files to",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Attaches a file or files to the given invoice",
        "tags": [
          "Accounting - Invoices - Issued"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued/{invoiceId}/attachments": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssued_Attachments",
        "parameters": [
          {
            "description": "The identifier of the invoice to attach files to",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the list of attachments of this invoice",
        "tags": [
          "Accounting - Invoices - Issued"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued/{invoiceId}/payments": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssuedPayments_GetPayments",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve the payments",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[DocumentPaymentApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the payments information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Issued - Payments"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingInvoicesIssuedPayments_CreatePayment",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve the payments",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the payment",
            "in": "body",
            "name": "payment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoicePaymentRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DocumentPaymentApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the payments information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Issued - Payments"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued/{invoiceId}/payments/{invoicePaymentId}": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssuedPayments_DeletePayment",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve the payments",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The identifier of the invoice payment to remove",
            "format": "int64",
            "in": "path",
            "name": "invoicePaymentId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the payments information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Issued - Payments"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued/{invoiceId}/pdf": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssued_Pdf",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Downloads the PDF for the given invoice",
        "tags": [
          "Accounting - Invoices - Issued"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued/{invoiceId}/relatedDeliveryNotes": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssuedRelatedDocuments_DeleteRelatedDeliveryNotes",
        "parameters": [
          {
            "description": "The identifier of the invoice to delete the related delivery notes",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the invoice related delivery notes",
        "tags": [
          "Accounting - Invoices - Issued - Related documents"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssuedRelatedDocuments_GetRelatedDeliveryNotes",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve the related delivery notes",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[DeliveryNoteApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the delivery notes related to the requested invoice id",
        "tags": [
          "Accounting - Invoices - Issued - Related documents"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingInvoicesIssuedRelatedDocuments_UpdateRelatedDeliveryNotes",
        "parameters": [
          {
            "description": "The identifier of the invoice to assign the related delivery notes",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The list of delivery note identifiers",
            "in": "body",
            "name": "deliveryNotes",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryNoteIdentifiersListApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[DeliveryNoteApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Assigns the list of delivery notes to the given invoice.\r\nDoes not remove current assigned delivery notes.",
        "tags": [
          "Accounting - Invoices - Issued - Related documents"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued/{invoiceId}/relatedDeliveryNotes/{deliveryNoteId}": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssuedRelatedDocuments_DeleteRelatedDeliveryNote",
        "parameters": [
          {
            "description": "The identifier of the invoice to delete the related delivery note",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The identifier of the delivery note to remove",
            "format": "int64",
            "in": "path",
            "name": "deliveryNoteId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the relation between the given invoice and delivery note",
        "tags": [
          "Accounting - Invoices - Issued - Related documents"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued/{invoiceId}/relatedEstimate": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssuedRelatedDocuments_DeleteRelatedEstimate",
        "parameters": [
          {
            "description": "The identifier of the invoice to delete the related estimate",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the invoice related estimate",
        "tags": [
          "Accounting - Invoices - Issued - Related documents"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssuedRelatedDocuments_GetRelatedEstimate",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve the related estimate",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EstimateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the estimate related to the requested invoice id",
        "tags": [
          "Accounting - Invoices - Issued - Related documents"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued/{invoiceId}/relatedEstimate/{estimateId}": {
      "post": {
        "consumes": [],
        "operationId": "AccountingInvoicesIssuedRelatedDocuments_UpdateRelatedEstimate",
        "parameters": [
          {
            "description": "The identifier of the invoice to update the related estimate",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The identifier of the estimate to attach",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EstimateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the invoice related estimate",
        "tags": [
          "Accounting - Invoices - Issued - Related documents"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/issued/{invoiceId}/send": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingInvoicesIssued_Send",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendDocumentApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Sends the invoice by email",
        "tags": [
          "Accounting - Invoices - Issued"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/received": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesReceived_List",
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of received invoices for the current company",
        "tags": [
          "Accounting - Invoices - Received"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingInvoicesReceived_CreateInvoice",
        "parameters": [
          {
            "description": "The period where to create the invoice",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The invoice information",
            "in": "body",
            "name": "invoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateReceivedInvoiceApiModel"
            }
          },
          {
            "description": "Bypass the duplicate invoices check by invoice number, provider and year. Default to false.",
            "in": "query",
            "name": "bypassInvoiceDuplicateValidation",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new received invoice",
        "tags": [
          "Accounting - Invoices - Received"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/received/operationTypes": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesReceived_OperationTypes",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[OperationTypeApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of valid operation types for the invoice type",
        "tags": [
          "Accounting - Invoices - Received"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/received/search/number": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesReceived_SearchByNumber",
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Searches the invoices with the given number",
        "tags": [
          "Accounting - Invoices - Received"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/received/{invoiceId}": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingInvoicesReceived_DeleteInvoice",
        "parameters": [
          {
            "description": "The period where to create the invoice",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The invoice identifier to remove",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "True to delete the certified files attached to the invoice",
            "in": "query",
            "name": "deleteCertifiedFiles",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes the given invoice",
        "tags": [
          "Accounting - Invoices - Received"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesReceived_Get",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the entity information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Received"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingInvoicesReceived_UpdateInvoice",
        "parameters": [
          {
            "description": "The period where to create the invoice",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the invoice to update",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The invoice information",
            "in": "body",
            "name": "invoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateReceivedInvoiceApiModel"
            }
          },
          {
            "description": "Bypass the duplicate invoices check by invoice number, provider and year. Default to false.",
            "in": "query",
            "name": "bypassInvoiceDuplicateValidation",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates and issued invoice",
        "tags": [
          "Accounting - Invoices - Received"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/received/{invoiceId}/attach": {
      "post": {
        "consumes": [],
        "operationId": "AccountingInvoicesReceived_Attach",
        "parameters": [
          {
            "description": "The identifier of the invoice to attach files to",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Attaches a file or files to the given invoice",
        "tags": [
          "Accounting - Invoices - Received"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/received/{invoiceId}/attachments": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesReceived_Attachments",
        "parameters": [
          {
            "description": "The identifier of the invoice to attach files to",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the list of attachments of this invoice",
        "tags": [
          "Accounting - Invoices - Received"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/received/{invoiceId}/certifiedAttachments": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingInvoicesReceived_DeleteCertifiedAttachments",
        "parameters": [
          {
            "description": "The identifier of the invoice",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes the certified attachments for the invoice passed as parameter",
        "tags": [
          "Accounting - Invoices - Received"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesReceived_CertifiedAttachments",
        "parameters": [
          {
            "description": "The identifier of the invoice",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the list of certified attachments of this invoice",
        "tags": [
          "Accounting - Invoices - Received"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/received/{invoiceId}/certify": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingInvoicesReceived_DetachCertification",
        "parameters": [
          {
            "description": "The identifier of the invoice to remove the attachment from",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Detaches the existing document certification. \r\nIf the invoice does not have any document certification attached this method does nothing.",
        "tags": [
          "Accounting - Invoices - Received"
        ]
      },
      "post": {
        "consumes": [],
        "operationId": "AccountingInvoicesReceived_Certify",
        "parameters": [
          {
            "description": "The identifier of the invoice to attach the file to",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Attaches a certified file to the given invoice",
        "tags": [
          "Accounting - Invoices - Received"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/received/{invoiceId}/payments": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesReceivedPayments_GetPayments",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve the payments",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[DocumentPaymentApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the payments information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Received - Payments"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "AccountingInvoicesReceivedPayments_CreatePayment",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve the payments",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the payment",
            "in": "body",
            "name": "payment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoicePaymentRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DocumentPaymentApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the payments information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Received - Payments"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/received/{invoiceId}/payments/{invoicePaymentId}": {
      "delete": {
        "consumes": [],
        "operationId": "AccountingInvoicesReceivedPayments_DeletePayment",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve the payments",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The identifier of the invoice payment to remove",
            "format": "int64",
            "in": "path",
            "name": "invoicePaymentId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the payments information for the given invoice id",
        "tags": [
          "Accounting - Invoices - Received - Payments"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/invoices/received/{invoiceId}/pdf": {
      "get": {
        "consumes": [],
        "operationId": "AccountingInvoicesReceived_Pdf",
        "parameters": [
          {
            "description": "The identifier of the invoice to retrieve",
            "format": "int64",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Downloads the PDF for the given invoice",
        "tags": [
          "Accounting - Invoices - Received"
        ]
      }
    },
    "/api/v{version}/accounting/{period}/summary": {
      "get": {
        "consumes": [],
        "operationId": "AccountingSummary_Get",
        "parameters": [
          {
            "description": "The period to get the accounting summary for",
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[AccountingSummaryApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the accounting summary for the given period",
        "tags": [
          "Accounting - Summary"
        ]
      }
    },
    "/api/v{version}/administration/asynctasks/status": {
      "get": {
        "consumes": [],
        "operationId": "AdministrationAsyncTasks_Status",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[AsyncTasksStatusModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the status for the async tasks",
        "tags": [
          "Administration - Async tasks"
        ]
      }
    },
    "/api/v{version}/administration/brands": {
      "get": {
        "consumes": [],
        "operationId": "AdministrationBrands_Get",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[BrandApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of brands",
        "tags": [
          "Administration - Brands"
        ]
      }
    },
    "/api/v{version}/administration/cache": {
      "get": {
        "consumes": [],
        "operationId": "Administration_CacheCheck",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Dictionary[CacheModes,Boolean]]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the status for the server caches",
        "tags": [
          "Administration"
        ]
      }
    },
    "/api/v{version}/administration/cache/{mode}": {
      "delete": {
        "consumes": [],
        "operationId": "Administration_CacheClear",
        "parameters": [
          {
            "enum": [
              "Memory",
              "Redis",
              "All"
            ],
            "in": "path",
            "name": "mode",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Clears the given cache",
        "tags": [
          "Administration"
        ]
      }
    },
    "/api/v{version}/administration/check": {
      "get": {
        "consumes": [],
        "operationId": "Administration_Check",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[String]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Checks the general status of the API",
        "tags": [
          "Administration"
        ]
      }
    },
    "/api/v{version}/administration/domains": {
      "get": {
        "consumes": [],
        "operationId": "AdministrationDomains_Get",
        "parameters": [
          {
            "description": "Set to TRUE to return only internal domains",
            "in": "query",
            "name": "onlyInternal",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[DomainApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of domains",
        "tags": [
          "Administration - Domains"
        ]
      }
    },
    "/api/v{version}/administration/externalRegistrations": {
      "get": {
        "consumes": [],
        "operationId": "AdministrationBrands_Get",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[ExternalRegistrationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of external registrations",
        "tags": [
          "Administration - External registrations"
        ]
      }
    },
    "/api/v{version}/administration/externalRegistrations/resendEmailAlreadyInUse/{externalRegistrationId}": {
      "post": {
        "consumes": [],
        "operationId": "AdministrationBrands_ResendEmailAlreadyInUse",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "externalRegistrationId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Resend the email already in use email",
        "tags": [
          "Administration - External registrations"
        ]
      }
    },
    "/api/v{version}/apps/latests": {
      "get": {
        "consumes": [],
        "operationId": "AppVersions_GetAllAppsLatest",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[AppVersionApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the latest version of the given app identifier",
        "tags": [
          "Apps - Versions management"
        ]
      }
    },
    "/api/v{version}/apps/{platform}/{identifier}/all": {
      "get": {
        "consumes": [],
        "operationId": "AppVersions_GetAllAppVersions",
        "parameters": [
          {
            "enum": [
              "Android",
              "iOS",
              "WindowsDesktop",
              "WindowsStore"
            ],
            "in": "path",
            "name": "platform",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[AppVersionApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the versions of the given app identifier",
        "tags": [
          "Apps - Versions management"
        ]
      }
    },
    "/api/v{version}/apps/{platform}/{identifier}/check/{code}": {
      "get": {
        "consumes": [],
        "operationId": "AppVersions_Check",
        "parameters": [
          {
            "enum": [
              "Android",
              "iOS",
              "WindowsDesktop",
              "WindowsStore"
            ],
            "in": "path",
            "name": "platform",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "path",
            "name": "code",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[AppVersionApiModel]"
            }
          }
        },
        "summary": "Checks if there is a newer version for the given app and code",
        "tags": [
          "Apps - Versions management"
        ]
      }
    },
    "/api/v{version}/apps/{platform}/{identifier}/latest": {
      "get": {
        "consumes": [],
        "operationId": "AppVersions_GetAppLatest",
        "parameters": [
          {
            "enum": [
              "Android",
              "iOS",
              "WindowsDesktop",
              "WindowsStore"
            ],
            "in": "path",
            "name": "platform",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[AppVersionApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the latest version of the given app identifier",
        "tags": [
          "Apps - Versions management"
        ]
      }
    },
    "/api/v{version}/apps/{versionId}": {
      "delete": {
        "consumes": [],
        "operationId": "AppVersions_Delete",
        "parameters": [
          {
            "description": "The identifier of the version to remove",
            "format": "int64",
            "in": "path",
            "name": "versionId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the app version identifier",
        "tags": [
          "Apps - Versions management"
        ]
      }
    },
    "/api/v{version}/configuration": {
      "get": {
        "consumes": [],
        "operationId": "Configuration_GetConfiguration",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ConfigurationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the platform configuration",
        "tags": [
          "Configuration - Common"
        ]
      }
    },
    "/api/v{version}/configuration/account/apiAccess": {
      "get": {
        "consumes": [],
        "operationId": "ApiAccess_Get",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[ApiAccessApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of platforms that have access to my account",
        "tags": [
          "Configuration - Account - API access"
        ]
      }
    },
    "/api/v{version}/configuration/account/apiAccess/{apiClient}/allow": {
      "post": {
        "consumes": [],
        "operationId": "ApiAccess_AllowAccess",
        "parameters": [
          {
            "in": "path",
            "name": "apiClient",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[ApiAccessApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Allows access for the given API to the current user",
        "tags": [
          "Configuration - Account - API access"
        ]
      }
    },
    "/api/v{version}/configuration/account/apiAccess/{apiClient}/revoke": {
      "post": {
        "consumes": [],
        "operationId": "ApiAccess_RevokeAccess",
        "parameters": [
          {
            "in": "path",
            "name": "apiClient",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[ApiAccessApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Revokes access for the given API to the current user",
        "tags": [
          "Configuration - Account - API access"
        ]
      }
    },
    "/api/v{version}/configuration/account/authenticationKeys": {
      "get": {
        "consumes": [],
        "operationId": "ApiUserAuthenticationKey_GetList",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[ApiUserAuthenticationKeyApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of platforms that have access to my account",
        "tags": [
          "Configuration - Account - API authentication keys"
        ]
      }
    },
    "/api/v{version}/configuration/account/authenticationKeys/clients": {
      "get": {
        "consumes": [],
        "operationId": "ApiUserAuthenticationKey_GetDomains",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[ApiClientApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of domains wich allows creating authorization keys",
        "tags": [
          "Configuration - Account - API authentication keys"
        ]
      }
    },
    "/api/v{version}/configuration/account/authenticationKeys/{apiClientId}": {
      "post": {
        "consumes": [],
        "operationId": "ApiUserAuthenticationKey_Create",
        "parameters": [
          {
            "in": "path",
            "name": "apiClientId",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ApiUserAuthenticationKeyApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new auth token for accessing the API",
        "tags": [
          "Configuration - Account - API authentication keys"
        ]
      }
    },
    "/api/v{version}/configuration/account/authenticationKeys/{authenticationKey}/allow": {
      "post": {
        "consumes": [],
        "operationId": "ApiUserAuthenticationKey_AllowAccess",
        "parameters": [
          {
            "in": "path",
            "name": "authenticationKey",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ApiUserAuthenticationKeyApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Allows access with the given authentication key",
        "tags": [
          "Configuration - Account - API authentication keys"
        ]
      }
    },
    "/api/v{version}/configuration/account/authenticationKeys/{authenticationKey}/revoke": {
      "post": {
        "consumes": [],
        "operationId": "ApiUserAuthenticationKey_RevokeAccess",
        "parameters": [
          {
            "in": "path",
            "name": "authenticationKey",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ApiUserAuthenticationKeyApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Revokes access with the given authentication key",
        "tags": [
          "Configuration - Account - API authentication keys"
        ]
      }
    },
    "/api/v{version}/configuration/companyTypes": {
      "get": {
        "consumes": [],
        "operationId": "CompanyTypesConfiguration_GetCompanyTypes",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[CompanyTypeApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of company types",
        "tags": [
          "Configuration - Common"
        ]
      }
    },
    "/api/v{version}/configuration/companyTypes/{typeId}": {
      "get": {
        "consumes": [],
        "operationId": "CompanyTypesConfiguration_GetCompanyType",
        "parameters": [
          {
            "description": "The identifier of the type to retrieve",
            "format": "int64",
            "in": "path",
            "name": "typeId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[CompanyTypeApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the configuration for the type with the given ID",
        "tags": [
          "Configuration - Common"
        ]
      }
    },
    "/api/v{version}/configuration/countries": {
      "get": {
        "consumes": [],
        "operationId": "CountriesConfiguration_GetCountries",
        "parameters": [
          {
            "in": "query",
            "name": "all",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[CountryApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of countries",
        "tags": [
          "Configuration - Common"
        ]
      }
    },
    "/api/v{version}/configuration/countries/{countryId}": {
      "get": {
        "consumes": [],
        "operationId": "CountriesConfiguration_GetCountry",
        "parameters": [
          {
            "description": "The identifier of the country to retrieve",
            "format": "int64",
            "in": "path",
            "name": "countryId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[CountryApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the configuration for the country with the given ID",
        "tags": [
          "Configuration - Common"
        ]
      }
    },
    "/api/v{version}/configuration/electronicSignature": {
      "get": {
        "consumes": [],
        "operationId": "ElectronicSignatureConfiguration_Get",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ElectronicSignatureConfigurationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the company configuration for electronic signature",
        "tags": [
          "Configuration - Electronic signature"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "ElectronicSignatureConfiguration_Post",
        "parameters": [
          {
            "in": "body",
            "name": "signatureConfiguration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ElectronicSignatureRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ElectronicSignatureConfigurationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Sets the company configuration for electronic signature",
        "tags": [
          "Configuration - Electronic signature"
        ]
      }
    },
    "/api/v{version}/configuration/invoiceClasses/issued": {
      "get": {
        "consumes": [],
        "operationId": "InvoiceClassesConfiguration_GetIssuedInvoiceClasses",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[ClassItem]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of invoice classes for issued invoices",
        "tags": [
          "Configuration - Invoice classes"
        ]
      }
    },
    "/api/v{version}/configuration/invoiceClasses/received": {
      "get": {
        "consumes": [],
        "operationId": "InvoiceClassesConfiguration_GetReceivedInvoiceClasses",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[ClassItem]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of invoice classes for received invoices",
        "tags": [
          "Configuration - Invoice classes"
        ]
      }
    },
    "/api/v{version}/configuration/invoiceFooters": {
      "get": {
        "consumes": [],
        "operationId": "InvoiceFootersConfiguration_GetInvoiceFooters",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[InvoiceFooterApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets a paginated list of invoice footers for the current company",
        "tags": [
          "Configuration - Invoice footers"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "InvoiceFootersConfiguration_Post",
        "parameters": [
          {
            "description": "The information of the footer to create",
            "in": "body",
            "name": "footer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceFooterApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceFooterApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new invoice footer",
        "tags": [
          "Configuration - Invoice footers"
        ]
      }
    },
    "/api/v{version}/configuration/invoiceFooters/{footerId}": {
      "delete": {
        "consumes": [],
        "operationId": "InvoiceFootersConfiguration_Delete",
        "parameters": [
          {
            "description": "The identifier of the footer to remove",
            "format": "int64",
            "in": "path",
            "name": "footerId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the invoice footer with the given identifier",
        "tags": [
          "Configuration - Invoice footers"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "InvoiceFootersConfiguration_GetInvoiceFooter",
        "parameters": [
          {
            "description": "The identifier of the invoice footer to retrieve",
            "format": "int64",
            "in": "path",
            "name": "footerId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceFooterApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the information for the given invoice footer ID",
        "tags": [
          "Configuration - Invoice footers"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "InvoiceFootersConfiguration_Put",
        "parameters": [
          {
            "description": "The identifier of the footer to update",
            "format": "int64",
            "in": "path",
            "name": "footerId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the footer to update",
            "in": "body",
            "name": "footer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceFooterApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceFooterApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given invoice footer",
        "tags": [
          "Configuration - Invoice footers"
        ]
      }
    },
    "/api/v{version}/configuration/irpf": {
      "get": {
        "consumes": [],
        "operationId": "IrpfModesConfiguration_GetIrpfModes",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[IrpfModeApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of IRPF estimation modes",
        "tags": [
          "Configuration - Common"
        ]
      }
    },
    "/api/v{version}/configuration/irpf/{modeId}": {
      "get": {
        "consumes": [],
        "operationId": "IrpfModesConfiguration_GetIrpfMode",
        "parameters": [
          {
            "description": "The identifier of the mode to retrieve",
            "format": "int64",
            "in": "path",
            "name": "modeId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[IrpfModeApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the configuration for the mode with the given ID",
        "tags": [
          "Configuration - Common"
        ]
      }
    },
    "/api/v{version}/configuration/mail": {
      "get": {
        "consumes": [],
        "operationId": "MailConfiguration_GetConfiguration",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[MailConfigurationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the current company mail configuration",
        "tags": [
          "Configuration - Mail"
        ]
      }
    },
    "/api/v{version}/configuration/mailPresets": {
      "get": {
        "consumes": [],
        "operationId": "MailPresetsConfiguration_GetMailPresets",
        "parameters": [
          {
            "description": "Type pf document for the mail template. Could be \"Invoice\", \"Estimate\" or \"DeliveryNote\"",
            "enum": [
              "Invoice",
              "Estimate",
              "DeliveryNote"
            ],
            "in": "query",
            "name": "dependencyType",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[MailPresetsApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets a list of mail templates",
        "tags": [
          "Configuration - Mail"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "MailPresetsConfiguration_Post",
        "parameters": [
          {
            "description": "The information of the template to create",
            "in": "body",
            "name": "template",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MailPresetsApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[MailPresetsApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new mail template",
        "tags": [
          "Configuration - Mail"
        ]
      }
    },
    "/api/v{version}/configuration/mailPresets/{presetId}": {
      "get": {
        "consumes": [],
        "operationId": "MailPresetsConfiguration_GetMailPresetByID",
        "parameters": [
          {
            "description": "The identifier of the mail preset to retrieve",
            "format": "int64",
            "in": "path",
            "name": "presetId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[MailPresetsApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the information for the given mail template ID",
        "tags": [
          "Configuration - Mail"
        ]
      }
    },
    "/api/v{version}/configuration/mailPresets/{templateId}": {
      "delete": {
        "consumes": [],
        "operationId": "MailPresetsConfiguration_Delete",
        "parameters": [
          {
            "description": "The identifier of the mail template to remove",
            "format": "int64",
            "in": "path",
            "name": "templateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the mail template with the given identifier",
        "tags": [
          "Configuration - Mail"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "MailPresetsConfiguration_Put",
        "parameters": [
          {
            "description": "The identifier of the footer to update",
            "format": "int64",
            "in": "path",
            "name": "templateId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the footer to update",
            "in": "body",
            "name": "template",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MailPresetsApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[MailPresetsApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given mail template",
        "tags": [
          "Configuration - Mail"
        ]
      }
    },
    "/api/v{version}/configuration/mailPresets/{templateId}/setDefault": {
      "put": {
        "consumes": [],
        "operationId": "MailPresetsConfiguration_SetDefault",
        "parameters": [
          {
            "description": "The identifier of the footer to update",
            "format": "int64",
            "in": "path",
            "name": "templateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Set the given mail template as default",
        "tags": [
          "Configuration - Mail"
        ]
      }
    },
    "/api/v{version}/configuration/mailPresets/{templateId}/unsetDefault": {
      "put": {
        "consumes": [],
        "operationId": "MailPresetsConfiguration_UnsetDefault",
        "parameters": [
          {
            "description": "The identifier of the footer to update",
            "format": "int64",
            "in": "path",
            "name": "templateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Unset the given mail template as default. Returns true if the change has been done and false if the template was not default.",
        "tags": [
          "Configuration - Mail"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/deliveryNotes": {
      "get": {
        "consumes": [],
        "operationId": "DeliveryNoteNumberingFormats_List",
        "parameters": [
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[DeliveryNoteNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of delivery note numbering formats",
        "tags": [
          "Configuration - Numbering formats"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "DeliveryNoteNumberingFormats_Create",
        "parameters": [
          {
            "description": "The information of the numbering format to create",
            "in": "body",
            "name": "format",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryNoteNumberingFormatRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DeliveryNoteNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/deliveryNotes/{id}": {
      "delete": {
        "consumes": [],
        "operationId": "DeliveryNoteNumberingFormats_Delete",
        "parameters": [
          {
            "description": "The identifier of the numbering format to remove",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the information for the given numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "DeliveryNoteNumberingFormats_Get",
        "parameters": [
          {
            "description": "The identifier of the numbering format to retrieve",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DeliveryNoteNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the information for the given numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "DeliveryNoteNumberingFormats_Update",
        "parameters": [
          {
            "description": "The identifier of the numbering format to update",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the numbering format to update",
            "in": "body",
            "name": "format",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryNoteNumberingFormatRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DeliveryNoteNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates a numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/deliveryNotes/{id}/activate": {
      "put": {
        "consumes": [],
        "operationId": "DeliveryNoteNumberingFormats_Activate",
        "parameters": [
          {
            "description": "The identifier of the numbering format to set as activated",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DeliveryNoteNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Activates the numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/deliveryNotes/{id}/deactivate": {
      "put": {
        "consumes": [],
        "operationId": "DeliveryNoteNumberingFormats_Deactivate",
        "parameters": [
          {
            "description": "The identifier of the numbering format to set as deactivated",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DeliveryNoteNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deactivates the numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/deliveryNotes/{id}/setDefault": {
      "put": {
        "consumes": [],
        "operationId": "DeliveryNoteNumberingFormats_SetDefault",
        "parameters": [
          {
            "description": "The identifier of the numbering format to set as default",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DeliveryNoteNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Sets the default numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/estimates": {
      "get": {
        "consumes": [],
        "operationId": "EstimateNumberingFormats_List",
        "parameters": [
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[EstimateNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of estimate numbering formats",
        "tags": [
          "Configuration - Numbering formats"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "EstimateNumberingFormats_Create",
        "parameters": [
          {
            "description": "The information of the numbering format to create",
            "in": "body",
            "name": "format",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstimateNumberingFormatRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EstimateNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/estimates/{id}": {
      "delete": {
        "consumes": [],
        "operationId": "EstimateNumberingFormats_Delete",
        "parameters": [
          {
            "description": "The identifier of the numbering format to remove",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the information for the given numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "EstimateNumberingFormats_Get",
        "parameters": [
          {
            "description": "The identifier of the numbering format to retrieve",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EstimateNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the information for the given numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "EstimateNumberingFormats_Update",
        "parameters": [
          {
            "description": "The identifier of the numbering format to update",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the numbering format to update",
            "in": "body",
            "name": "format",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstimateNumberingFormatRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EstimateNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates a numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/estimates/{id}/activate": {
      "put": {
        "consumes": [],
        "operationId": "EstimateNumberingFormats_Activate",
        "parameters": [
          {
            "description": "The identifier of the numbering format to set as activated",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EstimateNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Activates the numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/estimates/{id}/deactivate": {
      "put": {
        "consumes": [],
        "operationId": "EstimateNumberingFormats_Deactivate",
        "parameters": [
          {
            "description": "The identifier of the numbering format to set as deactivated",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EstimateNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deactivates the numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/estimates/{id}/setDefault": {
      "put": {
        "consumes": [],
        "operationId": "EstimateNumberingFormats_SetDefault",
        "parameters": [
          {
            "description": "The identifier of the numbering format to set as default",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EstimateNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Sets the default numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/invoices": {
      "get": {
        "consumes": [],
        "operationId": "InvoiceNumberingFormats_List",
        "parameters": [
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[InvoiceNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of invoice numbering formats",
        "tags": [
          "Configuration - Numbering formats"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "InvoiceNumberingFormats_Create",
        "parameters": [
          {
            "description": "The information of the numbering format to create",
            "in": "body",
            "name": "format",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceNumberingFormatCreateRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/invoices/{id}": {
      "delete": {
        "consumes": [],
        "operationId": "InvoiceNumberingFormats_Delete",
        "parameters": [
          {
            "description": "The identifier of the numbering format to remove",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the information for the given numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "InvoiceNumberingFormats_Get",
        "parameters": [
          {
            "description": "The identifier of the numbering format to retrieve",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the information for the given numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "InvoiceNumberingFormats_Update",
        "parameters": [
          {
            "description": "The identifier of the numbering format to update",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the numbering format to update",
            "in": "body",
            "name": "format",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoiceNumberingFormatUpdateRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates a numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/invoices/{id}/activate": {
      "put": {
        "consumes": [],
        "operationId": "InvoiceNumberingFormats_Activate",
        "parameters": [
          {
            "description": "The identifier of the numbering format to set as activated",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Activates the numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/invoices/{id}/deactivate": {
      "put": {
        "consumes": [],
        "operationId": "InvoiceNumberingFormats_Deactivate",
        "parameters": [
          {
            "description": "The identifier of the numbering format to set as deactivated",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deactivates the numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/numberingFormats/invoices/{id}/setDefault": {
      "put": {
        "consumes": [],
        "operationId": "InvoiceNumberingFormats_SetDefault",
        "parameters": [
          {
            "description": "The identifier of the numbering format to set as default",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[InvoiceNumberingFormatApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Sets the default numbering format",
        "tags": [
          "Configuration - Numbering formats"
        ]
      }
    },
    "/api/v{version}/configuration/paymentMethods": {
      "get": {
        "consumes": [],
        "operationId": "PaymentMethodsConfiguration_GetPaymentMethods",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "includeInactive",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[PaymentMethodApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of payment methods",
        "tags": [
          "Configuration - Payment methods"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "PaymentMethodsConfiguration_Post",
        "parameters": [
          {
            "description": "The information of the method to create",
            "in": "body",
            "name": "method",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentMethodApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[PaymentMethodApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new payment method",
        "tags": [
          "Configuration - Payment methods"
        ]
      }
    },
    "/api/v{version}/configuration/paymentMethods/types": {
      "get": {
        "consumes": [],
        "operationId": "PaymentMethodsConfiguration_GetPaymentMethodsTypes",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[PaymentMethodTypeApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of payment methods types",
        "tags": [
          "Configuration - Payment methods"
        ]
      }
    },
    "/api/v{version}/configuration/paymentMethods/{methodId}": {
      "delete": {
        "consumes": [],
        "operationId": "PaymentMethodsConfiguration_Delete",
        "parameters": [
          {
            "description": "The identifier of the method to remove",
            "format": "int64",
            "in": "path",
            "name": "methodId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Bypass the remittance validation that checks \r\n            if any remittance receipt contains the payment method to delete. Default to false.",
            "in": "query",
            "name": "bypassRemittanceValidation",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the payment method with the given identifier",
        "tags": [
          "Configuration - Payment methods"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "PaymentMethodsConfiguration_GetPaymentMethod",
        "parameters": [
          {
            "description": "The identifier of the payment method to retrieve",
            "format": "int64",
            "in": "path",
            "name": "methodId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[PaymentMethodApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the information for the given payment method ID",
        "tags": [
          "Configuration - Payment methods"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "PaymentMethodsConfiguration_Put",
        "parameters": [
          {
            "description": "The identifier of the method to update",
            "format": "int64",
            "in": "path",
            "name": "methodId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the method to update",
            "in": "body",
            "name": "method",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentMethodApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[PaymentMethodApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given payment method",
        "tags": [
          "Configuration - Payment methods"
        ]
      }
    },
    "/api/v{version}/configuration/promotions/{code}": {
      "get": {
        "consumes": [],
        "operationId": "PromotionsConfiguration_Get",
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[String]"
            }
          }
        },
        "summary": "Gets the information for the given code",
        "tags": [
          "Configuration - Promotions"
        ]
      }
    },
    "/api/v{version}/configuration/retentionTypes": {
      "get": {
        "consumes": [],
        "operationId": "RetentionTypesConfiguration_GetRetentionTypes",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[RetentionTypeApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of retention types for the current company",
        "tags": [
          "Configuration - Retention types"
        ]
      }
    },
    "/api/v{version}/configuration/stockControl": {
      "get": {
        "consumes": [],
        "operationId": "StockControl_Get",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[StockControlConfigurationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the company stock control configuration",
        "tags": [
          "Configuration - Stock control"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "StockControl_Post",
        "parameters": [
          {
            "in": "body",
            "name": "stockControlConfiguration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StockControlRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[StockControlConfigurationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Sets the company stock control configuration",
        "tags": [
          "Configuration - Stock control"
        ]
      }
    },
    "/api/v{version}/configuration/stockControl/stockConfigurationForDocumentsAndProducts": {
      "get": {
        "consumes": [],
        "operationId": "StockControl_GetStockConfigurationForDocumentsAndProductsEnabled",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[StockForDocumentsAndProductsEnabledApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets if the stock control for documents is configured and if exists products with stock control enabled for the current company",
        "tags": [
          "Configuration - Stock control"
        ]
      }
    },
    "/api/v{version}/configuration/users/acceptInvitation/{invitationId}": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "UsersConfiguration_AcceptInvitation",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "invitationId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "invitationInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptInvitationRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Accepts an invitation to a company",
        "tags": [
          "Configuration - Users"
        ]
      }
    },
    "/api/v{version}/configuration/users/activateCompanyAccess/{userCompanyIdentifier}": {
      "put": {
        "consumes": [],
        "operationId": "UsersConfiguration_ActivateCompanyAccess",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "userCompanyIdentifier",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Activates the user access to the company into the user-company relation identifier",
        "tags": [
          "Configuration - Users"
        ]
      }
    },
    "/api/v{version}/configuration/users/companyUsers": {
      "get": {
        "consumes": [],
        "operationId": "UsersConfiguration_Get",
        "parameters": [
          {
            "format": "int64",
            "in": "query",
            "name": "companyId",
            "required": true,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[UserCompanyInfoApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets a paginated list of users related to the the specified company",
        "tags": [
          "Configuration - Users"
        ]
      }
    },
    "/api/v{version}/configuration/users/deactivateCompanyAccess/{userCompanyIdentifier}": {
      "put": {
        "consumes": [],
        "operationId": "UsersConfiguration_DeactivateCompanyAccess",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "userCompanyIdentifier",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deactivates the user access to the company into the user-company relation identifier",
        "tags": [
          "Configuration - Users"
        ]
      }
    },
    "/api/v{version}/configuration/users/deleteInvitation/{invitationId}": {
      "delete": {
        "consumes": [],
        "operationId": "UsersConfiguration_DeleteInvitation",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "invitationId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes a pending invitation",
        "tags": [
          "Configuration - Users"
        ]
      }
    },
    "/api/v{version}/configuration/users/editCompanyRole/{userCompanyIdentifier}": {
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "UsersConfiguration_EditRole",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "userCompanyIdentifier",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "editRoleInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditRoleRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[UpdateUserCompanyRoleApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Edits the user role into the user-company relation identifier",
        "tags": [
          "Configuration - Users"
        ]
      }
    },
    "/api/v{version}/configuration/users/invite": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "UsersConfiguration_Invite",
        "parameters": [
          {
            "in": "body",
            "name": "invitation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInvitationRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[UserInvitationResultsApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Invites a user to the current company",
        "tags": [
          "Configuration - Users"
        ]
      }
    },
    "/api/v{version}/configuration/users/pendingInvitations": {
      "get": {
        "consumes": [],
        "operationId": "UsersConfiguration_GetPendingInvitations",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[UserInvitationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets a paginated list of pending invitations for the current company",
        "tags": [
          "Configuration - Users"
        ]
      }
    },
    "/api/v{version}/configuration/users/removeCompanyAccess/{userCompanyIdentifier}": {
      "delete": {
        "consumes": [],
        "operationId": "UsersConfiguration_DeleteCompanyAccess",
        "parameters": [
          {
            "description": "The the relation identifier between the user and the company",
            "format": "int64",
            "in": "path",
            "name": "userCompanyIdentifier",
            "required": true,
            "type": "integer"
          },
          {
            "description": "When a user must be deleted because he will remain without companies, this parameter must be true",
            "in": "query",
            "name": "removeUserIfBecomesOrphan",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the user access to the company into the user-company relation identifier",
        "tags": [
          "Configuration - Users"
        ]
      }
    },
    "/api/v{version}/configuration/users/timeZone": {
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "UsersConfiguration_UserTimeZone",
        "parameters": [
          {
            "in": "body",
            "name": "timeZone",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTimeZoneApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[UserApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the user time zone configuration with the time zone passed as parameter.\r\nSet an empty time zone id to use the default company time zone.",
        "tags": [
          "Time zone"
        ]
      }
    },
    "/api/v{version}/configuration/vat": {
      "get": {
        "consumes": [],
        "operationId": "VatModesConfiguration_GetIrpfModes",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[VatModeApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of IRPF estimation modes",
        "tags": [
          "Configuration - Common"
        ]
      }
    },
    "/api/v{version}/configuration/vat/{modeId}": {
      "get": {
        "consumes": [],
        "operationId": "VatModesConfiguration_GetIrpfMode",
        "parameters": [
          {
            "description": "The identifier of the mode to retrieve",
            "format": "int64",
            "in": "path",
            "name": "modeId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[VatModeApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the configuration for the mode with the given ID",
        "tags": [
          "Configuration - Common"
        ]
      }
    },
    "/api/v{version}/configuration/workinghoursregistry": {
      "get": {
        "consumes": [],
        "operationId": "WorkingHoursRegistryConfiguration_GetMaxWorkingDayHours",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[WorkingHoursRegistryConfigurationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the number of hours that a user can work in a single day.",
        "tags": [
          "Configuration - WorkingHoursRegistry"
        ]
      }
    },
    "/api/v{version}/entities": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "Entities_Post",
        "parameters": [
          {
            "description": "The information of the entity to create",
            "in": "body",
            "name": "entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new entity",
        "tags": [
          "Entities"
        ]
      }
    },
    "/api/v{version}/entities/customers": {
      "get": {
        "consumes": [],
        "operationId": "EntityCustomers_Get",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of customers for the current company",
        "tags": [
          "Entities - Customers"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "EntityCustomers_Post",
        "parameters": [
          {
            "description": "The information of the entity to create",
            "in": "body",
            "name": "entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new entity",
        "tags": [
          "Entities - Customers"
        ]
      }
    },
    "/api/v{version}/entities/customers/aggregated": {
      "delete": {
        "consumes": [],
        "operationId": "AggregatedCustomersEntity_Delete",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the association between the aggregated customers entity and the company. \r\nThe entity is not deleted and can be setted as aggregated customers entity later.",
        "tags": [
          "Entities - Customers - Aggregated"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "AggregatedCustomersEntity_Get",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the aggregated customers entity for a company",
        "tags": [
          "Entities - Customers - Aggregated"
        ]
      },
      "post": {
        "consumes": [],
        "operationId": "AggregatedCustomersEntity_Post",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates the default the aggregated customers entity for a company",
        "tags": [
          "Entities - Customers - Aggregated"
        ]
      }
    },
    "/api/v{version}/entities/customers/aggregated/{entityId}": {
      "put": {
        "consumes": [],
        "operationId": "AggregatedCustomersEntity_Put",
        "parameters": [
          {
            "description": "The identifier of the entity to retrieve",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Set the given entity as aggregated customers entity",
        "tags": [
          "Entities - Customers - Aggregated"
        ]
      }
    },
    "/api/v{version}/entities/customers/search": {
      "get": {
        "consumes": [],
        "operationId": "EntityCustomers_Search",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Searches the current company entities",
        "tags": [
          "Entities - Customers"
        ]
      }
    },
    "/api/v{version}/entities/customers/search/nif": {
      "get": {
        "consumes": [],
        "operationId": "EntityCustomers_SearchByNif",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "exactMatch",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Searches the current company entities by nif",
        "tags": [
          "Entities - Customers"
        ]
      }
    },
    "/api/v{version}/entities/customers/{entityId}": {
      "delete": {
        "consumes": [],
        "operationId": "EntityCustomers_Delete",
        "parameters": [
          {
            "description": "The identifier of the entity to remove",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Bypass the remittance validation that checks \r\n            if any remittance receipt is assigned to the entity to delete. Default to false.",
            "in": "query",
            "name": "bypassRemittanceValidation",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the entity with the given identifier",
        "tags": [
          "Entities - Customers"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "EntityCustomers_GetEntity",
        "parameters": [
          {
            "description": "The identifier of the entity to retrieve",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the entity information for the given entity id",
        "tags": [
          "Entities - Customers"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "EntityCustomers_Put",
        "parameters": [
          {
            "description": "The identifier of the entity to update",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the entity to update",
            "in": "body",
            "name": "entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given entity",
        "tags": [
          "Entities - Customers"
        ]
      }
    },
    "/api/v{version}/entities/customers/{entityId}/attach": {
      "post": {
        "consumes": [],
        "operationId": "EntityCustomers_Attach",
        "parameters": [
          {
            "description": "The identifier of the customer to attach files to",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Attaches a file or files to the given customer",
        "tags": [
          "Entities - Customers"
        ]
      }
    },
    "/api/v{version}/entities/providers": {
      "get": {
        "consumes": [],
        "operationId": "EntityProviders_Get",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of providers for the current company",
        "tags": [
          "Entities - Providers"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "EntityProviders_Post",
        "parameters": [
          {
            "description": "The information of the entity to create",
            "in": "body",
            "name": "entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new entity",
        "tags": [
          "Entities - Providers"
        ]
      }
    },
    "/api/v{version}/entities/providers/search": {
      "get": {
        "consumes": [],
        "operationId": "EntityProviders_Search",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Searches the current company entities",
        "tags": [
          "Entities - Providers"
        ]
      }
    },
    "/api/v{version}/entities/providers/search/nif": {
      "get": {
        "consumes": [],
        "operationId": "EntityProviders_SearchByNif",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "exactMatch",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Searches the current company entities by nif",
        "tags": [
          "Entities - Providers"
        ]
      }
    },
    "/api/v{version}/entities/providers/{entityId}": {
      "delete": {
        "consumes": [],
        "operationId": "EntityProviders_Delete",
        "parameters": [
          {
            "description": "The identifier of the entity to remove",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the entity with the given identifier",
        "tags": [
          "Entities - Providers"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "EntityProviders_GetEntity",
        "parameters": [
          {
            "description": "The identifier of the entity to retrieve",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the entity information for the given entity id",
        "tags": [
          "Entities - Providers"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "EntityProviders_Put",
        "parameters": [
          {
            "description": "The identifier of the entity to update",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the entity to update",
            "in": "body",
            "name": "entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given entity",
        "tags": [
          "Entities - Providers"
        ]
      }
    },
    "/api/v{version}/entities/providers/{entityId}/attach": {
      "post": {
        "consumes": [],
        "operationId": "EntityProviders_Attach",
        "parameters": [
          {
            "description": "The identifier of the provider to attach files to",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Attaches a file or files to the given provider",
        "tags": [
          "Entities - Providers"
        ]
      }
    },
    "/api/v{version}/entities/search": {
      "get": {
        "consumes": [],
        "operationId": "Entities_Search",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Searches the current company entities",
        "tags": [
          "Entities"
        ]
      }
    },
    "/api/v{version}/entities/search/nif": {
      "get": {
        "consumes": [],
        "operationId": "Entities_SearchByNif",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "exactMatch",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Searches the current company entities by NIF",
        "tags": [
          "Entities"
        ]
      }
    },
    "/api/v{version}/entities/{entityId}": {
      "delete": {
        "consumes": [],
        "operationId": "Entities_Delete",
        "parameters": [
          {
            "description": "The identifier of the entity to remove",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Bypass the remittance validation that checks if any remittance receipt is assigned to the entity to delete. Default to false.",
            "in": "query",
            "name": "bypassRemittanceValidation",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the entity with the given identifier",
        "tags": [
          "Entities"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "Entities_GetEntity",
        "parameters": [
          {
            "description": "The identifier of the entity to retrieve",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the entity information for the given entity id",
        "tags": [
          "Entities"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "Entities_Put",
        "parameters": [
          {
            "description": "The identifier of the entity to update",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the entity to update",
            "in": "body",
            "name": "entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EntityApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given entity",
        "tags": [
          "Entities"
        ]
      }
    },
    "/api/v{version}/entities/{entityId}/attach": {
      "post": {
        "consumes": [],
        "operationId": "Entities_Attach",
        "parameters": [
          {
            "description": "The identifier of the entity to attach files to",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Attaches a file or files to the given entity",
        "tags": [
          "Entities"
        ]
      }
    },
    "/api/v{version}/entities/{entityId}/attachments": {
      "get": {
        "consumes": [],
        "operationId": "Entities_Attachments",
        "parameters": [
          {
            "description": "The identifier of the entity to attach files to",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "description": "",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the list of attachments of this entity",
        "tags": [
          "Entities"
        ]
      }
    },
    "/api/v{version}/entities/{entityId}/bankaccounts": {
      "get": {
        "consumes": [],
        "operationId": "EntityBankAccounts_GetList",
        "parameters": [
          {
            "description": "The identifier of the entity to obtain its bank accounts",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[EntityBankAccountApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the bank accounts associated to an entity",
        "tags": [
          "Entities - Bank accounts"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "EntityBankAccounts_NewEntityBankAccount",
        "parameters": [
          {
            "description": "The information of the entity bank account to create",
            "in": "body",
            "name": "entityBankAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityBankAccountApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EntityBankAccountApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new entity bank account",
        "tags": [
          "Entities - Bank accounts"
        ]
      }
    },
    "/api/v{version}/entities/{entityId}/bankaccounts/{entityBankAccountId}": {
      "delete": {
        "consumes": [],
        "operationId": "EntityBankAccounts_Delete",
        "parameters": [
          {
            "description": "The identifier of the entity to remove its bank account",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The identifier of the entity bank account to remove",
            "format": "int64",
            "in": "path",
            "name": "entityBankAccountId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the entity with the given identifier",
        "tags": [
          "Entities - Bank accounts"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "EntityBankAccounts_GetEntityBankAccount",
        "parameters": [
          {
            "description": "The identifier of the entity to obtain its bank accounts - not used -",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The identifier of the entity bank accountId to get",
            "format": "int64",
            "in": "path",
            "name": "entityBankAccountId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EntityBankAccountApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the bank accounts associated to an entity",
        "tags": [
          "Entities - Bank accounts"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "EntityBankAccounts_Put",
        "parameters": [
          {
            "description": "The identifier of the entityBankAccount to update",
            "format": "int64",
            "in": "path",
            "name": "entityBankAccountId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the entityBankAccount to update",
            "in": "body",
            "name": "entityBankAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityBankAccountApiModel"
            }
          },
          {
            "description": "The information of the entity associated",
            "format": "int64",
            "in": "path",
            "name": "entityId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[EntityBankAccountApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given entity bank account for the entityId",
        "tags": [
          "Entities - Bank accounts"
        ]
      }
    },
    "/api/v{version}/files": {
      "get": {
        "consumes": [],
        "operationId": "Files_Get",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of files and folders under the main folder",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/v{version}/files/certified/{fileId}/originals": {
      "get": {
        "consumes": [],
        "operationId": "Files_GetCertificationOriginals",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "fileId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of files whose are the original ones for the given certification file",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/v{version}/files/download/{fileId}": {
      "get": {
        "consumes": [],
        "operationId": "Files_DownloadItem",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "fileId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Downloads the contents of the given file",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/v{version}/files/folder": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "Files_CreateFolder",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "folder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFolderApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new folder with the given information",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/v{version}/files/folder/{parentFolder}": {
      "get": {
        "consumes": [],
        "operationId": "Files_GetChilds",
        "parameters": [
          {
            "in": "path",
            "name": "parentFolder",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of files and folders under the given parent folder",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/v{version}/files/folder/{parentFolder}/upload": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "Files_UploadFileToFolder",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "parentFolder",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The file contents to upload",
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Uploads a file or files to the given folder",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/v{version}/files/sign": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "Files_SignFile",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "fileInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignFileRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[SignFileTaskApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Signs a file asynchronously",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/v{version}/files/upload": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "Files_UploadFile",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The file contents to upload",
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Uploads a file or files to the route folder",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/v{version}/files/{fileId}": {
      "delete": {
        "consumes": [],
        "operationId": "Files_Delete",
        "parameters": [
          {
            "description": "The identifier of the file / folder to remove",
            "format": "int64",
            "in": "path",
            "name": "fileId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the file / folder with the given identifier",
        "tags": [
          "Files"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "Files_GetItem",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "fileId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[FileApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of files and folders under the given parent folder",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/v{version}/import/importData": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "ImportData_ImportFileData",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "importFileConfiguration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportFileRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ImportFileTaskApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Imports data from an uploaded file asynchronously",
        "tags": [
          "ImportData"
        ]
      }
    },
    "/api/v{version}/import/preview": {
      "get": {
        "consumes": [],
        "operationId": "ImportData_Get",
        "parameters": [
          {
            "enum": [
              "Customers",
              "Suppliers",
              "Products",
              "ProductsStockControl"
            ],
            "in": "query",
            "name": "importType",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filename",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ImportedPreviewDataApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the preview data of the file that will be imported",
        "tags": [
          "ImportData"
        ]
      }
    },
    "/api/v{version}/integrations/entities/companyProfile": {
      "get": {
        "consumes": [],
        "operationId": "EinformaIntegration_CompanyProfile",
        "parameters": [
          {
            "description": "A field that can be formatted either as a valid Spanish NIF (ex: A00000000) or a UID (ex: HyEyLl2sh0pk20ECa-og7Q).\r\n            A UID-like string will come from the NIF field returned by the predictive search results.\"\r\n            A valid NIF string will be used when the API method is invoked directly from the 'Add new client' autocomplete feature of the NIF webform field.",
            "in": "query",
            "name": "nif",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[CompanyFullInfoApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the company matching the requested NIF/UID",
        "tags": [
          "Integrations - Entities fiscal data"
        ]
      }
    },
    "/api/v{version}/integrations/entities/latestCompanyChanges": {
      "get": {
        "consumes": [],
        "operationId": "EinformaIntegration_LatestCompanyChanges",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "nif",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[CompanyLatestChangesApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the company latest changes for a given NIF/UID",
        "tags": [
          "Integrations - Entities fiscal data"
        ]
      }
    },
    "/api/v{version}/integrations/entities/predictiveSearch": {
      "get": {
        "consumes": [],
        "operationId": "EinformaIntegration_PredictiveSearch",
        "parameters": [
          {
            "description": "The name or part of the name of the company we are looking for. Ex: \"Contasimple\"",
            "in": "query",
            "name": "searchTerm",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[PredictiveSearchResult]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns all company names matching the requested string.",
        "tags": [
          "Integrations - Entities fiscal data"
        ]
      }
    },
    "/api/v{version}/me": {
      "get": {
        "consumes": [],
        "description": "Returns the current user and company information",
        "operationId": "Me_Get",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[MeApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the information for the current user and company",
        "tags": [
          "Me"
        ]
      }
    },
    "/api/v{version}/me/avatar": {
      "delete": {
        "consumes": [],
        "operationId": "Me_DeleteAvatar",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes the user avatar image",
        "tags": [
          "Me"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "Me_Avatar",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the user avatar image",
        "tags": [
          "Me"
        ]
      }
    },
    "/api/v{version}/me/companies": {
      "get": {
        "consumes": [],
        "operationId": "MyCompanies_GetCompanies",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[CompanyApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the current user companies",
        "tags": [
          "Me - Companies"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "MyCompanies_Create",
        "parameters": [
          {
            "in": "body",
            "name": "company",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCompanyApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[CompanyApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new company for the current user",
        "tags": [
          "Me - Companies"
        ]
      }
    },
    "/api/v{version}/me/companies/lightweight": {
      "get": {
        "consumes": [],
        "operationId": "MyCompanies_GetCompaniesLightweight",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[CompanyLightweightApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the current user companies (lightweight response)",
        "tags": [
          "Me - Companies"
        ]
      }
    },
    "/api/v{version}/me/companies/{id}": {
      "delete": {
        "consumes": [],
        "operationId": "MyCompanies_Delete",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes the user company passed as parameter",
        "tags": [
          "Me - Companies"
        ]
      }
    },
    "/api/v{version}/me/company": {
      "get": {
        "consumes": [],
        "operationId": "MyCompanies_GetCurrent",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[CompanyApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the current company information",
        "tags": [
          "Me - Companies"
        ]
      }
    },
    "/api/v{version}/me/company/avatar": {
      "delete": {
        "consumes": [],
        "operationId": "MyCompanies_DeleteAvatar",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes the current company avatar image",
        "tags": [
          "Me - Companies"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "MyCompanies_Avatar",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the current company avatar image",
        "tags": [
          "Me - Companies"
        ]
      }
    },
    "/api/v{version}/me/company/avatar/{companyId}": {
      "get": {
        "consumes": [],
        "operationId": "MyCompanies_Avatar",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "companyId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the company avatar image",
        "tags": [
          "Me - Companies"
        ]
      }
    },
    "/api/v{version}/me/company/configure": {
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "MyCompanies_Configure",
        "parameters": [
          {
            "in": "body",
            "name": "configuration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigureCompanyApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[CompanyApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the current company fiscal information",
        "tags": [
          "Me - Companies"
        ]
      }
    },
    "/api/v{version}/me/company/domain/configuration": {
      "get": {
        "consumes": [],
        "operationId": "CompanyDomainConfiguration_Get",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[CompanyDomainConfigurationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the current company information",
        "tags": [
          "Me - Companies - Domain configuration"
        ]
      }
    },
    "/api/v{version}/me/company/lightweight/{id}": {
      "get": {
        "consumes": [],
        "operationId": "MyCompanies_GetLightweight",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[CompanyLightweightApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the current company information (lightweight version)",
        "tags": [
          "Me - Companies"
        ]
      }
    },
    "/api/v{version}/me/company/limits": {
      "get": {
        "consumes": [],
        "operationId": "MyCompanies_GetLimits",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[LimitsApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the limits for the current company",
        "tags": [
          "Me"
        ]
      }
    },
    "/api/v{version}/me/company/timeZone": {
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "MyCompanies_CompanyTimeZone",
        "parameters": [
          {
            "in": "body",
            "name": "timeZone",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTimeZoneApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[CompanyApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the company time zone configuration with the time zone passed as parameter",
        "tags": [
          "Time zone"
        ]
      }
    },
    "/api/v{version}/me/company/{id}": {
      "get": {
        "consumes": [],
        "operationId": "MyCompanies_Get",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[CompanyApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the current company information",
        "tags": [
          "Me - Companies"
        ]
      }
    },
    "/api/v{version}/me/modules/banks": {
      "get": {
        "consumes": [],
        "operationId": "Me_CheckBanksModule",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Checks if the banks module is enabled",
        "tags": [
          "Me - Modules"
        ]
      }
    },
    "/api/v{version}/me/modules/banks/enable": {
      "post": {
        "consumes": [],
        "operationId": "Me_EnableBanksModule",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Enables the banks module for the current user",
        "tags": [
          "Me - Modules"
        ]
      }
    },
    "/api/v{version}/me/password": {
      "patch": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "Me_UpdatePassword",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePasswordApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[UserApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the current user password",
        "tags": [
          "Me"
        ]
      }
    },
    "/api/v{version}/me/permissions": {
      "get": {
        "consumes": [],
        "description": "Returns the current user's permission set over the current company",
        "operationId": "Me_Permissions",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[PermissionsApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the current user / company permissions",
        "tags": [
          "Me"
        ]
      }
    },
    "/api/v{version}/me/personalShareLink": {
      "get": {
        "consumes": [],
        "operationId": "Me_GetPersonalShareLink",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[String]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets a personal link to share an invitation to contasimple",
        "tags": [
          "Me"
        ]
      }
    },
    "/api/v{version}/me/token": {
      "post": {
        "consumes": [],
        "operationId": "MeAutologinToken_Create",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[AutologinTokenModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new autologin-token for the currently logged-in user",
        "tags": [
          "Me"
        ]
      }
    },
    "/api/v{version}/me/user": {
      "delete": {
        "consumes": [],
        "operationId": "Users_Delete",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Deletes the user by itself. This operation is only allowed when the user has no companies.",
        "tags": [
          "Users"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "Users_GetCurrent",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[UserApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the current user information",
        "tags": [
          "Me"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "description": "Returns the current user",
        "operationId": "Users_Put",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[UserApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the information for the currently logged-in user",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v{version}/messages/support/templates": {
      "get": {
        "consumes": [],
        "operationId": "SupportMessageTemplate_List",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[SupportMessageTemplateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of templates",
        "tags": [
          "Messages - Support templates"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "SupportMessageTemplate_Post",
        "parameters": [
          {
            "description": "The information of the template to create",
            "in": "body",
            "name": "template",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupportMessageTemplateApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[SupportMessageTemplateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new template",
        "tags": [
          "Messages - Support templates"
        ]
      }
    },
    "/api/v{version}/messages/support/templates/categories": {
      "get": {
        "consumes": [],
        "operationId": "SupportMessageTemplate_CategoriesList",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[String]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of template categories",
        "tags": [
          "Messages - Support templates"
        ]
      }
    },
    "/api/v{version}/messages/support/templates/category": {
      "get": {
        "consumes": [],
        "operationId": "SupportMessageTemplate_CategoryList",
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[SupportMessageTemplateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of templates for the given category",
        "tags": [
          "Messages - Support templates"
        ]
      }
    },
    "/api/v{version}/messages/support/templates/search": {
      "get": {
        "consumes": [],
        "operationId": "SupportMessageTemplate_Search",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[SupportMessageTemplateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Searches the templates matching the given query",
        "tags": [
          "Messages - Support templates"
        ]
      }
    },
    "/api/v{version}/messages/support/templates/{templateId}": {
      "delete": {
        "consumes": [],
        "operationId": "SupportMessageTemplate_Delete",
        "parameters": [
          {
            "description": "The identifier of the template to remove",
            "format": "int64",
            "in": "path",
            "name": "templateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the template with the given identifier",
        "tags": [
          "Messages - Support templates"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "SupportMessageTemplate_Get",
        "parameters": [
          {
            "description": "The identifier of the template to retrieve",
            "format": "int64",
            "in": "path",
            "name": "templateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[SupportMessageTemplateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the template information for the given template id",
        "tags": [
          "Messages - Support templates"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "SupportMessageTemplate_Put",
        "parameters": [
          {
            "description": "The identifier of the template to update",
            "format": "int64",
            "in": "path",
            "name": "templateId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the template to update",
            "in": "body",
            "name": "template",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupportMessageTemplateApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[SupportMessageTemplateApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given template",
        "tags": [
          "Messages - Support templates"
        ]
      }
    },
    "/api/v{version}/notes": {
      "get": {
        "consumes": [],
        "operationId": "Notes_Get",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[NoteApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of notes for the current user",
        "tags": [
          "Notes"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "Notes_Post",
        "parameters": [
          {
            "description": "The information of the note to create",
            "in": "body",
            "name": "note",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[NoteApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new note",
        "tags": [
          "Notes"
        ]
      }
    },
    "/api/v{version}/notes/search": {
      "get": {
        "consumes": [],
        "operationId": "Notes_Search",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[NoteApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of notes for the current user",
        "tags": [
          "Notes"
        ]
      }
    },
    "/api/v{version}/notes/{noteId}": {
      "delete": {
        "consumes": [],
        "operationId": "Notes_Delete",
        "parameters": [
          {
            "description": "The identifier of the note to remove",
            "format": "int64",
            "in": "path",
            "name": "noteId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the note with the given identifier",
        "tags": [
          "Notes"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "Notes_GetNote",
        "parameters": [
          {
            "description": "The identifier of the note to retrieve",
            "format": "int64",
            "in": "path",
            "name": "noteId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[NoteApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the note information for the given note id",
        "tags": [
          "Notes"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "Notes_Put",
        "parameters": [
          {
            "description": "The identifier of the note to update",
            "format": "int64",
            "in": "path",
            "name": "noteId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the note to update",
            "in": "body",
            "name": "note",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[NoteApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given note",
        "tags": [
          "Notes"
        ]
      }
    },
    "/api/v{version}/notifications": {
      "get": {
        "consumes": [],
        "operationId": "Notifications_List",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[NotificationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of notifications for the current user and company",
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/v{version}/notifications/markAsRead": {
      "post": {
        "consumes": [],
        "operationId": "Notifications_MarkAllAsRead",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Marks all the user / company notifications as read",
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/v{version}/notifications/preferences": {
      "get": {
        "consumes": [],
        "operationId": "NotificationsPreferences_Get",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[NotificationsAccountPreferencesApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the current user and company notification preferences",
        "tags": [
          "Notifications - Preferences"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "NotificationsPreferences_Save",
        "parameters": [
          {
            "in": "body",
            "name": "preferences",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationsAccountPreferencesApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[NotificationsAccountPreferencesApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Stores the given preferences for the current user and company",
        "tags": [
          "Notifications - Preferences"
        ]
      }
    },
    "/api/v{version}/notifications/push": {
      "get": {
        "consumes": [],
        "operationId": "PushTokens_Get",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[PushToken]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets current user and companies tokens.",
        "tags": [
          "Notifications - Push"
        ]
      }
    },
    "/api/v{version}/notifications/push/clear/{device}": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "PushTokens_Clear",
        "parameters": [
          {
            "description": "",
            "enum": [
              "Web",
              "iOS",
              "Android"
            ],
            "in": "path",
            "name": "device",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "token",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushTokenApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Clears the given registration token, only if the current user has it.\r\nIf the user does not have this token, the request is ignored, otherwise all the \r\nconfiguration with the given token are removed.",
        "tags": [
          "Notifications - Push"
        ]
      }
    },
    "/api/v{version}/notifications/push/company": {
      "get": {
        "consumes": [],
        "operationId": "PushTokens_GetCompany",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[PushToken]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets current company push tokens.",
        "tags": [
          "Notifications - Push"
        ]
      }
    },
    "/api/v{version}/notifications/push/company/{id}": {
      "get": {
        "consumes": [],
        "operationId": "PushTokens_GetCompany",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[PushToken]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets current company push tokens.",
        "tags": [
          "Notifications - Push"
        ]
      }
    },
    "/api/v{version}/notifications/push/register/{device}": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "PushTokens_Register",
        "parameters": [
          {
            "description": "",
            "enum": [
              "Web",
              "iOS",
              "Android"
            ],
            "in": "path",
            "name": "device",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "token",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushTokenApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Adds the given token information to the current user and it's companies",
        "tags": [
          "Notifications - Push"
        ]
      }
    },
    "/api/v{version}/notifications/push/unregister/company/{device}": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "PushTokens_UnregisterCompany",
        "parameters": [
          {
            "description": "",
            "enum": [
              "Web",
              "iOS",
              "Android"
            ],
            "in": "path",
            "name": "device",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "token",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushTokenApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the current company registrations for the given token and device",
        "tags": [
          "Notifications - Push"
        ]
      }
    },
    "/api/v{version}/notifications/push/unregister/user/{device}": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "PushTokens_UnregisterUser",
        "parameters": [
          {
            "description": "",
            "enum": [
              "Web",
              "iOS",
              "Android"
            ],
            "in": "path",
            "name": "device",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "token",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushTokenApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the current user registrations for the given token and device",
        "tags": [
          "Notifications - Push"
        ]
      }
    },
    "/api/v{version}/notifications/push/unregister/{device}": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "PushTokens_Unregister",
        "parameters": [
          {
            "description": "",
            "enum": [
              "Web",
              "iOS",
              "Android"
            ],
            "in": "path",
            "name": "device",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "token",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushTokenApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the registrations for the given token and device",
        "tags": [
          "Notifications - Push"
        ]
      }
    },
    "/api/v{version}/notifications/push/user": {
      "get": {
        "consumes": [],
        "operationId": "PushTokens_GetUser",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[PushToken]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets current user push tokens.",
        "tags": [
          "Notifications - Push"
        ]
      }
    },
    "/api/v{version}/notifications/unread": {
      "get": {
        "consumes": [],
        "operationId": "Notifications_ListUnread",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[NotificationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of unread notifications for the current user and company",
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/v{version}/notifications/unread/count": {
      "get": {
        "consumes": [],
        "operationId": "Notifications_UnreadCount",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the current user and company unread notifications count",
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/v{version}/notifications/{id}": {
      "get": {
        "consumes": [],
        "operationId": "Notifications_Get",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[NotificationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the given notification",
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/v{version}/notifications/{id}/markAsRead": {
      "post": {
        "consumes": [],
        "operationId": "Notifications_MarkAsRead",
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Marks the given notification as read",
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/v{version}/notificationsAndMessages/unread": {
      "get": {
        "consumes": [],
        "operationId": "NotificationsAndMessages_Unread",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[NotificationsAndMessagesApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the current user and company unread notifications and messages",
        "tags": [
          "Notifications",
          "Messages"
        ]
      }
    },
    "/api/v{version}/notificationsAndMessages/unread/count": {
      "get": {
        "consumes": [],
        "operationId": "NotificationsAndMessages_UnreadCount",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[NotificationsAndMessagesCountApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the current user and company unread notifications and messages count",
        "tags": [
          "Notifications",
          "Messages"
        ]
      }
    },
    "/api/v{version}/oauth/token": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "Provides authentication services for the API. <br /><br />The supported grant types are:<br /><br /><strong>signup</strong>:&nbsp;Used for creating new users (this type requires to provide the '<strong>username</strong>' and '<strong>password</strong>' arguments). To accept an invitation to a company from the user creation, the '<strong>invitation_id</strong>' and '<strong>invitation_token</strong>' arguments are required).<br /><strong>password</strong>:&nbsp;Used for authentication (this type requires to provide the '<strong>username</strong>' and '<strong>password</strong>' arguments).<br /><strong>facebook</strong>:&nbsp;Used for authentication with a Facebook token (this type requires to provide the '<strong>token</strong>' argument).<br /><strong>google</strong>:&nbsp;Used for authentication with a Google token (this type requires to provide the '<strong>token</strong>' argument).<br /><strong>apple</strong>:&nbsp;Used for authentication with a Apple JWT (this type requires to provide the '<strong>token</strong>' argument).<br /><strong>refresh_token</strong>:&nbsp;Used for getting a new access token (this type requires to provide the '<strong>refresh_token</strong>' argument).<br /><strong>impersonate</strong>:&nbsp;Used for changing the current user (this type requires to provide the '<strong>user</strong>' and '<strong>refresh_token</strong>' arguments).<br /><strong>change_company</strong>:&nbsp;Used for changing the current company (this type requires to provide the '<strong>company</strong>' and '<strong>refresh_token</strong>' arguments).<br /><strong>authentication_key</strong>:&nbsp;Used for accessing a user account without providing username and password (this type requires to provide the '<strong>key</strong>' argument). This grant type appends on the API response a client_id and client_secret.<br /><strong>autologin_token</strong>:&nbsp;Used for accessing a user account without providing username and password (this type requires to provide the '<strong>token</strong>' argument).<br />",
        "operationId": "Authentication_Post",
        "parameters": [
          {
            "default": "2",
            "description": "The API version",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The type of execution to process",
            "enum": [
              "signup",
              "password",
              "facebook",
              "google",
              "apple",
              "refresh_token",
              "impersonate",
              "change_company",
              "authentication_key",
              "autologin_token"
            ],
            "in": "formData",
            "name": "grant_type",
            "required": true,
            "type": "string",
            "uniqueItems": true
          },
          {
            "description": "The identifier of the client requesting the service",
            "in": "formData",
            "name": "client_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "The secret of the client requesting the service",
            "in": "formData",
            "name": "client_secret",
            "required": false,
            "type": "string"
          },
          {
            "description": "A comma separated list of requested scopes",
            "in": "formData",
            "name": "scope",
            "required": false,
            "type": "string"
          },
          {
            "description": "The refresh token to get new access token",
            "in": "formData",
            "name": "refresh_token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The username to register or authenticate on the service",
            "in": "formData",
            "name": "username",
            "required": false,
            "type": "string"
          },
          {
            "description": "The password to register or authenticate on the service",
            "in": "formData",
            "name": "password",
            "required": false,
            "type": "string"
          },
          {
            "description": "The 3rd party service access token",
            "in": "formData",
            "name": "token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The identifier of the company to change to",
            "format": "int64",
            "in": "formData",
            "name": "company",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The identifier of the new user to impersonate",
            "format": "int64",
            "in": "formData",
            "name": "user",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The user authentication key",
            "in": "formData",
            "name": "key",
            "required": false,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/AuthenticationResponse"
            }
          }
        },
        "summary": "Provides authentication services for the API",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v{version}/onboarding/markSeen": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "Onboarding_MarkSeen",
        "parameters": [
          {
            "description": "The version number in string format. Ex: \"1.65.0\"",
            "in": "body",
            "name": "versionNumber",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnboardingVersionApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Persists onboarding version seen by the user",
        "tags": [
          "Onboarding"
        ]
      }
    },
    "/api/v{version}/payments/promocodes/{code}": {
      "get": {
        "consumes": [],
        "operationId": "PaymentPromocodes_GetPaymentPromocode",
        "parameters": [
          {
            "description": "The identifier of the note to retrieve",
            "in": "path",
            "name": "code",
            "required": true,
            "type": "string"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[PaymentPromocode]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the payment promocode",
        "tags": [
          "Payment promocodes"
        ]
      }
    },
    "/api/v{version}/payments/promocodes/{paymentPromocodeId}/isUsedBy/{companyId}": {
      "get": {
        "consumes": [],
        "operationId": "PaymentPromocodes_IsPaymentPromocodeUsedByCompany",
        "parameters": [
          {
            "description": "Id of the promotion",
            "format": "int64",
            "in": "path",
            "name": "paymentPromocodeId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Id of the company",
            "format": "int64",
            "in": "path",
            "name": "companyId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Checks if a promotional code has been already used by a company",
        "tags": [
          "Payment promocodes"
        ]
      }
    },
    "/api/v{version}/products": {
      "get": {
        "consumes": [],
        "operationId": "Products_Get",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeInactive",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeFullFamilyPath",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[ProductApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of products for the current company",
        "tags": [
          "Products"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "Products_Post",
        "parameters": [
          {
            "description": "The information of the product to create",
            "in": "body",
            "name": "product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProductApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ProductApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new product",
        "tags": [
          "Products"
        ]
      }
    },
    "/api/v{version}/products/categories": {
      "get": {
        "consumes": [],
        "operationId": "ProductsCategories_Get",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[CategoryApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of categories for the current company",
        "tags": [
          "Products - Categories"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "ProductsCategories_Post",
        "parameters": [
          {
            "description": "The information of the category to create",
            "in": "body",
            "name": "category",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[CategoryApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new category",
        "tags": [
          "Products - Categories"
        ]
      }
    },
    "/api/v{version}/products/categories/getFullPath": {
      "get": {
        "consumes": [],
        "operationId": "ProductsCategories_GetFullPath",
        "parameters": [
          {
            "description": "The identifier of the category",
            "format": "int64",
            "in": "query",
            "name": "categoryId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[String]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the full path for the category with the given identifier",
        "tags": [
          "Products - Categories"
        ]
      }
    },
    "/api/v{version}/products/categories/{categoryId}": {
      "delete": {
        "consumes": [],
        "operationId": "ProductsCategories_Delete",
        "parameters": [
          {
            "description": "The identifier of the category to remove",
            "format": "int64",
            "in": "path",
            "name": "categoryId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the category with the given identifier and his subcategories if exists",
        "tags": [
          "Products - Categories"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "ProductsCategories_GetCategory",
        "parameters": [
          {
            "description": "The identifier of the category to retrieve",
            "format": "int64",
            "in": "path",
            "name": "categoryId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[CategoryApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the category information for the given category id",
        "tags": [
          "Products - Categories"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "ProductsCategories_Put",
        "parameters": [
          {
            "description": "The identifier of the category to update",
            "format": "int64",
            "in": "path",
            "name": "categoryId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the category to update",
            "in": "body",
            "name": "category",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[CategoryApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given category",
        "tags": [
          "Products - Categories"
        ]
      }
    },
    "/api/v{version}/products/dashboardStockAlerts": {
      "get": {
        "consumes": [],
        "operationId": "Products_GetDashboardStockAlerts",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[ProductApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of stock alerts that with the property show on dashboard enabled",
        "tags": [
          "Products - Stock alerts"
        ]
      }
    },
    "/api/v{version}/products/search": {
      "get": {
        "consumes": [],
        "operationId": "Products_Search",
        "parameters": [
          {
            "description": "Filter to find by",
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "description": "Include inactive products",
            "in": "query",
            "name": "includeInactive",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Get the full family path of the product",
            "in": "query",
            "name": "includeFullFamilyPath",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[ProductApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Searches the current company products",
        "tags": [
          "Products"
        ]
      }
    },
    "/api/v{version}/products/stockOperations": {
      "get": {
        "consumes": [],
        "operationId": "ProductStockOperations_List",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "numRows",
            "required": false,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[ProductStockOperationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of stock operations for the current company",
        "tags": [
          "Products - Stock operations"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "ProductStockOperations_Post",
        "parameters": [
          {
            "description": "The information of the operation",
            "in": "body",
            "name": "operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductStockOperationRequestApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ProductStockOperationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Inserts a new product stock operation",
        "tags": [
          "Products - Stock operations"
        ]
      }
    },
    "/api/v{version}/products/stockOperations/productsWithStockControlledAtDeliveryNoteOperations": {
      "get": {
        "consumes": [],
        "operationId": "ProductStockOperations_GetProductsWithStockControlledAtDeliveryNoteStockOperations",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "A list of delivery note ids",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "deliveryNotesList.deliveryNoteId",
            "required": false,
            "type": "array"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[DeliveryNoteProductInfoApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the products which the stock was controlled in delivery note operations (create/edit a delivery note with stock control activated,\r\ncreate a delivery note from an estimate with the stock control activated or delivery notes invoicing with the stock control activated)",
        "tags": [
          "Products - Stock operations"
        ]
      }
    },
    "/api/v{version}/products/stockOperations/stockAlreadyControlledFromEstimateToDeliveryNote/{estimateId}": {
      "get": {
        "consumes": [],
        "operationId": "ProductStockOperations_GetStockHasAlreadyControlledFromEstimateToDeliveryNote",
        "parameters": [
          {
            "description": "The estimate id.",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns if the stock has already been controlled creating a delivery note from the estimate passed as parameter",
        "tags": [
          "Products - Stock operations"
        ]
      }
    },
    "/api/v{version}/products/stockOperations/stockAlreadyControlledFromEstimateToInvoice/{estimateId}": {
      "get": {
        "consumes": [],
        "operationId": "ProductStockOperations_GetStockHasAlreadyControlledFromEstimateToInvoice",
        "parameters": [
          {
            "description": "The estimate id.",
            "format": "int64",
            "in": "path",
            "name": "estimateId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns if the stock has already been controlled creating an invoice from the estimate passed as parameter",
        "tags": [
          "Products - Stock operations"
        ]
      }
    },
    "/api/v{version}/products/{productId}": {
      "delete": {
        "consumes": [],
        "operationId": "Products_Delete",
        "parameters": [
          {
            "description": "The identifier of the product to remove",
            "format": "int64",
            "in": "path",
            "name": "productId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Int64]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Removes the product with the given identifier",
        "tags": [
          "Products"
        ]
      },
      "get": {
        "consumes": [],
        "operationId": "Products_GetProduct",
        "parameters": [
          {
            "description": "The identifier of the product to retrieve",
            "format": "int64",
            "in": "path",
            "name": "productId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Get the full family path of the product",
            "in": "query",
            "name": "includeFullFamilyPath",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ProductApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the product information for the given product id",
        "tags": [
          "Products"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "Products_Put",
        "parameters": [
          {
            "description": "The identifier of the product to update",
            "format": "int64",
            "in": "path",
            "name": "productId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The information of the product to update",
            "in": "body",
            "name": "product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProductApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[ProductApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Updates the given product",
        "tags": [
          "Products"
        ]
      }
    },
    "/api/v{version}/public/estimate": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "PublicEstimate_GenerateEstimate",
        "parameters": [
          {
            "in": "body",
            "name": "estimate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicEstimateApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Generates a new estimate PDF",
        "tags": [
          "Public - Estimates"
        ]
      }
    },
    "/api/v{version}/public/estimate/languages": {
      "get": {
        "consumes": [],
        "operationId": "PublicEstimate_GetSupportedLanguages",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[String]"
            }
          }
        },
        "summary": "Gets the list of languages supported for the public estimate generation",
        "tags": [
          "Public - Estimates"
        ]
      }
    },
    "/api/v{version}/public/estimate/logo": {
      "post": {
        "consumes": [],
        "operationId": "PublicEstimate_UploadPublicLogo",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[UploadPublicLogoResponseApiModel]"
            }
          }
        },
        "summary": "Uploads a logo to be used when generating a public estimate",
        "tags": [
          "Public - Estimates"
        ]
      }
    },
    "/api/v{version}/public/invoice": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "PublicInvoices_GenerateInvoice",
        "parameters": [
          {
            "in": "body",
            "name": "invoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicInvoiceApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Generates a new invoice PDF",
        "tags": [
          "Public - Invoices"
        ]
      }
    },
    "/api/v{version}/public/invoice/languages": {
      "get": {
        "consumes": [],
        "operationId": "PublicInvoices_GetSupportedLanguages",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[String]"
            }
          }
        },
        "summary": "Gets the list of languages supported for the public invoice generation",
        "tags": [
          "Public - Invoices"
        ]
      }
    },
    "/api/v{version}/public/invoice/logo": {
      "post": {
        "consumes": [],
        "operationId": "PublicInvoices_UploadPublicLogo",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[UploadPublicLogoResponseApiModel]"
            }
          }
        },
        "summary": "Uploads a logo to be used when generating a public invoice",
        "tags": [
          "Public - Invoices"
        ]
      }
    },
    "/api/v{version}/tasks": {
      "get": {
        "consumes": [],
        "operationId": "Tasks_GetAsyncTasks",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[TaskStatusApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of tasks for the given company",
        "tags": [
          "Tasks"
        ]
      }
    },
    "/api/v{version}/tasks/{taskId}/status": {
      "get": {
        "consumes": [],
        "operationId": "Tasks_GetAsyncTaskStatus",
        "parameters": [
          {
            "description": "The task identifier to retrieve the information",
            "format": "int64",
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "integer"
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[TaskStatusApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the status of the given task",
        "tags": [
          "Tasks"
        ]
      }
    },
    "/api/v{version}/timezone": {
      "get": {
        "consumes": [],
        "operationId": "TimeZone_List",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[TimeZoneInformationApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the list of time zones",
        "tags": [
          "Time zone"
        ]
      }
    },
    "/api/v{version}/timezone/companyTimeZone": {
      "get": {
        "consumes": [],
        "operationId": "TimeZone_CompanyTimeZone",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[String]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the company time zone",
        "tags": [
          "Time zone"
        ]
      }
    },
    "/api/v{version}/timezone/currentTimezone": {
      "get": {
        "consumes": [],
        "operationId": "TimeZone_CurrentTimeZone",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[String]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the current time zone configured for the user. If the user time zone is not defined, returns the time zone\r\nconfigured for the company",
        "tags": [
          "Time zone"
        ]
      }
    },
    "/api/v{version}/timezone/localTimeNow": {
      "get": {
        "consumes": [],
        "operationId": "TimeZone_LocalTimeNow",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DateTime]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the \"now\" server date converted to the user time zone. If the user time zone is not defined, returns the \"now\" server date\r\nconverted to the company time zone.",
        "tags": [
          "Time zone"
        ]
      }
    },
    "/api/v{version}/timezone/userTimeZone": {
      "get": {
        "consumes": [],
        "operationId": "TimeZone_UserTimeZone",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[String]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Gets the user time zone",
        "tags": [
          "Time zone"
        ]
      }
    },
    "/api/v{version}/timezone/utcNow": {
      "get": {
        "consumes": [],
        "operationId": "TimeZone_UtcNow",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[DateTime]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the \"now\" server date in UTC",
        "tags": [
          "Time zone"
        ]
      }
    },
    "/api/v{version}/unitTypes": {
      "get": {
        "consumes": [],
        "operationId": "UnitTypes_Get",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiListResult[UnitTypeApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Returns the available unit types",
        "tags": [
          "UnitTypes"
        ]
      }
    },
    "/api/v{version}/users": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "Users_Post",
        "parameters": [
          {
            "description": "The information of the user to create",
            "in": "body",
            "name": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[UserApiModel]"
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "summary": "Creates a new user (requires authorization with required role)",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v{version}/users/create": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "Users_CreateUser",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUserApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "summary": "Creates a new user on the platform (to be used by external sources)",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v{version}/users/rememberPassword": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "operationId": "RememberPassword_RememberPassword",
        "parameters": [
          {
            "description": "The information of the user to remember password",
            "in": "body",
            "name": "email",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RememberPasswordApiModel"
            }
          },
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[Boolean]"
            }
          }
        },
        "summary": "Sends a remember password email to the given user email",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v{version}/version": {
      "get": {
        "consumes": [],
        "operationId": "ContasimpleV_Version",
        "parameters": [
          {
            "default": "2",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The request language",
            "enum": [
              "es-ES",
              "en-US",
              "ca-ES"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string",
            "uniqueItems": true
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult[VersionApiModel]"
            }
          }
        },
        "summary": "Gets the current version of the API",
        "tags": [
          "Contasimple"
        ]
      }
    }
  },
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "oauth2": {
      "authorizationUrl": "https://www.contasimple.com/login.aspx",
      "description": "Contasimple",
      "flow": "accessCode",
      "scopes": {
        "offline_access": "Allows the client to call API while offline"
      },
      "tokenUrl": "https://api.contasimple.com/api/v2/oauth/token",
      "type": "oauth2"
    }
  },
  "swagger": "2.0"
}
